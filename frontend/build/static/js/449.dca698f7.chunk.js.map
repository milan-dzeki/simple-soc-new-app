{"version":3,"file":"static/js/449.dca698f7.chunk.js","mappings":"yIACA,OAAgB,UAAY,iCAAiC,gBAAkB,uCAAuC,gBAAkB,uCAAuC,IAAM,4BCArL,GAAgB,MAAQ,yBAAyB,YAAc,+BAA+B,iBAAmB,qC,SCkBjH,EAX6B,SAACA,GAC5B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,GAAAC,OAAKC,EAAAA,MAAY,KAAAD,OAAIC,EAAOJ,EAAMK,YAAaC,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,MAAIL,UAAWE,EAAAA,YAAmBE,SAC/BN,EAAMQ,aAETD,EAAAA,EAAAA,KAAA,OAAKL,UAAWE,EAAAA,qBAGtB,ECYA,EAfiC,SAACJ,GAChC,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAS,GAAAC,OAAKC,EAAAA,UAAgB,KAAAD,OAAIC,EAAOJ,EAAMS,SAAQ,KAAAN,OAAIC,EAAOJ,EAAMU,QAASJ,SAAA,CACpFN,EAAMW,cAAgBX,EAAMQ,WAAaR,EAAMY,iBAC9CL,EAAAA,EAAAA,KAACM,EAAS,CACRL,UAAWR,EAAMQ,UACjBH,UAAWL,EAAMY,kBAErBL,EAAAA,EAAAA,KAAA,WAASL,UAAWE,EAAAA,gBAAuBE,SACxCN,EAAMM,aAIf,C,oICpBA,EAJ0BQ,EAAAA,EAAAA,OAAa,CACrCC,QAAQ,GAADZ,OAAKa,EAAAA,EAAO,e,8BCHrB,EAAsB,uBAAtB,EAAyD,6BAAzD,EAAkG,6BAAlG,EAA2I,6BAA3I,EAAyL,kCAAzL,EAAsO,4BAAtO,EAAgR,+B,6BCiDhR,EAlC6B,SAAChB,GAC5B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAWE,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAGL,UAAWE,EAAiBE,SAC5BN,EAAMiB,WAEThB,EAAAA,EAAAA,MAAA,KAAGC,UAAWE,EAAiBE,SAAA,CAAC,aACpBY,EAAAA,EAAAA,GAAqBlB,EAAMmB,eAEvClB,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAiBE,SAAA,EAC/BL,EAAAA,EAAAA,MAAA,OAAKC,UAAWE,EAAsBE,SAAA,CAElCN,EAAMoB,YAAcpB,EAAMoB,WAAWC,MAAQrB,EAAMsB,aACjDrB,EAAAA,EAAAA,MAACsB,EAAAA,GAAI,CAACrB,UAAWE,EAAiBoB,GAAE,SAAArB,OAAWH,EAAMoB,WAAWC,KAAMf,SAAA,CAAC,QAC/DN,EAAMoB,WAAWK,YAK3BzB,EAAM0B,SACJnB,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACrB,UAAWE,EAAiBoB,GAAE,SAAArB,OAAWH,EAAM0B,QAASpB,SAAC,kBAMrEC,EAAAA,EAAAA,KAAA,UAAQL,UAAWE,EAAoBuB,QAAS,kBAAM3B,EAAM4B,mBAAmB5B,EAAM6B,GAAG,EAACvB,SAAC,oBAMlG,E,oBCsFA,EAzH6B,WAC3B,IAAQwB,GAAaC,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAjDH,SAERI,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAwCL,EAAAA,EAAAA,UAAwB,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,GAAFD,EAAA,GAAiBA,EAAA,IACpCE,GAAwBR,EAAAA,EAAAA,UAAyB,IAAGS,GAAAP,EAAAA,EAAAA,GAAAM,EAAA,GAA7CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0CZ,EAAAA,EAAAA,UAAwB,MAAKa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAhEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGoC,OAFpDxB,GAAe,GAETkB,EAAQO,aAAaC,QAAQ,kBAAiBJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAG3BG,EAAAA,IAAsB,IAAK,CAChDC,QAAS,CACPC,cAAc,UAADjE,OAAYsD,MAE1B,KAAD,EAAAC,EAAAG,EAAAQ,KAJMV,EAAID,EAAJC,KAKRW,QAAQC,IAAIZ,GACZb,EAAQa,EAAKa,cAAcX,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAE3BnB,EAAgBmB,EAAAY,GAAeC,QAAQf,KAAKgB,SAAS,QAGvDpC,GAAe,GAAO,yBAAAsB,EAAAe,OAAA,GAAApB,EAAA,mBACvB,kBAlBc,OAAAJ,EAAAyB,MAAA,KAAAC,UAAA,MAoBfC,EAAAA,EAAAA,YAAU,WACR5B,GACF,GAAG,IAEH,IAAMvB,GAAqBoD,EAAAA,EAAAA,cAAY,SAACC,GACtC/B,EAAiB+B,EACnB,GAAG,IAEGC,GAAoBF,EAAAA,EAAAA,cAAY,WACpC9B,EAAiB,KACnB,GAAG,IAEGiC,GAAcH,EAAAA,EAAAA,cAAW3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA6B,IAAA,IAAA3B,EAAA,OAAAH,EAAAA,EAAAA,KAAAM,MAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,UAC1Bd,EAAc,CAADoC,EAAAtB,KAAA,QACiC,OAAhDrB,EAAgB,gCAAgC2C,EAAAC,OAAA,iBAIE,OADpD/C,GAAe,GACTkB,EAAQO,aAAaC,QAAQ,kBAAiBoB,EAAAvB,KAAA,EAAAuB,EAAAtB,KAAA,EAE5CG,EAAAA,OAAyB,IAAD/D,OAAK8C,GAAiB,CAClDkB,QAAS,CACPC,cAAc,UAADjE,OAAYsD,MAE1B,KAAD,EAEFX,GAAQ,SAAAgB,GAAI,OAAIA,EAAKyB,QAAO,SAAAhB,GAAG,OAAIA,EAAIlD,MAAQ4B,CAAa,GAAC,IAAEoC,EAAAtB,KAAA,iBAAAsB,EAAAvB,KAAA,GAAAuB,EAAAZ,GAAAY,EAAA,SAE/D3C,EAAgB2C,EAAAZ,GAAee,SAAS7B,KAAKgB,SAAS,QAExDzB,EAAiB,MACjBX,GAAe,GAAO,yBAAA8C,EAAAT,OAAA,GAAAQ,EAAA,mBACrB,CAACnC,IAEJ,OACEhD,EAAAA,EAAAA,MAAAwF,EAAAA,SAAA,CAAAnF,SAAA,CAEsB,OAAlB2C,IAA2BX,IACzBrC,EAAAA,EAAAA,MAACyF,EAAAA,QAAY,CACXC,cAAc,EACdC,KAAwB,OAAlB3C,IAA2BX,EACjCuD,MAAM,0BACNC,KAAK,4CACLC,QAASb,EAAkB5E,SAAA,EAC3BC,EAAAA,EAAAA,KAACyF,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,cACdC,QAAQ,SACRxE,QAASuD,KACX3E,EAAAA,EAAAA,KAACyF,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,eACdC,QAAQ,SACRxE,QAASwD,OAKfrD,IACEvB,EAAAA,EAAAA,KAAC6F,EAAAA,EAAa,CACZ3F,QAAQ,mBACRE,cAAc,EACd0F,SAAS,EACT3F,MAAM,MACNF,UAAU,gBACVI,eAAe,cAAaN,SAE1BgC,GACE/B,EAAAA,EAAAA,KAAC+F,EAAAA,EAAO,IACPhE,GAA+B,IAAhBO,EAAK0D,OAErB1D,EAAK2D,KAAI,SAAAjC,GACT,OACEhE,EAAAA,EAAAA,KAACkG,EAAS,CAER5E,GAAI0C,EAAIlD,IACRJ,QAASsD,EAAItD,QACbK,WAAYQ,EAAST,IACrBD,WAAYmD,EAAInD,WAChBD,UAAWoD,EAAIpD,UACfO,OAAQ6C,EAAI7C,OACZgF,QAASnC,EAAImC,QACb9E,mBAAoBA,GARf2C,EAAIlD,IAUf,KAdEd,EAAAA,EAAAA,KAAA,KAAGoG,MAAO,CAACjG,MAAO,OAAQL,UAAW,SAAUuG,SAAU,UAAUtG,SAAC,gBAqBpF,C","sources":["webpack://frontend/./src/styles/components/shared/pageContainer.module.scss?24e2","webpack://frontend/./src/styles/components/shared/pageTitle.module.scss?3300","components/Shared/PageTitle.tsx","components/Shared/PageContainer.tsx","axios/axiosActivityLogs.ts","webpack://frontend/./src/styles/components/activityLogsPage/singleLog.module.scss?f1b5","components/ActivityLogsPage/SingleLog.tsx","pages/ActivityLogsPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pageContainer_container__JU78m\",\"container__flex\":\"pageContainer_container__flex__mQNaW\",\"container__data\":\"pageContainer_container__data__70LWJ\",\"big\":\"pageContainer_big__iMyUq\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"pageTitle_title__Di7Rk\",\"title__text\":\"pageTitle_title__text__jkIUE\",\"title__underline\":\"pageTitle_title__underline__A2NOq\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/shared/pageTitle.module.scss';\r\n\r\ninterface Props {\r\n  titleText: string;\r\n  textAlign: \"title__center\" | \"title__left\";\r\n}\r\n\r\nconst PageTitle: FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${styles.title} ${styles[props.textAlign]}`}>\r\n      <h1 className={styles.title__text}>\r\n        {props.titleText}\r\n      </h1>\r\n      <div className={styles.title__underline}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;","import { FC } from 'react';\r\nimport styles from '../../styles/components/shared/pageContainer.module.scss';\r\nimport PageTitle from './PageTitle';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  width: \"medium\" | \"big\";\r\n  display: \"container__block\" | \"container__flex\";\r\n  children: React.ReactNode;\r\n  hasPageTitle: boolean;\r\n  titleText?: string;\r\n  titleTextAlign?: \"title__center\" | \"title__left\";\r\n}\r\n\r\nconst PageContainer: FC<Props> = (props) => {\r\n  return (\r\n    <main className={`${styles.container} ${styles[props.display]} ${styles[props.width]}`}>\r\n      {props.hasPageTitle && props.titleText && props.titleTextAlign && (\r\n        <PageTitle\r\n          titleText={props.titleText}\r\n          textAlign={props.titleTextAlign} />\r\n      )}\r\n      <section className={styles.container__data}>\r\n        {props.children}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PageContainer;","import axios from 'axios';\r\nimport baseUrl from './baseUrl';\r\n\r\nconst axiosActivityLogs = axios.create({\r\n  baseURL: `${baseUrl}/activity`\r\n});\r\n\r\nexport default axiosActivityLogs;","// extracted by mini-css-extract-plugin\nexport default {\"log\":\"singleLog_log__TqQn4\",\"log__text\":\"singleLog_log__text__fKTmw\",\"log__date\":\"singleLog_log__date__fEbVo\",\"log__btns\":\"singleLog_log__btns__f7CIN\",\"log__btns_left\":\"singleLog_log__btns_left__us45A\",\"log__btn\":\"singleLog_log__btn__6UtZv\",\"log__delete\":\"singleLog_log__delete__mHPLx\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/activityLogsPage/singleLog.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatDateToFullTime } from '../../utils/formatDateToFullTime';\r\n\r\ninterface Props {\r\n  id: string;\r\n  logText: string;\r\n  authUserId: string;\r\n  targetUser: {_id: string; fullName: string} | undefined;\r\n  createdAt: Date;\r\n  postId?: string;\r\n  photoId?: string;\r\n  onPrepateDeleteLog: (logId: string) => void;\r\n}\r\n\r\nconst SingleLog: FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles.log}>\r\n      <p className={styles.log__text}>\r\n        {props.logText}\r\n      </p>\r\n      <p className={styles.log__date}>\r\n        created: {formatDateToFullTime(props.createdAt)}\r\n      </p>\r\n      <div className={styles.log__btns}>\r\n        <div className={styles.log__btns_left}>\r\n          {\r\n            props.targetUser && props.targetUser._id !== props.authUserId && (\r\n              <Link className={styles.log__btn} to={`/user/${props.targetUser._id}`}>\r\n                view {props.targetUser.fullName}\r\n              </Link>\r\n            )\r\n          }\r\n          {\r\n            props.postId && (\r\n              <Link className={styles.log__btn} to={`/post/${props.postId}`}>\r\n                view post\r\n              </Link>\r\n            )\r\n          }\r\n        </div>\r\n        <button className={styles.log__delete} onClick={() => props.onPrepateDeleteLog(props.id)}>\r\n          delete log\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleLog;","import { FC, useState, useEffect, useCallback } from 'react';\r\nimport axiosActivityLogs from '../axios/axiosActivityLogs';\r\n// types\r\nimport { IActivityLog } from '../types/activityLogsPage/types';\r\n// hooks\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n// components\r\nimport PageContainer from '../components/Shared/PageContainer';\r\nimport Spinner from '../components/Shared/Spinner';\r\nimport SingleLog from '../components/ActivityLogsPage/SingleLog';\r\nimport DefaultModal from '../components/Modals/DefaultModal';\r\nimport ModalBtn from '../components/Buttons/ModalBtn';\r\n\r\nconst ActivityLogsPage: FC = () => {\r\n  const { authUser } = useTypedSelector(state => state.auth);\r\n\r\n  const [logsLoading, setLogsLoading] = useState(false);\r\n  const [logsErrorMsg, setLogsErrorMsg] = useState<string | null>(null);\r\n  const [logs, setLogs] = useState<IActivityLog[]>([]);\r\n  const [logToDeleteId, setLogToDeleteId] = useState<string | null>(null);\r\n\r\n  const onGetLogs = async() => {\r\n    setLogsLoading(true);\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosActivityLogs.get(\"/\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      console.log(data);\r\n      setLogs(data.acitvityLogs);\r\n    } catch(error) {\r\n      setLogsErrorMsg((error as any).reponse.data.message);\r\n    }\r\n\r\n    setLogsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onGetLogs();\r\n  }, []);\r\n\r\n  const onPrepateDeleteLog = useCallback((logId: string): void => {\r\n    setLogToDeleteId(logId);\r\n  }, []);\r\n\r\n  const onCancelDeleteLog = useCallback((): void => {\r\n    setLogToDeleteId(null);\r\n  }, []);\r\n\r\n  const onDeleteLog = useCallback(async(): Promise<void> => {\r\n    if(!logToDeleteId) {\r\n      setLogsErrorMsg(\"Can't find log id. Try again\");\r\n      return;\r\n    }\r\n    setLogsLoading(true);\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n    try {\r\n      await axiosActivityLogs.delete(`/${logToDeleteId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      setLogs(prev => prev.filter(log => log._id !== logToDeleteId));\r\n    } catch(error) {\r\n      setLogsErrorMsg((error as any).response.data.message);\r\n    }\r\n    setLogToDeleteId(null);\r\n    setLogsLoading(false);\r\n  }, [logToDeleteId]);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        logToDeleteId !== null && !logsLoading && (\r\n          <DefaultModal\r\n            isErrorModal={false}\r\n            show={logToDeleteId !== null && !logsLoading}\r\n            title=\"Preparing to delete log\"\r\n            text=\"Are you sure you want to delete this log?\"\r\n            onClose={onCancelDeleteLog}>\r\n            <ModalBtn\r\n              btnType=\"button\"\r\n              btnCustomType=\"btn__cancel\"\r\n              btnText=\"cancel\"\r\n              onClick={onCancelDeleteLog} />\r\n            <ModalBtn\r\n              btnType=\"button\"\r\n              btnCustomType=\"btn__confirm\"\r\n              btnText=\"delete\"\r\n              onClick={onDeleteLog} />\r\n          </DefaultModal>\r\n        )\r\n      }\r\n      {\r\n        authUser && (\r\n          <PageContainer\r\n            display=\"container__block\"\r\n            hasPageTitle={true}\r\n            loading={false}\r\n            width=\"big\"\r\n            titleText=\"Activity Logs\"\r\n            titleTextAlign=\"title__left\">\r\n            {\r\n              logsLoading\r\n              ? <Spinner />\r\n              : !logsLoading && logs.length === 0\r\n              ? <p style={{width: \"100%\", textAlign: \"center\", fontSize: \"1.5rem\"}}>No logs</p>\r\n              : logs.map(log => {\r\n                return (\r\n                  <SingleLog\r\n                    key={log._id}\r\n                    id={log._id}\r\n                    logText={log.logText}\r\n                    authUserId={authUser._id}\r\n                    targetUser={log.targetUser}\r\n                    createdAt={log.createdAt}\r\n                    postId={log.postId}\r\n                    photoId={log.photoId}\r\n                    onPrepateDeleteLog={onPrepateDeleteLog} />\r\n                );\r\n              })\r\n            }\r\n          </PageContainer>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActivityLogsPage;"],"names":["props","_jsxs","className","concat","styles","textAlign","children","_jsx","titleText","display","width","hasPageTitle","titleTextAlign","PageTitle","axios","baseURL","baseUrl","logText","formatDateToFullTime","createdAt","targetUser","_id","authUserId","Link","to","fullName","postId","onClick","onPrepateDeleteLog","id","authUser","useTypedSelector","state","auth","_useState","useState","_useState2","_slicedToArray","logsLoading","setLogsLoading","_useState3","_useState4","setLogsErrorMsg","_useState5","_useState6","logs","setLogs","_useState7","_useState8","logToDeleteId","setLogToDeleteId","onGetLogs","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","_yield$axiosActivityL","data","wrap","_context","prev","next","localStorage","getItem","axiosActivityLogs","headers","Authorization","sent","console","log","acitvityLogs","t0","reponse","message","stop","apply","arguments","useEffect","useCallback","logId","onCancelDeleteLog","onDeleteLog","_callee2","_context2","abrupt","filter","response","_Fragment","DefaultModal","isErrorModal","show","title","text","onClose","ModalBtn","btnType","btnCustomType","btnText","PageContainer","loading","Spinner","length","map","SingleLog","photoId","style","fontSize"],"sourceRoot":""}