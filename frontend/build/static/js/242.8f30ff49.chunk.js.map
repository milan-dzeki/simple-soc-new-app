{"version":3,"file":"static/js/242.8f30ff49.chunk.js","mappings":"gNACA,GAAgB,OAAS,4BAA4B,gBAAkB,qCAAqC,iBAAmB,sCAAsC,sBAAwB,2CAA2C,cAAgB,mCAAmC,kBAAoB,uCAAuC,uBAAyB,4CAA4C,wBAA0B,6CAA6C,oBAAsB,yCAAyC,aAAe,kCAAkC,qBAAuB,0CAA0C,iBAAmB,sCAAsC,kBAAoB,uCAAuC,wBAA0B,6CAA6C,uBAAyB,4CAA4C,kBAAoB,uCAAuC,cAAgB,mCAAmC,uBAAyB,4CAA4C,aAAe,kCAAkC,kBAAoB,uCAAuC,kBAAoB,uCAAuC,2BAA6B,iD,sECC7vCA,EAAuD,CAClEC,YAAa,CACXC,YAAaC,EAAAA,EAAAA,WACbC,aAAcC,EAAAA,EAAAA,YACdC,WAAY,CACVC,GAAI,cACJC,KAAM,cACNC,YAAa,kBAEfC,MAAO,CACLC,WAAW,EACXC,SAAU,cACVC,UAAW,eAEbC,WAAY,CACVC,UAAU,GAEZC,SAAS,EACTC,SAAS,EACTC,MAAO,GACPC,OAAO,EACPC,SAAU,2CCtBd,EAAwB,yCAAxB,EAAgF,gDAAhF,EAA8I,+CAA9I,EAA0M,8CAA1M,EAA4Q,qDAA5Q,EAAqV,qD,6BCiB/UC,EAAuC,SAACC,GAC5C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAMN,EAAMM,KACZC,SAAS,OACTC,QAASR,EAAMQ,QACfC,aAAa,KACfR,EAAAA,EAAAA,MAAA,QAAMS,UAAWC,EAAcC,SAAUZ,EAAMY,SAAST,SAAA,EACtDC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAoBR,UAClCC,EAAAA,EAAAA,KAACS,EAAAA,GAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAd,EAAMe,MAAMpC,aAAW,IAC3BqC,WAAW,cACXC,aAAcjB,EAAMkB,4BACpBC,eAAgBnB,EAAMoB,8BACtBC,cAAerB,EAAMsB,kCAGtBtB,EAAMuB,UACLtB,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAmBR,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAiB,KAAAc,OAAId,GACnCe,UAAW1B,EAAM2B,eAAexB,SAAC,UAGnCC,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAiB,KAAAc,OAAId,GACnCiB,QAAS5B,EAAMQ,QAAQL,SAAC,mBASxC,EAEA,GAAe0B,EAAAA,EAAAA,MAAK9B,GC4UpB,EA1V+B,SAACC,GAC9B,IACE8B,EAOE9B,EAPF8B,iBACAC,EAME/B,EANF+B,qBACAC,EAKEhC,EALFgC,YACAC,EAIEjC,EAJFiC,cACAC,EAGElC,EAHFkC,mBACAC,EAEEnC,EAFFmC,qBACAC,EACEpC,EADFoC,yBAGFC,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GACtCI,GAA4CL,EAAAA,EAAAA,UAAwB,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlEE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA8DT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAtEE,EAAuBD,EAAA,GAAEE,EAA0BF,EAAA,GAE1DG,GAAkDb,EAAAA,EAAAA,UAAS,CACzDhC,MAAM,EACNS,OAAKD,EAAAA,EAAAA,GAAA,GAAMpC,KACX0E,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAHKE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAK9CG,GAAkDjB,EAAAA,EAAAA,UAI/C,CACDkB,QAAS,KACTC,QAAS,KACTC,UAAW,OACXC,GAAAnB,EAAAA,EAAAA,GAAAe,EAAA,GARKK,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAcxCG,GAA4BC,EAAAA,EAAAA,cAAY,WAC5Cb,GAA2B,EAC7B,GAAG,IAEGc,EAA4B,WAChCH,EAAqB,CACnBL,QAAS,KACTC,QAAS,KACTC,UAAW,MAEf,EAEMO,GAAiBF,EAAAA,EAAAA,aAAW,eAAAG,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EACjCb,EACAc,EACAC,EACAC,GAAsD,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEhD/C,EACJ9B,EAAMwD,QACNC,EACAc,EACAC,EACAC,GACA,KAAD,mBAAAE,EAAAG,OAAA,GAAAR,EAAA,KACF,gBAAAS,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAAiB,MAAA,KAAAC,UAAA,EAbiC,GAa/B,CAACtD,EAAkB9B,EAAMwD,UAEtB6B,GAA8BtB,EAAAA,EAAAA,cAAY,SAACN,EAAiBC,GAC5D1D,EAAMwD,QAKVK,EAAqB,CACnBL,QAASxD,EAAMwD,QACfC,QAAAA,EACAC,UAAAA,IAPAZ,EAAkB,2CAStB,GAAG,CAAC9C,EAAMwD,UAEJ8B,GAAqBvB,EAAAA,EAAAA,cAAWI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAkB,IAAA,OAAAnB,EAAAA,EAAAA,KAAAM,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EAC/B9C,EAAqB6B,EAAkBJ,QAAUI,EAAkBH,QAAUG,EAAkBF,WAAW,OAEhHM,IAA4B,wBAAAwB,EAAAV,OAAA,GAAAS,EAAA,KAC3B,CAACxD,EAAsB6B,IAEpB6B,GAAY1B,EAAAA,EAAAA,aAAW,eAAA2B,GAAAvB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsB,EAAMlC,GAAe,OAAAW,EAAAA,EAAAA,KAAAM,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EAC3C7C,EAAYhC,EAAMwD,QAAUC,GAAS,KAAD,mBAAAmC,EAAAd,OAAA,GAAAa,EAAA,KAC3C,gBAAAE,GAAA,OAAAH,EAAAP,MAAA,KAAAC,UAAA,EAF4B,GAE1B,CAACpD,EAAahC,EAAMwD,UAEjBsC,GAAc/B,EAAAA,EAAAA,aAAW,eAAAgC,GAAA5B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA2B,EAAMvC,GAAe,OAAAW,EAAAA,EAAAA,KAAAM,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EAC7C5C,EAAcjC,EAAMwD,QAAUC,GAAS,KAAD,mBAAAwC,EAAAnB,OAAA,GAAAkB,EAAA,KAC7C,gBAAAE,GAAA,OAAAH,EAAAZ,MAAA,KAAAC,UAAA,EAF8B,GAE5B,CAACnD,EAAejC,EAAMwD,UAEnB2C,GAAmBpC,EAAAA,EAAAA,aAAW,eAAAqC,GAAAjC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAgC,EAAM5C,EAAiBC,GAAiB,OAAAU,EAAAA,EAAAA,KAAAM,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACrE3C,EAAmBlC,EAAMwD,QAAUC,EAASC,GAAW,KAAD,mBAAA4C,EAAAxB,OAAA,GAAAuB,EAAA,KAC7D,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAjB,MAAA,KAAAC,UAAA,EAFmC,GAEjC,CAAClD,EAAoBlC,EAAMwD,UAExBiD,GAAqB1C,EAAAA,EAAAA,aAAW,eAAA2C,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsC,EAAMlD,EAAiBC,GAAiB,OAAAU,EAAAA,EAAAA,KAAAM,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACvE1C,EAAqBnC,EAAMwD,QAAUC,EAASC,GAAW,KAAD,mBAAAkD,EAAA9B,OAAA,GAAA6B,EAAA,KAC/D,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,EAFqC,GAEnC,CAACjD,EAAsBnC,EAAMwD,UAqB1BuD,GAAuBhD,EAAAA,EAAAA,cAAY,WACvCT,EAAqB,CACnBhD,MAAM,EACNS,OAAKD,EAAAA,EAAAA,GAAA,GAAMpC,IAEf,GAAG,IAEGwC,IAA8B6C,EAAAA,EAAAA,cAAY,SAACiD,GAC/C1D,GAAqB,SAAAsB,GACnB,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACP7D,OAAKD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA8D,EAAK7D,OAAK,IACbpC,aAAWmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN8D,EAAK7D,MAAMpC,aAAW,IACzBe,SAAS,EACTC,SAAS,OAIjB,GACF,GAAG,IAEGyB,IAAgC2C,EAAAA,EAAAA,cAAY,SAACiD,GACjD1D,GAAqB,SAAAsB,GACnB,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACP7D,OAAKD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA8D,EAAK7D,OAAK,IACbpC,aAAWmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN8D,EAAK7D,MAAMpC,aAAW,IACzBe,SAAS,OAIjB,GACF,GAAG,IAEG4B,IAA8ByC,EAAAA,EAAAA,cAAY,SAACkD,EAA4DD,GAC3G,IAAME,EAASD,EAAMC,OAErB5D,GAAqB,SAAAsB,GACnB,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACP7D,OAAKD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA8D,EAAK7D,OAAK,IACbpC,aAAWmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN8D,EAAK7D,MAAMpC,aAAW,IACzBiB,MAAOsH,EAAOtH,MACdC,MAAOqH,EAAOtH,MAAMuH,OAAOC,OAAS,OAI5C,GACF,GAAG,IAEGC,IAAyBtD,EAAAA,EAAAA,aAAW,eAAAuD,GAAAnD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAkD,EAAMN,GAAiC,IAAArH,EAAA,OAAAwE,EAAAA,EAAAA,KAAAM,MAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAGxB,GAFxDoC,EAAMQ,iBACN/E,GAAiB,GAEU,KADrB9C,EAAQyD,EAAkBtC,MAAMpC,YAAYiB,OACzCuH,OAAOC,OAAY,CAAAI,EAAA3C,KAAA,QAEF,OADxB/B,EAAkB,gCAClBJ,GAAiB,GAAO8E,EAAAE,OAAA,wBAAAF,EAAA3C,KAAA,EAGpBzC,EAA0BpC,EAAMwD,QAAUxD,EAAM2H,OAAO3H,EAAM4H,qBAAqBC,IAAKjI,GAAO,KAAD,EACnGmH,IACArE,GAAiB,GAAO,yBAAA8E,EAAA1C,OAAA,GAAAyC,EAAA,KACzB,gBAAAO,GAAA,OAAAR,EAAAnC,MAAA,KAAAC,UAAA,EAZyC,GAYvC,CAAC/B,EAAkBtC,MAAMpC,YAAYiB,MAAOI,EAAM4H,oBAAqB5H,EAAMwD,QAASpB,EAA0BpC,EAAM2H,OAAQZ,IAE3HgB,IAAwBhE,EAAAA,EAAAA,cAAY,WACxCjB,EAAkB,KACpB,GAAG,IAEH,OACE7C,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CASuB,OAAnB0C,IACEzC,EAAAA,EAAAA,KAAC4H,EAAAA,QAAY,CACX1H,KAAyB,OAAnBuC,EACNoF,cAAc,EACdC,MAAM,gBACNC,KAAMtF,EACNrC,QAASuH,GAAsB5H,UAC/BC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,UACdC,QAAQ,KACR3G,QAASmG,OAKe,OAA9BnE,EAAkBJ,SAAkD,OAA9BI,EAAkBH,SAAoD,OAAhCG,EAAkBF,YAC5FzD,EAAAA,EAAAA,MAAC+H,EAAAA,QAAY,CACX1H,KAAoC,OAA9BsD,EAAkBJ,SAAkD,OAA9BI,EAAkBH,SAAoD,OAAhCG,EAAkBF,UACpGuE,cAAc,EACdC,MAAM,qCACNC,KAAK,gDACL3H,QAASwD,EAA0B7D,SAAA,EACnCC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,cACdC,QAAQ,SACR3G,QAASoC,KACX5D,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,eACdC,QAAQ,SACR3G,QAAS0D,QAIjBrF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,OAAcR,SAAA,CAC3B8C,IACD7C,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAM2C,EACN1C,SAAS,OACTC,QAASsD,EACT0E,6BAA6B,KAE/BvI,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,gBAAuBR,SAAA,EACrCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,cAAqBR,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,iBAAyBiB,QAAS5B,EAAMyI,mBAAmBtI,SAAC,WAC5EC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,sBAA8BiB,QAxNtB,WAChCsB,GAA2B,EAC7B,EAsN2F/C,SAAC,mBAClFF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,mBAA0BR,SAAA,CAEtCH,EAAM4H,oBAAsB,IAC1BxH,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAAA,kBAAwB,KAAAc,OAAId,EAAAA,wBAC1CiB,QAAS5B,EAAM0I,UAAUvI,UACzBC,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,gBAAgBC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,2HAK/JlJ,EAAM4H,oBAAsB5H,EAAM2H,OAAOP,OAAS,IAChDhH,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAAA,kBAAwB,KAAAc,OAAId,EAAAA,yBAC1CiB,QAAS5B,EAAMmJ,UAAUhJ,UACzBC,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,gBAAgBC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,iIAKnK9I,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,oBAA2BR,UACzCC,EAAAA,EAAAA,KAAA,OAAKgJ,IAAKpJ,EAAM2H,OAAO3H,EAAM4H,qBAAqByB,MAAMC,WAAYC,IAAI,oBAG5EtJ,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,aAAmB,KAAAc,OAAIwB,EAA0BtC,EAAAA,qBAA8B,IAAKR,SAAA,EACrGF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,iBAAwBR,SAAA,EACtCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,kBAAyBR,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,wBAA+BR,UAC7CC,EAAAA,EAAAA,KAAA,OAAKgJ,IAAKpJ,EAAMwJ,KAAKC,iBAAmBC,EAAWH,IAAI,YAEzDtJ,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,uBAA8BR,SAAA,EAC5CC,EAAAA,EAAAA,KAACuJ,EAAAA,GAAI,CAACC,GAAE,SAAAnI,OAAWzB,EAAMwJ,KAAK3B,KAAOnH,UAAWC,EAAAA,uBAA8BR,SAC3EH,EAAMwJ,KAAKK,YAEdzJ,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,kBAAyBR,SACpCH,EAAM2H,OAAO3H,EAAM4H,qBAAqBkC,WAAYC,EAAAA,EAAAA,GAA4B/J,EAAM2H,OAAO3H,EAAM4H,qBAAqBkC,WAAa,YAI5I1J,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,cAAsBiB,QAAS5B,EAAMyI,mBAAmBtI,SAAC,kBACzEC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,uBAA+BiB,QAASkC,EAA0B3D,SAAC,uBAErFF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,aAAoBR,SAAA,CAEhCH,EAAMgK,YAAchK,EAAMoC,0BAA4BiB,EAAkB/C,OACtEF,EAAAA,EAAAA,KAACL,EAAyB,CACxBO,KAAM+C,EAAkB/C,KACxBS,MAAOsC,EAAkBtC,MACzBQ,QAASkB,EACTjC,QAASuG,EACT7F,4BAA6BA,GAC7BE,8BAA+BA,GAC/BE,4BAA6BA,GAC7BK,eAAgB0B,EAAkBtC,MAAMpC,YAAYkB,MACpDe,SAAUyG,MAIbhE,EAAkB/C,OACjBF,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,kBAAyBR,SACpCH,EAAM2H,OAAO3H,EAAM4H,qBAAqBjJ,aAAe,mBAK5DqB,EAAMgK,aAAe3G,EAAkB/C,OACrCF,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLd,UAAWC,EAAAA,kBACXiB,QA9NW,WAC3B,IAAMqI,EAAYjK,EAAM2H,OAAO3H,EAAM4H,qBAAqBjJ,aAAe,GAEzE2E,GAAqB,SAAAsB,GACnB,MAAO,CACLtE,MAAM,EACNS,OAAKD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA8D,EAAK7D,OAAK,IACbpC,aAAWmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN8D,EAAK7D,MAAMpC,aAAW,IACzBiB,MAAOqK,EACPtK,UAASsK,EACTpK,QAAOoK,MAIf,GACF,EA6MgD9J,UAC9BF,EAAAA,EAAAA,MAAA,OAAK0I,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,+QAAmR9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,wKAK1b9I,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,2BAAkCR,UAChDC,EAAAA,EAAAA,KAAC8J,EAAAA,EAAyB,CACxBC,cAAenK,EAAMwJ,KAAK3B,IAC1BuC,OAAQpK,EAAM2H,OAAO3H,EAAM4H,qBAAqBC,IAChDwC,MAAOrK,EAAM2H,OAAO3H,EAAM4H,qBAAqByC,MAC/CC,SAAUtK,EAAM2H,OAAO3H,EAAM4H,qBAAqB0C,SAClDC,gBAAiBtG,EACjBuG,uBAAwBnF,EACxBoF,WAAYhF,EACZiF,aAAc5E,EACd6E,cAAexE,EACfyE,gBAAiBnE,EACjBoE,iBAAkB7K,EAAM6K,mBAAoB,EAC5CC,qBAAsB9K,EAAM8K,uBAAwB,iBAOpE,C,6NCnYA,GAAgB,IAAM,8BAA8B,gBAAkB,0CAA0C,YAAc,sCAAsC,6BAA+B,uDAAuD,yBAA2B,mDAAmD,mBAAqB,6CAA6C,aAAe,uCAAuC,WAAa,qCAAqC,aAAe,uCAAuC,iBAAmB,2CAA2C,iBAAmB,2CAA2C,kBAAoB,4CAA4C,cAAgB,wCAAwC,oBAAsB,+C,SC6ClzB,EApCoC,SAAC9K,GACnC,OACEC,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,IAAU,KAAAc,OAAId,EAAOX,EAAMqI,UAAWlI,SAAA,EACvDF,EAAAA,EAAAA,MAAA,UACEuB,KAAK,SACLd,UAAWC,EAAAA,YACXiB,QAAS5B,EAAM+K,WAAW5K,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,iBAAwBR,SAEnB,iBAAlBH,EAAMqI,SACJpI,EAAAA,EAAAA,MAAA,OAAK0I,OAAO,eAAeC,KAAK,OAAOC,YAAY,IAAIC,QAAQ,YAAYkC,cAAc,QAAQC,eAAe,QAAQlC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMuI,OAAO,OAAOO,EAAE,gBAAgBN,KAAK,UAAcxI,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,4CAAgD9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,+DAAmE9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,6CAAiD9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,iEAC/Z,oBAAlBlJ,EAAMqI,SACNjI,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,gBAAgBC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,m3BACzI,iCAAlBlJ,EAAMqI,SACNjI,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMwI,KAAK,OAAOM,EAAE,mBAAuB9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,4NACnL,6BAAlBlJ,EAAMqI,SACNpI,EAAAA,EAAAA,MAAA,OAAK0I,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,oOAAwO9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,iPACrX,iBAAlBlJ,EAAMqI,SACNpI,EAAAA,EAAAA,MAAA,OAAK0I,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,uJAA2J9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,yCAC1TjJ,EAAAA,EAAAA,MAAA,OAAK0I,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAMwI,KAAK,OAAOM,EAAE,mBAAuB9I,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,6OAGxM9I,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,iBAAwBR,SACtCH,EAAMmI,QAEW,iBAAlBnI,EAAMqI,SAAgD,iCAAlBrI,EAAMqI,SAAgE,6BAAlBrI,EAAMqI,WAC9FjI,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,kBAAyBR,UACxCC,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,YAAYC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,yJAI5JlJ,EAAMG,WAGb,EC3CA,GAAgB,SAAW,2CAA2C,eAAiB,iDAAiD,eAAiB,iDAAiD,kBAAoB,oDAAoD,mBAAqB,qDAAqD,eAAiB,kD,UC+B7W,EAlB4C,SAACH,GAC3C,OACEC,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,SAAe,KAAAc,OAAIzB,EAAMM,KAAOK,EAAAA,eAAwB,GAAE,KAAAc,OAAId,EAAOX,EAAMU,YAAaP,SAAA,EACzGC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAMN,EAAMM,KACZC,SAAS,cACTC,QAASR,EAAMQ,WACjBJ,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,eAAsBR,SAElCH,EAAMkL,UAAUC,KAAI,SAAAC,GAClB,OAAOhL,EAAAA,EAAAA,KAAA,QAAsBwB,QAASwJ,EAAKC,OAAOlL,SAAEiL,EAAKjD,MAAvCiD,EAAKjD,KACzB,QAKV,E,4DC6QA,EAvQqC,SAACnI,GACpC,IAAMsL,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuDC,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAnFC,EAAWJ,EAAXI,YAAaC,EAAYL,EAAZK,aAAcC,EAAeN,EAAfM,gBACnC3J,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtD4J,EAAe1J,EAAA,GAAE2J,EAAkB3J,EAAA,GAC1CI,GAAgDL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxDwJ,EAAgBvJ,EAAA,GAAEwJ,EAAmBxJ,EAAA,GAE5CyJ,GAaIC,EAAAA,EAAAA,KAZFC,EAAkBF,EAAlBE,mBACAC,EAAmBH,EAAnBG,oBACAC,EAAWJ,EAAXI,YACAC,EAAuBL,EAAvBK,wBACAC,EAAsBN,EAAtBM,uBACAC,EAAuBP,EAAvBO,wBACAC,EAA6BR,EAA7BQ,8BACAC,EAA+BT,EAA/BS,gCACAC,EAA6BV,EAA7BU,8BACAC,EAAwBX,EAAxBW,yBACAC,EAAwBZ,EAAxBY,yBACAC,EAAab,EAAba,eAGFC,EAAAA,EAAAA,YAAU,WACLnB,IACDR,EAAS,IAAK,CAAE4B,SAAS,IACzB9B,GAAS+B,EAAAA,EAAAA,OAKX/B,GAASgC,EAAAA,EAAAA,OACX,GAAG,CAACtB,EAAiBV,EAAUE,IAE/B,IAAM+B,EAAiB,WACrBrB,GAAmB,EACrB,EAEMsB,EAAkB,WACtBtB,GAAmB,EACrB,EAsBMuB,EAAkB,CACtB,CACEtF,KAAM,WACNkD,OARe,WACjBrL,EAAM0N,aACNxB,GAAmB,EACrB,IASMyB,EAAmB,CACvB,CACExF,KAAM,iBACNkD,OAzB0B,WAC5BrL,EAAM4N,wBACN1B,GAAmB,EACrB,GAwBE,CACE/D,KAAM,kBACNkD,OAxB2B,WAC7BrL,EAAM6N,yBACN3B,GAAmB,EACrB,IAyBM4B,EAAe,CACnB,CACE3F,KAAM,iBACNkD,OAzC0B,WAC5BrL,EAAM+N,wBACN7B,GAAmB,EACrB,IA0CM8B,GAAmBjK,EAAAA,EAAAA,cAAY,WACnC4I,EAAuB3M,EAAMwJ,KAAK3B,IAAK7H,EAAMwJ,KAAKK,SACpD,GAAG,CAAC8C,EAAwB3M,EAAMwJ,KAAK3B,IAAK7H,EAAMwJ,KAAKK,WAEjDoE,GAAqBlK,EAAAA,EAAAA,cAAY,WACrCqI,GAAoB,EACtB,GAAG,IAEG8B,GAAoBnK,EAAAA,EAAAA,cAAY,WACpCqI,GAAoB,EACtB,GAAG,IAEG+B,GAAcpK,EAAAA,EAAAA,cAAY,WAC9B,IAAIqK,EAA8F,OACxE,YAAvBpO,EAAMqO,aACPD,EAAsB,UACS,0BAAvBpO,EAAMqO,aACdD,EAAsB,0BACU,sBAAvBpO,EAAMqO,eACfD,EAAsB,uBAExB9C,GAASgD,EAAAA,EAAAA,IAAUtO,EAAMwJ,KAAK3B,IAAKuG,IACnChC,GAAoB,EACtB,GAAG,CAACd,EAAUtL,EAAMqO,aAAcrO,EAAMwJ,KAAK3B,MAE7C,OAAGiE,GAAoB1L,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KAG7BtO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EAC4B,OAAxBqM,GAAiD,OAAjBT,GAAyBI,KACzDlM,EAAAA,EAAAA,MAAC+H,EAAAA,QAAY,CACX1H,KAA8B,OAAxBkM,GAAgCL,EACtClE,aAAsC,OAAxBuE,GAAiD,OAAjBT,EAC9C7D,MAA+B,OAAxBsE,GAAiD,OAAjBT,EAAwB,gBAAkBI,EAAmB,0BAA4B,GAChIhE,KAC0B,OAAxBqE,EACEA,EACiB,OAAjBT,EACAA,EACAI,EACA,4CACA,gBAEJ3L,QAC0B,OAAxBgM,EACEE,EACiB,OAAjBX,EACA,kBAAMT,GAASkD,EAAAA,EAAAA,MAAmB,EAClCrC,EACA+B,EACA,WAAa,EAChB/N,SAAA,EAE0B,OAAxBqM,GAAiD,OAAjBT,KAC/B3L,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,UACdC,QAAQ,KACR3G,QAAiC,OAAxB4K,EAA+BE,EAA0B,kBAAMpB,GAASkD,EAAAA,EAAAA,MAAmB,IAIxGrC,IACElM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,cACdC,QAAQ,SACR3G,QAASsM,KACX9N,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,eACdC,QAAQ,QACR3G,QAASuM,UAMG,OAAvB1B,EAAYgC,QAA4C,OAAzBhC,EAAYiC,WAC1CtO,EAAAA,EAAAA,KAACuO,EAAAA,QAAgB,CACfrO,KAA6B,OAAvBmM,EAAYgC,QAA4C,OAAzBhC,EAAYiC,SACjDnN,QAASgL,EACTqC,wBAAyBnC,EAAYiC,SACrClO,QAASoM,EACTiC,iBAAkBpC,EAAYoC,iBAC9BC,qBAAsBjC,EACtBkC,uBAAwBjC,EACxBkC,qBAAsBjC,EACtBkC,UAAWxC,EAAYyC,aACvBC,aAAc1C,EAAY2C,oBAC1BC,cAAerC,EACfsC,cAAerC,EACfsC,oBAAqBrC,KAEzBjN,EAAAA,EAAAA,MAAA,WAASS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,OAAa,KAAAc,OAAId,EAAAA,EAAAA,eAAuBR,SAAA,EAC7DC,EAAAA,EAAAA,KAACoP,EAAAA,EAAqB,CAAChG,KAAMxJ,EAAMwJ,OAEjCxJ,EAAMuB,SACJnB,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KAERtO,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,aAAoBR,SAAA,CAET,YAAvBH,EAAMqO,cAEJjO,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,eACRF,KAAK,UACL4C,WAAYwC,EAAepN,UAC3BC,EAAAA,EAAAA,KAACsP,EAAwB,CACvBpP,KAAM2L,EACNvL,UAAU,oBACVwK,UAAWuC,EACXjN,QAASgN,MAGbxN,EAAMqO,cAAuC,0BAAvBrO,EAAMqO,cAE5BjO,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,+BACRF,KAAK,iBACL4C,WAAYwC,EAAepN,UAC3BC,EAAAA,EAAAA,KAACsP,EAAwB,CACvBpP,KAAM2L,EACNvL,UAAU,qBACVwK,UAAWyC,EACXnN,QAASgN,MAGZxN,EAAMqO,cAAuC,sBAAvBrO,EAAMqO,cAE7BjO,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,2BACRF,KAAK,YACL4C,WAAYwC,EAAepN,UAC3BC,EAAAA,EAAAA,KAACsP,EAAwB,CACvBpP,KAAM2L,EACNvL,UAAU,iBACVwK,UAAW4C,EACXtN,QAASgN,MAGbxN,EAAMqO,cAAuC,SAAvBrO,EAAMqO,cAA2BrO,EAAM2P,eAAyC,aAAxB3P,EAAM2P,eAEpFvP,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,kBACRF,KAAK,aACL4C,WAAY/K,EAAM4P,sBAEpB5P,EAAMqO,cAAuC,SAAvBrO,EAAMqO,cAA2BrO,EAAM2P,eAAyC,qBAAxB3P,EAAM2P,eAAwC3P,EAAM6P,mBAElIzP,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,kBACRF,KAAK,eAEP,MAG4B,aAA5BnI,EAAM8P,mBAA2D,YAAvB9P,EAAMqO,cAA4D,qBAA5BrO,EAAM8P,mBAA4C9P,EAAM6P,qBACxIzP,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,eACRF,KAAK,eACL4C,WAAYiD,KAGlB5N,EAAAA,EAAAA,KAACqP,EAAgB,CACfpH,QAAQ,aACRF,KAAK,aACL4C,WAAYkD,YAO5B,E,sEC/EA,EAxMmC,SAACjO,GAClC,OACEI,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,KAAYR,UAEvBH,EAAM+P,SAAY/P,EAAM+P,SAAiD,IAAtCC,OAAOC,KAAKjQ,EAAM+P,SAAS3I,QAC7DhH,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,iBAAwBR,SAAC,wBAEvCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,cAAqBR,SAAA,EACnCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,UAAiBR,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,UAAgB,KAAAc,OAAId,EAAAA,EAAAA,iBAAyBR,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,gBAAuBR,UACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAENF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,eAAsBR,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,oBAA2BR,UACzCF,EAAAA,EAAAA,MAAA,KAAGS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,IAAWR,SAAC,iBAAkBC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,MAAaR,SAAEH,EAAMwJ,KAAKK,iBAG9FzJ,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,oBAA2BR,UACzCF,EAAAA,EAAAA,MAAA,KAAGS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,IAAWR,SAAC,aAAcC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,MAAaR,SAAEH,EAAMwJ,KAAK0G,cAG1F9P,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,oBAA2BR,UACzCF,EAAAA,EAAAA,MAAA,KAAGS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,IAAWR,SAAC,gBAAiBC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,MAAaR,SAAEH,EAAMwJ,KAAK2G,aAAe,kBAG5G/P,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,oBAA2BR,UACzCF,EAAAA,EAAAA,MAAA,KAAGS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,IAAWR,SAAC,cAAeC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,MAAaR,SAAEH,EAAMwJ,KAAK4G,qBAK/FnQ,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,UAAgB,KAAAc,OAAId,EAAAA,EAAAA,gBAAwBR,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,gBAAuBR,UACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YAENF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,mBAA0BR,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,SAEK,IAA9BH,EAAM+P,QAAQM,KAAKjJ,QAAiBpH,EAAM+P,QAAQM,KAAKjJ,OAAS,GAAKpH,EAAM+P,QAAQM,KAAKC,OAAM,SAAAC,GAAG,OAAKA,EAAIC,IAAI,KAC5GpQ,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,YAC9BH,EAAM+P,QAAQM,KAAKlF,KAAI,SAAAoF,GACvB,OACEnQ,EAAAA,EAAAA,KAACqQ,EAAAA,EAAoB,CAEnBC,QAAQ,UACRH,IAAKA,EACLvG,WAAYhK,EAAMgK,YAHbuG,EAAI1I,IAKf,UAIN5H,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,0BAAgC,KAAAc,OAAId,EAAAA,EAAAA,oCAA4CR,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,SAEa,IAAtCH,EAAM+P,QAAQY,aAAavJ,QAAiBpH,EAAM+P,QAAQY,aAAavJ,OAAS,GAAKpH,EAAM+P,QAAQY,aAAaL,OAAM,SAAAC,GAAG,OAAKA,EAAIC,IAAI,KACpIpQ,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,YAC9BH,EAAM+P,QAAQY,aAAaxF,KAAI,SAAAoF,GAC/B,OACEnQ,EAAAA,EAAAA,KAACqQ,EAAAA,EAAoB,CAEnBC,QAAQ,WACRH,IAAKA,EACLvG,WAAYhK,EAAMgK,YAHbuG,EAAI1I,IAKf,mBAOZ5H,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,aAAoBR,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,UAAiBR,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,gBAAuBR,UACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBAENF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,mBAA0BR,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAExBH,EAAM+P,QAAQa,YAAe5Q,EAAM+P,QAAQa,aAAe5Q,EAAM+P,QAAQa,WAAW1R,MAClFkB,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,aAE9BC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,KAAYR,UAC1BF,EAAAA,EAAAA,MAAA,KAAGS,UAAWC,EAAAA,EAAAA,WAAkBR,SAAA,CAAsC,aAApCH,EAAM+P,QAAQa,WAAWC,OAAwB,aAAe,WAAW,KAACzQ,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,EAAM+P,QAAQa,WAAW1R,OAAY,IAAEc,EAAM+P,QAAQa,WAAWE,QAAU,KAAO,GAAG,IAAE9Q,EAAM+P,QAAQa,WAAWE,SAAU1Q,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,EAAM+P,QAAQa,WAAWE,UAAkB,GAAG,IAAE9Q,EAAM+P,QAAQa,WAAWhF,OAAQ3L,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,IAAEH,EAAM+P,QAAQa,WAAWhF,SAAgB,GAAG,IAAE5L,EAAM+P,QAAQa,WAAWG,MAAO9Q,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,IAAEH,EAAM+P,QAAQa,WAAWG,QAAe,GAAG,IAAsC,aAApC/Q,EAAM+P,QAAQa,WAAWC,QAAyB7Q,EAAM+P,QAAQa,WAAWI,aAAe,KAAO,GAAG,IAAsC,aAApChR,EAAM+P,QAAQa,WAAWC,QAAyB7Q,EAAM+P,QAAQa,WAAWI,cAAe5Q,EAAAA,EAAAA,KAAA,QAAAD,UAAO4J,EAAAA,EAAAA,GAA4B/J,EAAM+P,QAAQa,WAAWI,gBAAwB,cAM/uB/Q,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,0BAAgC,KAAAc,OAAId,EAAAA,EAAAA,oCAA4CR,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,SAES,IAAlCH,EAAM+P,QAAQkB,SAAS7J,QAAiBpH,EAAM+P,QAAQkB,SAAS7J,OAAS,GAAKpH,EAAM+P,QAAQkB,SAASX,OAAM,SAAAY,GAAI,OAAKA,EAAKhS,IAAI,KAC1HkB,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,YAC9BH,EAAM+P,QAAQkB,SAAS9F,KAAI,SAAA+F,GAC3B,OACE9Q,EAAAA,EAAAA,KAAC+Q,EAAAA,EAA0B,CAEzBC,UAAWF,EACXG,QAAQ,UACRrH,WAAYhK,EAAMgK,YAHbkH,EAAKrJ,IAKhB,UAIN5H,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,0BAAgC,KAAAc,OAAId,EAAAA,EAAAA,oCAA4CR,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,SAEe,IAAxCH,EAAM+P,QAAQuB,eAAelK,QAAiBpH,EAAM+P,QAAQuB,eAAelK,OAAS,GAAKpH,EAAM+P,QAAQuB,eAAehB,OAAM,SAAAiB,GAAE,OAAKA,EAAGrS,IAAI,KACxIkB,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,YAC9BH,EAAM+P,QAAQuB,eAAenG,KAAI,SAAAqG,GACjC,OACEpR,EAAAA,EAAAA,KAAC+Q,EAAAA,EAA0B,CAEzBC,UAAWI,EACXH,QAAQ,YACRrH,WAAYhK,EAAMgK,YAHbwH,EAAI3J,IAKf,gBAMV5H,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,UAAiBR,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,gBAAuBR,UACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAENF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,mBAA0BR,SAAA,EACxCF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,0BAAiCR,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAExBH,EAAM+P,QAAQ0B,kBAAqBzR,EAAM+P,QAAQ0B,mBAAqBzR,EAAM+P,QAAQ0B,iBAAiBX,SACpG1Q,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,aAE9BC,EAAAA,EAAAA,KAACsR,EAAAA,EAA0B,CACzBC,cAAc,UACdC,UAAW5R,EAAM+P,QAAQ0B,iBACzBzH,WAAYhK,EAAMgK,mBAK5B/J,EAAAA,EAAAA,MAAA,OAAKS,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,0BAAgC,KAAAc,OAAId,EAAAA,EAAAA,oCAA4CR,SAAA,EACjGC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBAENC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,MAAaR,SAEmB,IAA5CH,EAAM+P,QAAQ8B,mBAAmBzK,QAAiBpH,EAAM+P,QAAQ8B,mBAAmBzK,OAAS,GAAKpH,EAAM+P,QAAQ8B,mBAAmBvB,OAAM,SAAAwB,GAAK,OAAKA,EAAMhB,OAAO,KAC7J1Q,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,QAAeR,SAAC,YAC9BH,EAAM+P,QAAQ8B,mBAAmB1G,KAAI,SAAA2G,GACrC,OACE1R,EAAAA,EAAAA,KAACsR,EAAAA,EAA0B,CAEzBC,cAAc,WACdC,UAAWE,EACX9H,WAAYhK,EAAMgK,YAHb8H,EAAMjK,IAKjB,sBAY1B,E,2DC3EA,EApHqC,SAAC7H,GACpC,IAAA+R,GAoBIC,EAAAA,EAAAA,KAnBFC,EAAaF,EAAbE,cACAC,EAAcH,EAAdG,eACAC,EAAMJ,EAANI,OACAC,EAAaL,EAAbK,cACAC,EAAeN,EAAfM,gBACAC,EAAgBP,EAAhBO,iBACAC,EAAkBR,EAAlBQ,mBACAC,EAAkBT,EAAlBS,mBACAC,EAAoBV,EAApBU,qBACAC,EAAiBX,EAAjBW,kBACAjK,EAAkBsJ,EAAlBtJ,mBACAkK,EAAiBZ,EAAjBY,kBACAC,EAAiBb,EAAjBa,kBACA5Q,EAAW+P,EAAX/P,YACAC,EAAa8P,EAAb9P,cACAH,EAAgBiQ,EAAhBjQ,iBACAC,EAAoBgQ,EAApBhQ,qBACAG,EAAkB6P,EAAlB7P,mBACAC,EAAoB4P,EAApB5P,qBAgBF,OAbAgL,EAAAA,EAAAA,YAAU,WACqB,SAA1BnN,EAAM6S,kBAGoB,YAA1B7S,EAAM6S,iBAAwD,YAAvB7S,EAAMqO,eAGnB,qBAA1BrO,EAAM6S,iBAAiE,YAAvB7S,EAAMqO,cAA+BrO,EAAM6P,oBAG9FyC,EAAiB,IAAD7Q,OAAKzB,EAAMwJ,KAAK3B,MAClC,GAAG,CAACyK,EAAkBtS,EAAMqO,aAAcrO,EAAM6P,kBAAmB7P,EAAM6S,gBAAiB7S,EAAMwJ,KAAK3B,MAElGoK,GAAsB7R,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KAG/BtO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACG+R,IACC9R,EAAAA,EAAAA,KAAC4H,EAAAA,QAAY,CACX1H,KAAyB,OAAnB4R,EACNjK,cAAc,EACdC,MAAM,gBACNC,KAAM+J,EACN1R,QAAS+R,EAAmBpS,UAC5BC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,UACdC,QAAQ,KACR3G,QAAS2Q,MAGdF,EAAgB/R,MAAQ8R,IACvBhS,EAAAA,EAAAA,KAAC0S,EAAAA,QAAW,CACVtJ,KAAMxJ,EAAMwJ,KACZhG,QAAS4O,EAAcvK,IACvBD,oBAAqByK,EAAgBU,kBACrCrK,UAAWiK,EACXxJ,UAAWyJ,EACXjL,OAAQyK,EAAczK,OACtBc,mBAAoBA,EACpBoC,iBAAkB7K,EAAM6K,mBAAoB,EAC5CC,qBAAsB9K,EAAM8K,uBAAwB,EACpD9I,YAAaA,EACbC,cAAeA,EACfH,iBAAkBA,EAClBC,qBAAsBA,EACtBG,mBAAoBA,EACpBC,qBAAsBA,KAE1B/B,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,OAAcR,SAE1BiS,GAEEnS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,aAAoBR,UAClCF,EAAAA,EAAAA,MAAA,UACES,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,YAAkB,KAAAc,OAAId,EAAAA,EAAAA,kBACpCiB,QAAS6Q,EAAqBtS,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,iBAAwBR,UACvCC,EAAAA,EAAAA,KAAA,OAAKuI,OAAO,eAAeC,KAAK,eAAeC,YAAY,IAAIC,QAAQ,cAAcC,OAAO,MAAMC,MAAM,MAAMC,MAAM,6BAA4B9I,UAACC,EAAAA,EAAAA,KAAA,QAAM8I,EAAE,kWAE3J9I,EAAAA,EAAAA,KAAA,QAAMM,UAAWC,EAAAA,EAAAA,iBAAwBR,SAAC,kBAK9CC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAoB,CACnBC,MAAOb,EACPM,kBAAmBA,QAIvBtS,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,eAAsBR,SAEhB,IAAlBgS,EAAO/K,QACLhH,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,qBAA4BR,SAAC,sBAC3CgS,EAAOhH,KAAI,SAAA8H,GACX,OACE7S,EAAAA,EAAAA,KAAC8S,EAAAA,EAAkB,CAEjBD,MAAOA,EACPE,iBAAkBX,GAFbS,EAAMpL,IAIjB,UAQhB,E,kDC4BA,EAlJsC,SAAH3D,GAAgC,IAA3B3C,EAAO2C,EAAP3C,QAAS6R,EAAWlP,EAAXkP,YAC/C1H,GAAkEC,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMyH,OAAO,IAAjGA,EAAO3H,EAAP2H,QAASC,EAAmB5H,EAAnB4H,oBAAqBC,EAAuB7H,EAAvB6H,wBAC9BC,GAAa7H,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAjD2H,SACRnR,GAAoCC,EAAAA,EAAAA,UAA2B,OAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9DoR,EAAUlR,EAAA,GAAEmR,EAAanR,EAAA,GAChCI,GAAgDL,EAAAA,EAAAA,UAAwB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApEgR,EAAgB/Q,EAAA,GAAEgR,EAAmBhR,EAAA,GAC5CG,GAAoDT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAxD8Q,EAAkB7Q,EAAA,GAAE8Q,EAAqB9Q,EAAA,GAEhD+Q,GAIIC,EAAAA,EAAAA,KAHFC,EAAiBF,EAAjBE,kBACAC,EAAkBH,EAAlBG,mBACAC,EAAmBJ,EAAnBI,oBAGF9H,GAaIC,EAAAA,EAAAA,KAZFC,EAAkBF,EAAlBE,mBACAC,EAAmBH,EAAnBG,oBACAC,EAAWJ,EAAXI,YACAC,EAAuBL,EAAvBK,wBACAC,EAAsBN,EAAtBM,uBACAC,EAAuBP,EAAvBO,wBACAC,EAA6BR,EAA7BQ,8BACAC,EAA+BT,EAA/BS,gCACAC,EAA6BV,EAA7BU,8BACAC,EAAwBX,EAAxBW,yBACAC,EAAwBZ,EAAxBY,yBACAC,EAAab,EAAba,cAGIkH,GAAmBrQ,EAAAA,EAAAA,cAAY,WACnC,IAAMsQ,EAAgBhB,EAAQlI,KAAI,SAAAmJ,GAAM,OAAIA,EAAO9K,KAAK3B,GAAG,IACrD0M,EAAgBnB,EAAYoB,QAAO,SAAAF,GAAM,OAAID,EAAcI,SAASH,EAAO9K,KAAK3B,MAAQyM,EAAO9K,KAAK3B,MAAQ2L,EAAU3L,GAAG,IAC/HiM,EAAsBS,EAAcnN,OACtC,GAAG,CAACoM,EAAUH,EAASD,KAEvBjG,EAAAA,EAAAA,YAAU,WACRyG,GAAmBc,EAAAA,EAAAA,GAAKtB,IACxBgB,GACF,GAAG,CAACA,EAAkBhB,IAEtB,IAAMuB,EAA4B,SAAClG,GACjC,IAAMmG,EAAWvB,EAAQwB,MAAK,SAAAC,GAAC,OAAIA,EAAEtL,KAAK3B,MAAQ4G,CAAM,IAClDsG,EAAoBxB,EAAwBsB,MAAK,SAAAC,GAAC,OAAIA,EAAEtL,KAAK3B,MAAQ4G,CAAM,IAC3EuG,EAAgB1B,EAAoBuB,MAAK,SAAAC,GAAC,OAAIA,EAAEtL,KAAK3B,MAAQ4G,CAAM,IAEzE,OAAGmG,EAAiB,UACjBG,EAA0B,0BAC1BC,EAAsB,sBAClB,MACT,EAEMC,EAAwB,SAACC,GAC7B,GAAgB,WAAbA,EAAuB,CACxB,IAAMb,EAAgBhB,EAAQlI,KAAI,SAAAmJ,GAAM,OAAIA,EAAO9K,KAAK3B,GAAG,IACrD0M,EAAgBnB,EAAYoB,QAAO,SAAAF,GAAM,OAAID,EAAcI,SAASH,EAAO9K,KAAK3B,MAAQyM,EAAO9K,KAAK3B,MAAQ2L,EAAU3L,GAAG,IAE/H+L,GAAmBc,EAAAA,EAAAA,GAAKH,GAC1B,MACEX,GAAmBc,EAAAA,EAAAA,GAAKtB,IAE1BM,EAAcwB,EAChB,EAEMC,IAAmBpR,EAAAA,EAAAA,cAAY,SAACqR,EAAmBC,GACvD,IAAMC,EAAejC,EAAQmB,QAAO,SAAAF,GAAM,OAAIc,EAAQX,SAASH,EAAO9K,KAAK3B,IAAI,IAC/EqM,EAAmBkB,EAASC,EAAmBC,EACjD,GAAG,CAACjC,EAASa,IAEb,OAAG3S,GAAgBnB,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KAGzBtO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CAC0B,OAAvBsM,EAAYgC,QAA4C,OAAzBhC,EAAYiC,WAC1CtO,EAAAA,EAAAA,KAACuO,EAAAA,QAAgB,CACfrO,KAA6B,OAAvBmM,EAAYgC,QAA4C,OAAzBhC,EAAYiC,SACjDnN,QAASgL,EACTqC,wBAAyBnC,EAAYiC,SACrClO,QAASoM,EACTiC,iBAAkBpC,EAAYoC,iBAC9BC,qBAAsBjC,EACtBkC,uBAAwBjC,EACxBkC,qBAAsBjC,EACtBkC,UAAWxC,EAAYyC,aACvBC,aAAc1C,EAAY2C,oBAC1BC,cAAerC,EACfsC,cAAerC,EACfsC,oBAAqBrC,IAEA,OAAxBV,IACCpM,EAAAA,EAAAA,KAAC4H,EAAAA,QAAY,CACX1H,KAA8B,OAAxBkM,EACNvE,cAAc,EACdC,MAAM,gBACNC,KAAMqE,EACNhM,QAASkM,EAAwBvM,UACjCC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,UACdC,QAAQ,KACR3G,QAAS8K,MAGduH,EAAkBsB,WAAatB,EAAkBoB,oBAChDjV,EAAAA,EAAAA,KAACoV,EAAAA,EAAoB,CACnBlV,KAAM2T,EAAkBsB,UACxBrN,MAAK,uBAAAzG,OAAyBwS,EAAkBoB,mBAChDhC,QAASY,EAAkBM,cAC3B/T,QAAS2T,KAEblU,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,QAAeR,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAAA,EAAAA,cAAqBR,SAAA,EACnCF,EAAAA,EAAAA,MAAA,UACEuB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,aAAmB,KAAAc,OAAmB,QAAfgS,EAAuB9S,EAAAA,EAAAA,oBAA6B,IACzFiB,QAAS,kBAAMqT,EAAsB,MAAM,EAAC9U,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UAAWF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,IAAEiT,EAAYhM,OAAO,WAE9CnH,EAAAA,EAAAA,MAAA,UACEuB,KAAK,SACLd,UAAS,GAAAe,OAAKd,EAAAA,EAAAA,aAAmB,KAAAc,OAAmB,WAAfgS,EAA0B9S,EAAAA,EAAAA,oBAA6B,IAC5FiB,QAAS,kBAAMqT,EAAsB,SAAS,EAAC9U,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAcF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAM,IAAE0T,EAAmB,cAGnDzT,EAAAA,EAAAA,KAAA,OAAKM,UAAWC,EAAAA,EAAAA,cAAqBR,SAEL,IAA5BwT,EAAiBvM,QACfhH,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAAA,EAAAA,oBAA2BR,SAAC,oBAC1CwT,EAAiBxI,KAAI,SAAAmJ,GACrB,OACElU,EAAAA,EAAAA,KAACqV,EAAAA,EAAmB,CAElBC,aAAcf,EAA0BL,EAAO9K,KAAK3B,KACpD2B,KAAM8K,EAAO9K,KACb+K,cAAeD,EAAOC,cACtBzE,kBAAmBwE,EAAOxE,kBAC1BoE,mBAAoBiB,GACpBxI,uBAAwBA,GANnB2H,EAAO9K,KAAK3B,IAQvB,WAMZ,EC+MA,EAzV4B,WAC1B,IAAM2D,GAAWC,EAAAA,EAAAA,MACXH,GAAWC,EAAAA,EAAAA,MACTkD,GAAWkH,EAAAA,EAAAA,MAAXlH,OAERmH,GAUIC,EAAAA,EAAAA,KATFC,EAAYF,EAAZE,aACAC,EAAKH,EAALG,MACAC,EAAWJ,EAAXI,YACAC,EAAUL,EAAVK,WACAC,EAAYN,EAAZM,aACAC,EAAeP,EAAfO,gBACAC,EAAmBR,EAAnBQ,oBACAC,EAAiBT,EAAjBS,kBACAC,EAAmBV,EAAnBU,oBAGFjU,GAA8CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtDkU,EAAehU,EAAA,GAAEiU,EAAkBjU,EAAA,GAC1CI,GAAgDL,EAAAA,EAAAA,UAAwB,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtE8T,EAAgB7T,EAAA,GAAE8T,EAAmB9T,EAAA,GAC5C8I,GAA2DC,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMyH,OAAO,IAA1FsD,EAAajL,EAAbiL,cAAeC,EAAclL,EAAdkL,eAAgBC,EAAenL,EAAfmL,gBAC/BrD,GAAa7H,EAAAA,EAAAA,IAAiB,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAjD2H,SACRzQ,GAAgCT,EAAAA,EAAAA,UAAyB,CACvDkH,KAAM,KACNsN,SAAU,KACVzI,aAAc,OACdwB,mBAAmB,IACnB7M,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GALKgU,EAAQ/T,EAAA,GAAEgU,EAAWhU,EAAA,GAO5BG,IAA8Cb,EAAAA,EAAAA,UAA0B,MAAKc,IAAAZ,EAAAA,EAAAA,GAAAW,GAAA,GAAtE8T,GAAe7T,GAAA,GAAE8T,GAAkB9T,GAAA,GAC1CG,IAAsCjB,EAAAA,EAAAA,UAAwB,IAAGqB,IAAAnB,EAAAA,EAAAA,GAAAe,GAAA,GAA1D6P,GAAWzP,GAAA,GAAEwT,GAAcxT,GAAA,GAElCyT,IAAoC9U,EAAAA,EAAAA,UAAkD,SAAQ+U,IAAA7U,EAAAA,EAAAA,GAAA4U,GAAA,GAAvFE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,IAEhClK,EAAAA,EAAAA,YAAU,WACR,GAAqB,cAAlBwJ,EACDK,GAAY,SAAApS,GACV,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACPyJ,aAAc,qBAElB,SACK,GAAqB,WAAlBsI,EACRK,GAAY,SAAApS,GACV,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACPyJ,aAAc,QAElB,SACK,GAAqB,aAAlBsI,EACRK,GAAY,SAAApS,GACV,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACPyJ,aAAc,WAElB,SACK,GAAqB,aAAlBsI,EACRK,GAAY,SAAApS,GACV,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACPyJ,aAAc,QAElB,SACK,GAAqB,eAAlBsI,EACRK,GAAY,SAAApS,GACV,OAAA9D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK8D,GAAI,IACPyJ,aAAc,QAElB,SACK,GAAqB,SAAlBsI,EACR,OAEFrL,GAASkM,EAAAA,EAAAA,MACX,GAAG,CAACb,EAAerL,IAEnB,IAAMmM,IAAc1T,EAAAA,EAAAA,cAAWI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,IAAA,IAAAoT,EAAAC,EAAAC,EAAA,OAAAxT,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGL,GAFnB6S,EAAQG,aAAaC,QAAQ,kBAEnCtB,GAAmB,GACf/H,EAAO,CAAD9J,EAAAE,KAAA,QACuD,OAA/D6R,EAAoB,2CAA2C/R,EAAA+C,OAAA,qBAG9D+G,IAAU+E,GAAY/E,IAAW+E,EAAS3L,IAAG,CAAAlD,EAAAE,KAAA,QACX,OAAnC2G,EAAS,MAAO,CAAE4B,SAAS,IAAQzI,EAAA+C,OAAA,wBAAA/C,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAIZkT,EAAAA,EAAAA,IAAa,IAAAtW,OAA4BgN,GAAU,CACxEuJ,QAAS,CACPC,cAAc,UAADxW,OAAYiW,MAE1B,KAAD,GAAAC,EAAAhT,EAAAuT,KAJMN,EAAID,EAAJC,KAMRZ,EAAY,CACVxN,KAAMoO,EAAKpO,KACXsN,SAAUc,EAAKO,aACf9J,aAAcuJ,EAAKvJ,aACnBwB,kBAAmB+H,EAAK/H,oBAG1BmG,EAAY4B,EAAK7B,OACjBmB,GAAmB,MACnBC,GAAe,IACfI,GAAc,SAAS5S,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyT,GAAAzT,EAAA,SAEvB+R,EAAoB/R,EAAAyT,GAAeC,SAAST,KAAKU,SAAS,QAE5D9B,GAAmB,GAAO,yBAAA7R,EAAAG,OAAA,GAAAR,EAAA,mBACzB,CAACmK,EAAQ+E,EAAUhI,EAAUwK,KAEhC7I,EAAAA,EAAAA,YAAU,WACRsK,IACF,GAAG,CAACA,KAEJ,IAAMc,GAAmB,WACvB7B,EAAoB,KACtB,EAEM8B,GAAsB,WAC1BlN,GAASmN,EAAAA,EAAAA,MACX,EAEM7I,IAAsB7L,EAAAA,EAAAA,cAAWI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAkB,IAAA,OAAAnB,EAAAA,EAAAA,KAAAM,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OACnCkS,EAASvN,MACV8B,GAASoN,EAAAA,EAAAA,IAAkB3B,EAASvN,KAAK3B,MAC1C,wBAAArC,EAAAV,OAAA,GAAAS,EAAA,KACA,CAACwR,EAASvN,KAAM8B,IAEbyC,IAAwBhK,EAAAA,EAAAA,cAAY,WACrCgT,EAASvN,MACV8B,GAASqN,EAAAA,EAAAA,IAAoB5B,EAASvN,KAAK3B,KAE/C,GAAG,CAACkP,EAASvN,KAAM8B,IAEbsC,IAAwB7J,EAAAA,EAAAA,cAAY,WACrCgT,EAASvN,MACV8B,GAASsN,EAAAA,EAAAA,IAAoB7B,EAASvN,KAAK3B,KAE/C,GAAG,CAACkP,EAASvN,KAAM8B,IAEbuC,IAAyB9J,EAAAA,EAAAA,cAAY,WACtCgT,EAASvN,MACV8B,GAASuN,EAAAA,EAAAA,IAAqB9B,EAASvN,KAAK3B,KAEhD,GAAG,CAACkP,EAASvN,KAAM8B,IAEboC,IAAa3J,EAAAA,EAAAA,cAAY,WAC1BgT,EAASvN,MACV8B,GAASwN,EAAAA,EAAAA,IAAS/B,EAASvN,KAAK3B,KAEpC,GAAG,CAACkP,EAASvN,KAAM8B,IAEbyN,IAAmBhV,EAAAA,EAAAA,cAAWI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAsB,IAAA,IAAA+R,EAAAsB,EAAApB,EAAA,OAAAxT,EAAAA,EAAAA,KAAAM,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACiB,GAA9C6S,EAAQG,aAAaC,QAAQ,kBAAiBlS,EAAAhB,KAAA,EAG9CmS,EAASvN,MAASuN,EAASD,SAAQ,CAAAlR,EAAAf,KAAA,QACS,OAA9C6R,EAAoB,0BAA0B9Q,EAAA8B,OAAA,qBAG7CuP,GAAgB,CAADrR,EAAAf,KAAA,eAAAe,EAAA8B,OAAA,iBAGO,OAAzB8O,GAAmB,GAAM5Q,EAAAf,KAAA,GAEFoU,EAAAA,EAAAA,IAAgB,IAAAxX,OAA2BsV,EAASvN,KAAK3B,IAAG,KAAApG,OAAIsV,EAASD,SAASoC,cAAcC,wBAA2B,CAChJnB,QAAS,CACPC,cAAc,UAADxW,OAAYiW,MAE1B,KAAD,GAAAsB,EAAApT,EAAAsS,KAJMN,EAAIoB,EAAJpB,KAMRV,GAAmBU,EAAK7H,SAASnK,EAAAf,KAAA,iBAAAe,EAAAhB,KAAA,GAAAgB,EAAAwS,GAAAxS,EAAA,SAEjC8Q,EAAoB9Q,EAAAwS,GAAeC,SAAST,KAAKU,SAAS,QAE5D9B,GAAmB,GAAO,yBAAA5Q,EAAAd,OAAA,GAAAa,EAAA,mBACzB,CAACoR,EAAUE,KAERmC,IAAmBrV,EAAAA,EAAAA,cAAWI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA2B,IAAA,IAAA0R,EAAA2B,EAAAzB,EAAA,OAAAxT,EAAAA,EAAAA,KAAAM,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAC/B4J,EAAO,CAADxI,EAAApB,KAAA,eAAAoB,EAAAyB,OAAA,SACDgP,EAAoB,mDAAiD,OAGrD,OADnBgB,EAAQG,aAAaC,QAAQ,kBACnCtB,GAAmB,GAAMvQ,EAAArB,KAAA,EAAAqB,EAAApB,KAAA,EAEAyU,EAAAA,EAAAA,IAAgB,gBAAA7X,OAA2DgN,GAAU,CAC1GuJ,QAAS,CACPC,cAAc,UAADxW,OAAYiW,MAE1B,KAAD,EAAA2B,EAAApT,EAAAiS,KAJMN,EAAIyB,EAAJzB,KAKR2B,QAAQC,IAAI5B,GACZT,GAAeS,EAAKvE,SAASpN,EAAApB,KAAA,iBAAAoB,EAAArB,KAAA,GAAAqB,EAAAmS,GAAAnS,EAAA,SAE7ByQ,EAAoBzQ,EAAAmS,GAAeC,SAAST,KAAKU,SAAS,QAE5D9B,GAAmB,GAAO,yBAAAvQ,EAAAnB,OAAA,GAAAkB,EAAA,mBACzB,CAACyI,IAEEgL,IAAqB1V,EAAAA,EAAAA,cAAY,SAAC2V,GAC1B,SAATA,EACDX,KACkB,YAATW,GACTN,KAEF7B,GAAcmC,EAChB,GAAG,CAACX,GAAkBK,KAEtB,OAAG7C,GAAwBnW,EAAAA,EAAAA,KAACmO,EAAAA,EAAO,KAGjCtO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIsW,GAAoBI,KACpBzW,EAAAA,EAAAA,KAAC4H,EAAAA,QAAY,CACX1H,KAA2B,OAArBmW,GAAiD,OAApBI,EACnC5O,cAAc,EACdC,MAAM,gBACNC,KAA2B,OAArBsO,GAA8BI,EAAsCJ,GAAwC,OAApBI,EAA6C,uBAAlBA,EAAnEJ,EACtDjW,QACuB,OAArBiW,GAA8BI,EAE3BJ,GAAwC,OAApBI,EAErB,WACA0B,KACAC,IACF,EAJEA,GAFAD,GAOHpY,UACDC,EAAAA,EAAAA,KAACgI,EAAAA,EAAQ,CACPE,cAAc,UACdC,QAAQ,KACRF,QAAQ,SACRzG,QAA8B,OAArB6U,GAA8BI,EAElCJ,GAAwC,OAApBI,EAErB,WACA0B,KACAC,IACJ,EAJIA,GAFAD,QASVnY,EAAAA,EAAAA,KAACuZ,EAAAA,EAAa,CACZC,QAAQ,mBACRC,cAAc,EACdtY,QAASgV,EACTvN,MAAM,MAAK7I,SAET4W,GAAYA,EAASvN,MAAQuN,EAASD,WACpC7W,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC0Z,EAAiB,CAChBtQ,KAAMuN,EAASvN,KACfjI,QAASqV,GAAkBL,EAC3BlI,aAAc0I,EAAS1I,aACvBwB,kBAAmBkH,EAASlH,kBAC5BF,cAAeoH,EAASD,SAASiD,eAAeC,YAChDlK,kBAAmBiH,EAASD,SAASmD,UAAUC,gBAC/CtK,oBAAqBA,GACrB7B,sBAAuBA,GACvBH,sBAAuBA,GACvBC,uBAAwBA,GACxBH,WAAYA,MACdzN,EAAAA,EAAAA,MAACka,EAAAA,EAAoB,CACnB5Y,QAASgV,GAAmBK,EAC5BU,WAAYA,GACZyB,iBAAkBA,GAClBU,mBAAoBA,GAAmBtZ,SAAA,CAEtB,UAAfmX,KACElX,EAAAA,EAAAA,KAACga,EAAAA,EAAe,CACd7Y,QAASuU,EACTC,MAAOA,EACPI,gBAAiBA,EACjBC,oBAAqBA,EACrBH,WAAYA,EACZC,aAAcA,EACdG,kBAAmBA,EACnBC,oBAAqBA,EACrBzL,iBAC8D,SAA5DkM,EAASD,SAASuD,oBAAoBC,mBAC0B,YAA5DvD,EAASD,SAASuD,oBAAoBC,mBAA6D,YAA1BvD,EAAS1I,cACtB,qBAA5D0I,EAASD,SAASuD,oBAAoBC,mBAAsE,YAA1BvD,EAAS1I,eAA+B0I,EAASlH,kBAIzI/E,qBACiE,SAA/DiM,EAASD,SAASuD,oBAAoBE,sBAC6B,YAA/DxD,EAASD,SAASuD,oBAAoBE,sBAAgE,YAA1BxD,EAAS1I,cACtB,qBAA/D0I,EAASD,SAASuD,oBAAoBE,sBAAyE,YAA1BxD,EAAS1I,eAA+B0I,EAASlH,oBAOjI,SAAfyH,KAA0BV,IAAmBL,IAC3CnW,EAAAA,EAAAA,KAACoa,EAAe,CACdhR,KAAMuN,EAASvN,KACfQ,YAAY,EACZ+F,QAASkH,KAIE,WAAfK,KACElX,EAAAA,EAAAA,KAACqa,EAAiB,CAChBjR,KAAM,CACJ3B,IAAKkP,EAASvN,KAAK3B,IACnBgC,SAAUkN,EAASvN,KAAKK,SACxBJ,gBAAiBsN,EAASvN,KAAKC,iBAEjCoJ,gBAAiBkE,EAASD,SAASoC,cAAcwB,kBACjDrM,aAAc0I,EAAS1I,aACvBwB,kBAAmBkH,EAASlH,kBAC5BhF,iBAC+D,SAA7DkM,EAASD,SAASuD,oBAAoBM,oBAC2B,YAA7D5D,EAASD,SAASuD,oBAAoBM,oBAA8D,YAA1B5D,EAAS1I,cACtB,qBAA7D0I,EAASD,SAASuD,oBAAoBM,oBAAuE,YAA1B5D,EAAS1I,eAA+B0I,EAASlH,kBAI1I/E,qBACkE,SAAhEiM,EAASD,SAASuD,oBAAoBO,uBAC8B,YAAhE7D,EAASD,SAASuD,oBAAoBO,uBAAiE,YAA1B7D,EAAS1I,cACtB,qBAAhE0I,EAASD,SAASuD,oBAAoBO,uBAA0E,YAA1B7D,EAAS1I,eAA+B0I,EAASlH,oBAOlI,YAAfyH,KAA6BV,IAAmBL,IAC9CnW,EAAAA,EAAAA,KAACya,EAAkB,CACjBtZ,QAASgV,GAAmBK,EAC5BxD,YAAaA,eAUnC,C","sources":["webpack://frontend/./src/styles/components/photosAndAlbums/photoSlider.module.scss?4b55","config/myProfilePage/editPhotoDescriptionForm.ts","webpack://frontend/./src/styles/components/photosAndAlbums/editPhotoDescriptionInput.module.scss?6bd8","components/PhotosAndAlbums/EditPhotoDescriptionInput.tsx","components/PhotosAndAlbums/PhotoSlider.tsx","webpack://frontend/./src/styles/components/buttons/profileHeaderBtn.module.scss?b631","components/Buttons/ProfileHeaderBtn.tsx","webpack://frontend/./src/styles/components/buttons/profileHeaderBtnDropdown.module.scss?209b","components/Buttons/ProfileHeaderBtnDropdown.tsx","components/ProfilePages/ProfileHeader/ProfileHeaderUser.tsx","components/ProfilePages/ProfileInfoUser.tsx","components/ProfilePages/ProfileUserPhotos.tsx","components/ProfilePages/ProfileUserFriends.tsx","pages/UserProfilePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"slider\":\"photoSlider_slider__P4ahD\",\"slider__content\":\"photoSlider_slider__content__Ef-Mo\",\"slider__close_ss\":\"photoSlider_slider__close_ss__sRL-Z\",\"slider__comments_show\":\"photoSlider_slider__comments_show__Oe6k6\",\"slider__photo\":\"photoSlider_slider__photo__tCpO0\",\"slider__photo_btn\":\"photoSlider_slider__photo_btn__BNb5w\",\"slider__photo_btn_left\":\"photoSlider_slider__photo_btn_left__iV1Jp\",\"slider__photo_btn_right\":\"photoSlider_slider__photo_btn_right__BRh5Q\",\"slider__photo_image\":\"photoSlider_slider__photo_image__k3cQO\",\"slider__info\":\"photoSlider_slider__info__jksbM\",\"slider__info_ss_show\":\"photoSlider_slider__info_ss_show__taNWR\",\"slider__info_top\":\"photoSlider_slider__info_top__lO8tl\",\"slider__info_user\":\"photoSlider_slider__info_user__5-cIc\",\"slider__info_user_image\":\"photoSlider_slider__info_user_image__mTB0m\",\"slider__info_user_name\":\"photoSlider_slider__info_user_name__UXBFU\",\"slider__info_date\":\"photoSlider_slider__info_date__VdN4t\",\"slider__close\":\"photoSlider_slider__close__7FhlD\",\"slider__close_comments\":\"photoSlider_slider__close_comments__-NbZK\",\"slider__desc\":\"photoSlider_slider__desc__MafNW\",\"slider__desc_text\":\"photoSlider_slider__desc_text__e4E3n\",\"slider__desc_edit\":\"photoSlider_slider__desc_edit__6pSBX\",\"slider__likes_and_comments\":\"photoSlider_slider__likes_and_comments__Ef+xK\"};","import { IInput, IInputDisplays, IInputElementTypes } from \"../../types/formsAndInputs/inputType\";\r\n\r\nexport const editPhotoDescriptionInput: {[group: string]: IInput} = {\r\n  description: {\r\n    elementType: IInputElementTypes.INPUT_TEXT,\r\n    inputDisplay: IInputDisplays.INPUT_BLOCK,\r\n    attributes: {\r\n      id: \"description\",\r\n      name: \"description\",\r\n      placeholder: \"Describe photo\"\r\n    },\r\n    label: {\r\n      labelShow: true,\r\n      labelFor: \"description\",\r\n      labelText: \"Description\"\r\n    },\r\n    validation: {\r\n      required: true\r\n    },\r\n    focused: false,\r\n    touched: false,\r\n    value: \"\",\r\n    valid: false,\r\n    errorMsg: \"Some text is required before submiting\"\r\n  }\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"editPhotoDescriptionInput_input__2pJyj\",\"input__field\":\"editPhotoDescriptionInput_input__field__xlRw8\",\"input__btns\":\"editPhotoDescriptionInput_input__btns__Lzk6f\",\"input__btn\":\"editPhotoDescriptionInput_input__btn__4SM51\",\"input__btn_submit\":\"editPhotoDescriptionInput_input__btn_submit__qmDYd\",\"input__btn_cancel\":\"editPhotoDescriptionInput_input__btn_cancel__spNR8\"};","import { ChangeEvent, FC, FormEventHandler, memo } from 'react';\r\nimport styles from '../../styles/components/photosAndAlbums/editPhotoDescriptionInput.module.scss';\r\nimport { IInput } from '../../types/formsAndInputs/inputType';\r\nimport Backdrop from '../Shared/Backdrop';\r\nimport Input from '../Inputs/Input';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  input: {[group: string]: IInput};\r\n  loading: boolean;\r\n  onClose: () => void;\r\n  onEditPhotoDescInputFocused: (inputGroup: string) => void;\r\n  onEditPhotoDescInputUnfocused: (inputGroup: string) => void;\r\n  onEditPhotoDescInputChanged: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, inputGroup: string) => void;\r\n  submitDisabled: boolean;\r\n  onSubmit: FormEventHandler<HTMLFormElement>;\r\n}\r\n\r\nconst EditPhotoDescriptionInput: FC<Props> = (props) => {\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        show={props.show}\r\n        bcgColor=\"dark\"\r\n        onClose={props.onClose}\r\n        hiperZIndex={true} />\r\n      <form className={styles.input} onSubmit={props.onSubmit}>\r\n        <div className={styles.input__field}>\r\n          <Input\r\n            {...props.input.description}\r\n            inputGroup=\"description\"\r\n            onInputFocus={props.onEditPhotoDescInputFocused}\r\n            onInputUnfocus={props.onEditPhotoDescInputUnfocused}\r\n            onInputChange={props.onEditPhotoDescInputChanged} />\r\n        </div>\r\n        {\r\n          !props.loading && (\r\n            <div className={styles.input__btns}>\r\n              <button\r\n                type=\"submit\"\r\n                className={`${styles.input__btn} ${styles.input__btn_submit}`}\r\n                disabled={!props.submitDisabled}>\r\n                edit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`${styles.input__btn} ${styles.input__btn_cancel}`}\r\n                onClick={props.onClose}>\r\n                cancel\r\n              </button>\r\n            </div>\r\n          )\r\n        }\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(EditPhotoDescriptionInput);","import { FC, FormEvent, useState, useCallback, ChangeEvent } from 'react';\r\nimport styles from '../../styles/components/photosAndAlbums/photoSlider.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport noUserImg from '../../images/no-user.jpg';\r\n// types\r\nimport { IPhoto } from '../../hooks/usePhotosHook/usePhotosTypes';\r\n// components\r\nimport LikesAndCommentsContainer from '../LikesAndComments/LikesAndCommentsContainer';\r\n// utils\r\nimport { formatDateToYearMonthAndDay } from '../../utils/formatDateToYearMonthAndDay';\r\n// components\r\nimport DefaultModal from '../Modals/DefaultModal';\r\nimport ModalBtn from '../Buttons/ModalBtn';\r\nimport { editPhotoDescriptionInput } from '../../config/myProfilePage/editPhotoDescriptionForm';\r\nimport EditPhotoDescriptionInput from './EditPhotoDescriptionInput';\r\nimport Backdrop from '../Shared/Backdrop';\r\n\r\ninterface Props {\r\n  user: {\r\n    _id: string;\r\n    fullName: string;\r\n    profilePhotoUrl: string;\r\n  };\r\n  isAuthUser?: boolean;\r\n  albumId: string;\r\n  displayedPhotoIndex: number;\r\n  photos: IPhoto[];\r\n  prevPhoto: () => void;\r\n  nextPhoto: () => void;\r\n  onClosePhotoSlider: () => void;\r\n  hideLikingOption?: boolean;\r\n  hideCommentingOption?: boolean;\r\n  onLikePhoto: (albumId: string, photoId: string) => Promise<void>;\r\n  onUnlikePhoto: (albumId: string, photoId: string) => Promise<void>;\r\n  onCommentOnPhoto: (albumId: string, photoId: string, commentTextValue: string, commentPhoto: File | null, commentTaggs: {\r\n    userId: string;\r\n    userFullName: string;\r\n  }[]) => Promise<void>;\r\n  onDeletePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onLikePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onUnlikePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onChangePhotoDescription?: (albumId: string, photoId: string, newDescriptionValue: string) => Promise<void>;\r\n}\r\n\r\nconst PhotoSlider: FC<Props> = (props) => {\r\n  const  {\r\n    onCommentOnPhoto,\r\n    onDeletePhotoComment,\r\n    onLikePhoto,\r\n    onUnlikePhoto,\r\n    onLikePhotoComment,\r\n    onUnlikePhotoComment,\r\n    onChangePhotoDescription\r\n  } = props;\r\n\r\n  const [actionLoading, setActionLoading] = useState(false);\r\n  const [actionErrorMsg, setActionErrorMsg] = useState<string | null>(null);\r\n  const [showSmallScreenComments, setShowSmallScreenComments] = useState(false);\r\n\r\n  const [editPhotoDescInfo, setEditPhotoDescInfo] = useState({\r\n    show: false,\r\n    input: {...editPhotoDescriptionInput}\r\n  });\r\n\r\n  const [deleteCommentInfo, setDeleteCommentInfo] = useState<{\r\n    albumId: string | null;\r\n    photoId: null | string;\r\n    commentId: string | null;\r\n  }>({\r\n    albumId: null,\r\n    photoId: null,\r\n    commentId: null\r\n  });\r\n\r\n  const onShowSmallScreenComments = (): void => {\r\n    setShowSmallScreenComments(true);\r\n  };\r\n\r\n  const onHideSmallScreenComments = useCallback((): void => {\r\n    setShowSmallScreenComments(false);\r\n  }, []);\r\n\r\n  const onCloseDeleteCommentModal = (): void => {\r\n    setDeleteCommentInfo({\r\n      albumId: null,\r\n      photoId: null,\r\n      commentId: null\r\n    });\r\n  };\r\n\r\n  const commentOnPhoto = useCallback(async(\r\n    photoId: string,\r\n    commentTextValue: string,\r\n    commentPhoto: File | null,\r\n    commentTaggs: {userId: string, userFullName: string}[]\r\n  ): Promise<void> => {\r\n    await onCommentOnPhoto(\r\n      props.albumId!,\r\n      photoId,\r\n      commentTextValue,\r\n      commentPhoto,\r\n      commentTaggs\r\n    );\r\n  }, [onCommentOnPhoto, props.albumId]);\r\n\r\n  const onPrepareDeletePhotoComment = useCallback((photoId: string, commentId: string): void => {\r\n    if(!props.albumId) {\r\n      setActionErrorMsg(\"Album not found. Try refreshing the page\");\r\n      return;\r\n    }\r\n\r\n    setDeleteCommentInfo({\r\n      albumId: props.albumId,\r\n      photoId,\r\n      commentId\r\n    });\r\n  }, [props.albumId]);\r\n\r\n  const deletePhotoComment = useCallback(async(): Promise<void> => {\r\n    await onDeletePhotoComment(deleteCommentInfo.albumId!, deleteCommentInfo.photoId!, deleteCommentInfo.commentId!)\r\n\r\n    onCloseDeleteCommentModal();\r\n  }, [onDeletePhotoComment, deleteCommentInfo]);\r\n\r\n  const likePhoto = useCallback(async(photoId: string): Promise<void> => {\r\n    await onLikePhoto(props.albumId!, photoId);\r\n  }, [onLikePhoto, props.albumId]);\r\n\r\n  const unlikePhoto = useCallback(async(photoId: string): Promise<void> => {\r\n    await onUnlikePhoto(props.albumId!, photoId);\r\n  }, [onUnlikePhoto, props.albumId]);\r\n\r\n  const likePhotoComment = useCallback(async(photoId: string, commentId: string): Promise<void> => {\r\n    await onLikePhotoComment(props.albumId!, photoId, commentId);\r\n  }, [onLikePhotoComment, props.albumId]);\r\n\r\n  const unlikePhotoComment = useCallback(async(photoId: string, commentId: string): Promise<void> => {\r\n    await onUnlikePhotoComment(props.albumId!, photoId, commentId);\r\n  }, [onUnlikePhotoComment, props.albumId]);\r\n\r\n  const onShowPhotoDescInput = (): void => {\r\n    const descValue = props.photos[props.displayedPhotoIndex].description || \"\";\r\n\r\n    setEditPhotoDescInfo(prev => {\r\n      return {\r\n        show: true,\r\n        input: {\r\n          ...prev.input,\r\n          description: {\r\n            ...prev.input.description,\r\n            value: descValue,\r\n            touched: descValue ? true : false,\r\n            valid: descValue ? true : false\r\n          }\r\n        }\r\n      };\r\n    });\r\n  };\r\n\r\n  const onHidePhotoDescInput = useCallback((): void => {\r\n    setEditPhotoDescInfo({\r\n      show: false,\r\n      input: {...editPhotoDescriptionInput}\r\n    });\r\n  }, []);\r\n\r\n  const onEditPhotoDescInputFocused = useCallback((_: string): void => {\r\n    setEditPhotoDescInfo(prev => {\r\n      return {\r\n        ...prev,\r\n        input: {\r\n          ...prev.input,\r\n          description: {\r\n            ...prev.input.description,\r\n            focused: true,\r\n            touched: true\r\n          }\r\n        }\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const onEditPhotoDescInputUnfocused = useCallback((_: string): void => {\r\n    setEditPhotoDescInfo(prev => {\r\n      return {\r\n        ...prev,\r\n        input: {\r\n          ...prev.input,\r\n          description: {\r\n            ...prev.input.description,\r\n            focused: false\r\n          }\r\n        }\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const onEditPhotoDescInputChanged = useCallback((event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, _: string): void => {\r\n    const target = event.target;\r\n\r\n    setEditPhotoDescInfo(prev => {\r\n      return {\r\n        ...prev,\r\n        input: {\r\n          ...prev.input,\r\n          description: {\r\n            ...prev.input.description,\r\n            value: target.value,\r\n            valid: target.value.trim().length > 0\r\n          }\r\n        }\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const changePhotoDescription = useCallback(async(event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    event.preventDefault();\r\n    setActionLoading(true);\r\n    const value = editPhotoDescInfo.input.description.value;\r\n    if(value.trim().length === 0) {\r\n      setActionErrorMsg(\"Can't send empty description\");\r\n      setActionLoading(false);\r\n      return;\r\n    }\r\n    await onChangePhotoDescription!(props.albumId!, props.photos[props.displayedPhotoIndex]._id, value);\r\n    onHidePhotoDescInput();\r\n    setActionLoading(false);\r\n  }, [editPhotoDescInfo.input.description.value, props.displayedPhotoIndex, props.albumId, onChangePhotoDescription, props.photos, onHidePhotoDescInput]);\r\n\r\n  const onClearActionErrorMsg = useCallback((): void => {\r\n    setActionErrorMsg(null);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* {showSmallScreenComments && (\r\n        <Backdrop\r\n          show={showSmallScreenComments}\r\n          bcgColor=\"dark\"\r\n          onClose={onHideSmallScreenComments}\r\n          isSmallScreenSliderBackdrop={true} />\r\n      )} */}\r\n      {\r\n        actionErrorMsg !== null && (\r\n          <DefaultModal\r\n            show={actionErrorMsg !== null}\r\n            isErrorModal={true}\r\n            title=\"Error occured\"\r\n            text={actionErrorMsg}\r\n            onClose={onClearActionErrorMsg}>\r\n            <ModalBtn\r\n              btnType=\"button\"\r\n              btnCustomType=\"btn__ok\"\r\n              btnText=\"OK\"\r\n              onClick={onClearActionErrorMsg} />\r\n          </DefaultModal>\r\n        )\r\n      }\r\n      {\r\n        deleteCommentInfo.albumId !== null && deleteCommentInfo.photoId !== null && deleteCommentInfo.commentId !== null && (\r\n          <DefaultModal\r\n            show={deleteCommentInfo.albumId !== null && deleteCommentInfo.photoId !== null && deleteCommentInfo.commentId !== null}\r\n            isErrorModal={false}\r\n            title=\"Prepairing to delete photo comment\"\r\n            text=\"Are you sure you want to delete this comment?\"\r\n            onClose={onCloseDeleteCommentModal}>\r\n            <ModalBtn\r\n              btnType=\"button\"\r\n              btnCustomType=\"btn__cancel\"\r\n              btnText=\"cancel\"\r\n              onClick={onCloseDeleteCommentModal} />\r\n            <ModalBtn\r\n              btnType=\"button\"\r\n              btnCustomType=\"btn__confirm\"\r\n              btnText=\"delete\"\r\n              onClick={deletePhotoComment} />\r\n          </DefaultModal>\r\n        )\r\n      }\r\n      <div className={styles.slider}>\r\n        {showSmallScreenComments && (\r\n        <Backdrop\r\n          show={showSmallScreenComments}\r\n          bcgColor=\"dark\"\r\n          onClose={onHideSmallScreenComments}\r\n          isSmallScreenSliderBackdrop={true} />\r\n        )}\r\n        <div className={styles.slider__content}>\r\n          <div className={styles.slider__photo}>\r\n            <div className={styles.slider__close_ss} onClick={props.onClosePhotoSlider}>close</div>\r\n            <div className={styles.slider__comments_show} onClick={onShowSmallScreenComments}>show comments</div>\r\n            <div className={styles.slider__photo_btns}>\r\n              {\r\n                props.displayedPhotoIndex > 0 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`${styles.slider__photo_btn} ${styles.slider__photo_btn_left}`}\r\n                    onClick={props.prevPhoto}>\r\n                    <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M689 165.1L308.2 493.5c-10.9 9.4-10.9 27.5 0 37L689 858.9c14.2 12.2 35 1.2 35-18.5V183.6c0-19.7-20.8-30.7-35-18.5z\"></path></svg>\r\n                  </button>\r\n                )\r\n              }\r\n              {\r\n                props.displayedPhotoIndex < props.photos.length - 1 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={`${styles.slider__photo_btn} ${styles.slider__photo_btn_right}`}\r\n                    onClick={props.nextPhoto}>\r\n                    <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M715.8 493.5L335 165.1c-14.2-12.2-35-1.2-35 18.5v656.8c0 19.7 20.8 30.7 35 18.5l380.8-328.4c10.9-9.4 10.9-27.6 0-37z\"></path></svg>\r\n                  </button>\r\n                )\r\n              }\r\n            </div>\r\n            <div className={styles.slider__photo_image}>\r\n              <img src={props.photos[props.displayedPhotoIndex].photo.secure_url} alt=\"userImage\" />\r\n            </div>\r\n          </div>\r\n          <div className={`${styles.slider__info} ${showSmallScreenComments ? styles.slider__info_ss_show : \"\"}`}>\r\n            <div className={styles.slider__info_top}>\r\n              <div className={styles.slider__info_user}>\r\n                <div className={styles.slider__info_user_image}>\r\n                  <img src={props.user.profilePhotoUrl || noUserImg} alt=\"user\" />\r\n                </div>\r\n                <div className={styles.slider__info_user_data}>\r\n                  <Link to={`/user/${props.user._id}`} className={styles.slider__info_user_name}>\r\n                    {props.user.fullName}\r\n                  </Link>\r\n                  <p className={styles.slider__info_date}>\r\n                    {props.photos[props.displayedPhotoIndex].createdAt ? formatDateToYearMonthAndDay(props.photos[props.displayedPhotoIndex].createdAt) : \"\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className={styles.slider__close} onClick={props.onClosePhotoSlider}>close slider</div>\r\n              <div className={styles.slider__close_comments} onClick={onHideSmallScreenComments}>close comments</div>\r\n            </div>\r\n            <div className={styles.slider__desc}>\r\n              {\r\n                props.isAuthUser && props.onChangePhotoDescription && editPhotoDescInfo.show && (\r\n                  <EditPhotoDescriptionInput\r\n                    show={editPhotoDescInfo.show}\r\n                    input={editPhotoDescInfo.input}\r\n                    loading={actionLoading}\r\n                    onClose={onHidePhotoDescInput}\r\n                    onEditPhotoDescInputFocused={onEditPhotoDescInputFocused}\r\n                    onEditPhotoDescInputUnfocused={onEditPhotoDescInputUnfocused}\r\n                    onEditPhotoDescInputChanged={onEditPhotoDescInputChanged}\r\n                    submitDisabled={editPhotoDescInfo.input.description.valid}\r\n                    onSubmit={changePhotoDescription} />\r\n                )\r\n              }\r\n              {\r\n                !editPhotoDescInfo.show && (\r\n                  <p className={styles.slider__desc_text}>\r\n                    {props.photos[props.displayedPhotoIndex].description || \"No description\"}\r\n                  </p>\r\n                )\r\n              }\r\n              {\r\n                props.isAuthUser && !editPhotoDescInfo.show && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.slider__desc_edit}\r\n                    onClick={onShowPhotoDescInput}>\r\n                    <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m7 17.013 4.413-.015 9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583v4.43zM18.045 4.458l1.589 1.583-1.597 1.582-1.586-1.585 1.594-1.58zM9 13.417l6.03-5.973 1.586 1.586-6.029 5.971L9 15.006v-1.589z\"></path><path d=\"M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2z\"></path></svg>\r\n                  </button>\r\n                )\r\n              }\r\n            </div>\r\n            <div className={styles.slider__likes_and_comments}>\r\n              <LikesAndCommentsContainer\r\n                currentUserId={props.user._id}\r\n                itemId={props.photos[props.displayedPhotoIndex]._id}\r\n                likes={props.photos[props.displayedPhotoIndex].likes}\r\n                comments={props.photos[props.displayedPhotoIndex].comments}\r\n                onSubmitComment={commentOnPhoto}\r\n                onPrepareDeleteComment={onPrepareDeletePhotoComment}\r\n                onLikeItem={likePhoto}\r\n                onUnlikeItem={unlikePhoto}\r\n                onLikeComment={likePhotoComment}\r\n                onUnlikeComment={unlikePhotoComment}\r\n                hideLikingOption={props.hideLikingOption || false}\r\n                hideCommentingOption={props.hideCommentingOption || false} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhotoSlider;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"profileHeaderBtn_btn__2s4yj\",\"btn__add_friend\":\"profileHeaderBtn_btn__add_friend__aucbt\",\"btn__button\":\"profileHeaderBtn_btn__button__px2CQ\",\"btn__received_friend_request\":\"profileHeaderBtn_btn__received_friend_request__MBY-g\",\"btn__sent_friend_request\":\"profileHeaderBtn_btn__sent_friend_request__7RhoP\",\"btn__dropdown_list\":\"profileHeaderBtn_btn__dropdown_list__VtRhz\",\"btn__message\":\"profileHeaderBtn_btn__message__dJLVW\",\"btn__block\":\"profileHeaderBtn_btn__block__1yy0a\",\"btn__friends\":\"profileHeaderBtn_btn__friends__KftHd\",\"btn__button_icon\":\"profileHeaderBtn_btn__button_icon__Kmq--\",\"btn__button_text\":\"profileHeaderBtn_btn__button_text__A8I5L\",\"btn__button_arrow\":\"profileHeaderBtn_btn__button_arrow__lvpXT\",\"btn__dropdown\":\"profileHeaderBtn_btn__dropdown__QXsCX\",\"btn__dropdown_block\":\"profileHeaderBtn_btn__dropdown_block__yyuA1\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/buttons/profileHeaderBtn.module.scss';\r\n\r\ninterface Props {\r\n  text: string;\r\n  btnType: \"btn__friends\" | \"btn__add_friend\" | \"btn__received_friend_request\" | \"btn__sent_friend_request\" | \"btn__message\" | \"btn__block\";\r\n  btnClicked?: () => void;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst ProfileHeaderBtn: FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${styles.btn} ${styles[props.btnType]}`}>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.btn__button}\r\n        onClick={props.btnClicked}>\r\n        <span className={styles.btn__button_icon}>\r\n          {\r\n            props.btnType === \"btn__friends\"\r\n            ? <svg stroke=\"currentColor\" fill=\"none\" strokeWidth=\"2\" viewBox=\"0 0 24 24\" strokeLinecap=\"round\" strokeLinejoin=\"round\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M7 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"></path><path d=\"M5 22v-5l-1 -1v-4a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4l-1 1v5\"></path><path d=\"M17 5m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\"></path><path d=\"M15 22v-4h-2l2 -6a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1l2 6h-2v4\"></path></svg>\r\n            : props.btnType === \"btn__add_friend\"\r\n            ? <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 1024 1024\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M678.3 642.4c24.2-13 51.9-20.4 81.4-20.4h.1c3 0 4.4-3.6 2.2-5.6a371.67 371.67 0 0 0-103.7-65.8c-.4-.2-.8-.3-1.2-.5C719.2 505 759.6 431.7 759.6 349c0-137-110.8-248-247.5-248S264.7 212 264.7 349c0 82.7 40.4 156 102.6 201.1-.4.2-.8.3-1.2.5-44.7 18.9-84.8 46-119.3 80.6a373.42 373.42 0 0 0-80.4 119.5A373.6 373.6 0 0 0 137 888.8a8 8 0 0 0 8 8.2h59.9c4.3 0 7.9-3.5 8-7.8 2-77.2 32.9-149.5 87.6-204.3C357 628.2 432.2 597 512.2 597c56.7 0 111.1 15.7 158 45.1a8.1 8.1 0 0 0 8.1.3zM512.2 521c-45.8 0-88.9-17.9-121.4-50.4A171.2 171.2 0 0 1 340.5 349c0-45.9 17.9-89.1 50.3-121.6S466.3 177 512.2 177s88.9 17.9 121.4 50.4A171.2 171.2 0 0 1 683.9 349c0 45.9-17.9 89.1-50.3 121.6C601.1 503.1 558 521 512.2 521zM880 759h-84v-84c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v84h-84c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h84v84c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-84h84c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\"></path></svg>\r\n            : props.btnType === \"btn__received_friend_request\"\r\n            ? <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><g><path fill=\"none\" d=\"M0 0h24v24H0z\"></path><path d=\"M14 14.252v2.09A6 6 0 0 0 6 22l-2-.001a8 8 0 0 1 10-7.748zM12 13c-3.315 0-6-2.685-6-6s2.685-6 6-6 6 2.685 6 6-2.685 6-6 6zm0-2c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm8 6h3v2h-3v3.5L15 18l5-4.5V17z\"></path></g></svg>\r\n            : props.btnType === \"btn__sent_friend_request\"\r\n            ? <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 16 16\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15.964.686a.5.5 0 0 0-.65-.65L.767 5.855a.75.75 0 0 0-.124 1.329l4.995 3.178 1.531 2.406a.5.5 0 0 0 .844-.536L6.637 10.07l7.494-7.494-1.895 4.738a.5.5 0 1 0 .928.372l2.8-7Zm-2.54 1.183L5.93 9.363 1.591 6.602l11.833-4.733Z\"></path><path d=\"M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Zm-4.854-1.354a.5.5 0 0 0 0 .708l.647.646-.647.646a.5.5 0 0 0 .708.708l.646-.647.646.647a.5.5 0 0 0 .708-.708l-.647-.646.647-.646a.5.5 0 0 0-.708-.708l-.646.647-.646-.647a.5.5 0 0 0-.708 0Z\"></path></svg>\r\n            : props.btnType === \"btn__message\"\r\n            ? <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M20 2H4c-1.103 0-2 .897-2 2v12c0 1.103.897 2 2 2h3v3.767L13.277 18H20c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zm0 14h-7.277L9 18.233V16H4V4h16v12z\"></path><path d=\"M11 14h2v-3h3V9h-3V6h-2v3H8v2h3z\"></path></svg>\r\n            : <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M0 0h24v24H0z\"></path><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM4 12c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L5.69 16.9A7.902 7.902 0 014 12zm8 8c-1.85 0-3.55-.63-4.9-1.69L18.31 7.1A7.902 7.902 0 0120 12c0 4.42-3.58 8-8 8z\"></path></svg>\r\n          }\r\n        </span>\r\n        <span className={styles.btn__button_text}>\r\n          {props.text}\r\n        </span>\r\n        {(props.btnType === \"btn__friends\" || props.btnType === \"btn__received_friend_request\" || props.btnType === \"btn__sent_friend_request\") && (\r\n          <span className={styles.btn__button_arrow}>\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 16 16\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\"></path></svg>\r\n          </span>\r\n        )}\r\n      </button>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeaderBtn;","// extracted by mini-css-extract-plugin\nexport default {\"dropdown\":\"profileHeaderBtnDropdown_dropdown__szLAT\",\"dropdown__list\":\"profileHeaderBtnDropdown_dropdown__list__a2fZn\",\"dropdown__show\":\"profileHeaderBtnDropdown_dropdown__show__OmwCQ\",\"dropdown__friends\":\"profileHeaderBtnDropdown_dropdown__friends__kFrAd\",\"dropdown__received\":\"profileHeaderBtnDropdown_dropdown__received__KXqHY\",\"dropdown__sent\":\"profileHeaderBtnDropdown_dropdown__sent__XXNw2\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/buttons/profileHeaderBtnDropdown.module.scss';\r\nimport Backdrop from '../Shared/Backdrop';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  className: \"dropdown__friends\" | \"dropdown__received\" | \"dropdown__sent\";\r\n  listItems: {\r\n    text: string;\r\n    action: () => void;\r\n  }[];\r\n  onClose: () => void;\r\n}\r\n\r\nconst ProfileHeaderBtnDropdown: FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${styles.dropdown} ${props.show ? styles.dropdown__show : \"\"} ${styles[props.className]}`}>\r\n      <Backdrop\r\n        show={props.show}\r\n        bcgColor=\"transparent\"\r\n        onClose={props.onClose} />\r\n      <div className={styles.dropdown__list}>\r\n        {\r\n          props.listItems.map(item => {\r\n            return <span key={item.text} onClick={item.action}>{item.text}</span>;\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeaderBtnDropdown;","import { FC, useCallback, useState, useEffect } from 'react';\r\nimport styles from '../../../styles/components/profilePages/profileHeader.module.scss';\r\n// types\r\nimport { IUser } from '../../../types/profilePages/userProfile';\r\nimport { IUserPageState } from '../../../types/profilePages/userProfile';\r\n// hooks\r\nimport { useSendMessage } from '../../../hooks/useSendMessageHook/useSendMessage';\r\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n// components\r\nimport Spinner from '../../Shared/Spinner';\r\nimport ProfileHeaderBtn from '../../Buttons/ProfileHeaderBtn';\r\nimport ProfileHeaderBtnDropdown from '../../Buttons/ProfileHeaderBtnDropdown';\r\nimport ProfileHeaderUserInfo from './ProfileHeaderUserInfo';\r\nimport SendMessageModal from '../../ChatsAndMessages/SendMessageModal';\r\nimport DefaultModal from '../../Modals/DefaultModal';\r\nimport ModalBtn from '../../Buttons/ModalBtn';\r\n// redux\r\nimport { blockUser, onClearAuthError, resetBlockState } from '../../../store/actions/authActions';\r\nimport { getFriends } from '../../../store/actions/friendsActions';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n  loading: boolean;\r\n  friendStatus: IUserPageState[\"friendStatus\"];\r\n  whoCanAddUser: \"none\" | \"everyone\" | \"friendsOfFriends\";\r\n  whoCanMessageUser: \"friends\" | \"everyone\" | \"friendsOfFriends\";\r\n  haveMutualFriends: boolean;\r\n  onSendFriendRequest: () => void;\r\n  onUnsendFriendRequest: () => void;\r\n  onAcceptFriendRequest: () => void;\r\n  onDeclineFriendRequest: () => void;\r\n  onUnfriend: () => void;\r\n}\r\n\r\nconst ProfileHeaderUser: FC<Props> = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { authLoading, authErrorMsg, userJustBlocked } = useTypedSelector(state => state.auth);\r\n  const [btnDropdownShow, setBtnDropdownShow] = useState(false);\r\n  const [readyToBlockUser, setReadyToBlockUser] = useState(false);\r\n\r\n  const {\r\n    sendMessageLoading,\r\n    sendMessageErrorMsg,\r\n    messageInfo,\r\n    onClearSendMessageError,\r\n    onOpenSendMessageModal,\r\n    onCloseSendMessageModal,\r\n    onSendMessageInputTextFocused,\r\n    onSendMessageInputTextUnfocused,\r\n    onSendMessageInputTextChanged,\r\n    onSendMessageUploadPhoto,\r\n    onDeleteSendMessagePhoto,\r\n    onSendMessage\r\n  } = useSendMessage();\r\n\r\n  useEffect(() => {\r\n    if(userJustBlocked) {\r\n      navigate(\"/\", { replace: true });\r\n      dispatch(getFriends());\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    dispatch(resetBlockState());\r\n  }, [userJustBlocked, dispatch, navigate]);\r\n\r\n  const onOpenDropdown = (): void => {\r\n    setBtnDropdownShow(true);\r\n  };\r\n\r\n  const onCloseDropdown = (): void => {\r\n    setBtnDropdownShow(false);\r\n  };\r\n\r\n  const onUnsendFriendRequest = (): void => {\r\n    props.onUnsendFriendRequest();\r\n    setBtnDropdownShow(false);\r\n  };\r\n\r\n  const onAcceptFriendRequest = (): void => {\r\n    props.onAcceptFriendRequest();\r\n    setBtnDropdownShow(false);\r\n  };\r\n\r\n  const onDeclineFriendRequest = (): void => {\r\n    props.onDeclineFriendRequest();\r\n    setBtnDropdownShow(false);\r\n  };\r\n\r\n  const onUnfriend = (): void => {\r\n    props.onUnfriend();\r\n    setBtnDropdownShow(false);\r\n  };\r\n\r\n  const friendsDropdown = [\r\n    {\r\n      text: \"unfriend\",\r\n      action: onUnfriend\r\n    }\r\n  ];\r\n\r\n  const receivedDropdown = [\r\n    {\r\n      text: \"accept request\",\r\n      action: onAcceptFriendRequest\r\n    },\r\n    {\r\n      text: \"decline request\",\r\n      action: onDeclineFriendRequest\r\n    }\r\n  ];\r\n\r\n  const sentDropdown = [\r\n    {\r\n      text: \"cancel request\",\r\n      action: onUnsendFriendRequest\r\n    }\r\n  ];\r\n\r\n  const openMessageModal = useCallback((): void => {\r\n    onOpenSendMessageModal(props.user._id, props.user.fullName)\r\n  }, [onOpenSendMessageModal, props.user._id, props.user.fullName]);\r\n\r\n  const onPrepareBlockUser = useCallback((): void => {\r\n    setReadyToBlockUser(true);\r\n  }, []);\r\n\r\n  const onCancelBlockUser = useCallback((): void => {\r\n    setReadyToBlockUser(false);\r\n  }, []);\r\n\r\n  const onBlockUser = useCallback((): void => {\r\n    let relationTransformed: \"friends\" | \"none\" | \"sentPendingRequests\" | \"receivedPendingRequests\" = \"none\";\r\n    if(props.friendStatus === \"friends\") {\r\n      relationTransformed = \"friends\";\r\n    } else if(props.friendStatus === \"receivedFriendRequest\") {\r\n      relationTransformed = \"receivedPendingRequests\";\r\n    } else if (props.friendStatus === \"sentFriendRequest\") {\r\n      relationTransformed = \"sentPendingRequests\";\r\n    }\r\n    dispatch(blockUser(props.user._id, relationTransformed));\r\n    setReadyToBlockUser(false);\r\n  }, [dispatch, props.friendStatus, props.user._id]);\r\n\r\n  if(authLoading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {(sendMessageErrorMsg !== null || authErrorMsg !== null || readyToBlockUser) && (\r\n        <DefaultModal\r\n          show={sendMessageErrorMsg !== null || readyToBlockUser}\r\n          isErrorModal={sendMessageErrorMsg !== null || authErrorMsg !== null ? true : false}\r\n          title={sendMessageErrorMsg !== null || authErrorMsg !== null ? \"Error Occured\" : readyToBlockUser ? \"Preparing to block user\" : \"\"}\r\n          text={\r\n            sendMessageErrorMsg !== null\r\n            ? sendMessageErrorMsg\r\n            : authErrorMsg !== null\r\n            ? authErrorMsg\r\n            : readyToBlockUser\r\n            ? \"Are you sure you want to block this user?\"\r\n            : \"Unknown error\"\r\n          }\r\n          onClose={\r\n            sendMessageErrorMsg !== null\r\n            ? onClearSendMessageError\r\n            : authErrorMsg !== null\r\n            ? () => dispatch(onClearAuthError())\r\n            : readyToBlockUser\r\n            ? onCancelBlockUser\r\n            : () => {return}\r\n          }>\r\n          {\r\n            (sendMessageErrorMsg !== null || authErrorMsg !== null) && (\r\n              <ModalBtn\r\n                btnType=\"button\"\r\n                btnCustomType=\"btn__ok\"\r\n                btnText=\"OK\"\r\n                onClick={sendMessageErrorMsg !== null ? onClearSendMessageError : () => dispatch(onClearAuthError())} />\r\n            )\r\n          }\r\n          {\r\n            readyToBlockUser && (\r\n              <>\r\n                <ModalBtn\r\n                  btnType=\"button\"\r\n                  btnCustomType=\"btn__cancel\"\r\n                  btnText=\"cancel\"\r\n                  onClick={onCancelBlockUser} />\r\n                <ModalBtn\r\n                  btnType=\"button\"\r\n                  btnCustomType=\"btn__confirm\"\r\n                  btnText=\"block\"\r\n                  onClick={onBlockUser} />\r\n              </>\r\n            )\r\n          }\r\n        </DefaultModal>\r\n      )}\r\n      {messageInfo.userId !== null && messageInfo.userName !== null && (\r\n        <SendMessageModal\r\n          show={messageInfo.userId !== null && messageInfo.userName !== null}\r\n          loading={sendMessageLoading}\r\n          friendToSentMessageName={messageInfo.userName}\r\n          onClose={onCloseSendMessageModal}\r\n          messageTextInput={messageInfo.messageTextInput}\r\n          onMessageTextFocused={onSendMessageInputTextFocused}\r\n          onMessageTextUnfocused={onSendMessageInputTextUnfocused}\r\n          onMessageTextChanged={onSendMessageInputTextChanged}\r\n          photoFile={messageInfo.messagePhoto}\r\n          photoPreview={messageInfo.messagePhotoPreview}\r\n          onUploadPhoto={onSendMessageUploadPhoto}\r\n          onRemovePhoto={onDeleteSendMessagePhoto}\r\n          onSendMessageToUser={onSendMessage} />\r\n      )}\r\n      <section className={`${styles.header} ${styles.header__users}`}>\r\n        <ProfileHeaderUserInfo user={props.user} />\r\n        {\r\n          props.loading\r\n          ? <Spinner />\r\n          : (\r\n            <div className={styles.header__btns}>\r\n              {\r\n                props.friendStatus === \"friends\"\r\n                ? (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__friends\"\r\n                    text=\"Friends\"\r\n                    btnClicked={onOpenDropdown}>\r\n                    <ProfileHeaderBtnDropdown\r\n                      show={btnDropdownShow}\r\n                      className=\"dropdown__friends\"\r\n                      listItems={friendsDropdown}\r\n                      onClose={onCloseDropdown} />\r\n                  </ProfileHeaderBtn>\r\n                )\r\n                : props.friendStatus && props.friendStatus === \"receivedFriendRequest\"\r\n                ? (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__received_friend_request\"\r\n                    text=\"Confirm/Cancel\"\r\n                    btnClicked={onOpenDropdown}>\r\n                    <ProfileHeaderBtnDropdown\r\n                      show={btnDropdownShow}\r\n                      className=\"dropdown__received\"\r\n                      listItems={receivedDropdown}\r\n                      onClose={onCloseDropdown} />\r\n                  </ProfileHeaderBtn>\r\n                )\r\n                :  props.friendStatus && props.friendStatus === \"sentFriendRequest\"\r\n                ? (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__sent_friend_request\"\r\n                    text=\"Requested\"\r\n                    btnClicked={onOpenDropdown}>\r\n                    <ProfileHeaderBtnDropdown\r\n                      show={btnDropdownShow}\r\n                      className=\"dropdown__sent\"\r\n                      listItems={sentDropdown}\r\n                      onClose={onCloseDropdown} />\r\n                  </ProfileHeaderBtn>\r\n                )\r\n                : props.friendStatus && props.friendStatus === \"none\" && props.whoCanAddUser && props.whoCanAddUser === \"everyone\"\r\n                ? (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__add_friend\"\r\n                    text=\"Add Friend\"\r\n                    btnClicked={props.onSendFriendRequest} />\r\n                )\r\n                : props.friendStatus && props.friendStatus === \"none\" && props.whoCanAddUser && props.whoCanAddUser === \"friendsOfFriends\" && props.haveMutualFriends\r\n                ? (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__add_friend\"\r\n                    text=\"Add Friend\" />\r\n                )\r\n                : null\r\n              }\r\n              {\r\n                ((props.whoCanMessageUser === \"everyone\" || props.friendStatus === \"friends\") || (props.whoCanMessageUser === \"friendsOfFriends\" && props.haveMutualFriends)) && (\r\n                  <ProfileHeaderBtn\r\n                    btnType=\"btn__message\"\r\n                    text=\"Send Message\"\r\n                    btnClicked={openMessageModal} />\r\n                )\r\n              }\r\n              <ProfileHeaderBtn\r\n                btnType=\"btn__block\"\r\n                text=\"Block User\"\r\n                btnClicked={onPrepareBlockUser} />\r\n            </div>\r\n          )\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileHeaderUser;","import { FC } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileInfo.module.scss';\r\n// types\r\nimport { IProfile } from '../../types/profilePages/profileInfo';\r\nimport { IUser } from '../../types/profilePages/userProfile';\r\n// componants\r\nimport ProfileInfoSingleJob from './ProfileInfoSingleJob';\r\nimport ProfileInfoSingleResidence from './ProfileInfoSingleResidence';\r\nimport ProfileInfoSingleEducation from './ProfileInfoSingleEducation';\r\n// utils\r\nimport { formatDateToYearMonthAndDay } from '../../utils/formatDateToYearMonthAndDay';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n  isAuthUser: boolean;\r\n  profile: IProfile | null;\r\n}\r\n\r\nconst ProfileInfoUser: FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles.info}>\r\n      {\r\n        !props.profile || (props.profile && Object.keys(props.profile).length === 0)\r\n        ? <p className={styles.info__no_profile}>Data not available</p>\r\n        : (\r\n          <div className={styles.info__content}>\r\n            <div className={styles.info__top}>\r\n                <div className={`${styles.info__box} ${styles.info__box_basic}`}>\r\n                  <div className={styles.info__box_title}>\r\n                    <h4>Basic Info</h4>\r\n                  </div>\r\n                  <div className={styles.info__box_data}>\r\n                    <div className={styles.info__box_data_item}>\r\n                      <p className={styles.info__box_data_item_value}>\r\n                        <span className={styles.key}>Full Name: </span><span className={styles.value}>{props.user.fullName}</span>\r\n                      </p>\r\n                    </div>\r\n                    <div className={styles.info__box_data_item}>\r\n                      <p className={styles.info__box_data_item_value}>\r\n                        <span className={styles.key}>Email: </span><span className={styles.value}>{props.user.email}</span>\r\n                      </p>\r\n                    </div>\r\n                    <div className={styles.info__box_data_item}>\r\n                      <p className={styles.info__box_data_item_value}>\r\n                        <span className={styles.key}>Birthday: </span><span className={styles.value}>{props.user.dateOfBirth || \"No data\"}</span>\r\n                      </p>\r\n                    </div>\r\n                    <div className={styles.info__box_data_item}>\r\n                      <p className={styles.info__box_data_item_value}>\r\n                        <span className={styles.key}>Gender: </span><span className={styles.value}>{props.user.gender}</span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className={`${styles.info__box} ${styles.info__box_work}`}>\r\n                  <div className={styles.info__box_title}>\r\n                    <h4>Work</h4>\r\n                  </div>\r\n                  <div className={styles.info__box_dataflex}>\r\n                    <div className={styles.info__box_dataflex_subbox}>\r\n                      <div className={styles.title}>\r\n                        <h4>Current Jobs</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          props.profile.jobs.length === 0 || (props.profile.jobs.length > 0 && props.profile.jobs.every(job => !job.role))\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : props.profile.jobs.map(job => {\r\n                            return (\r\n                              <ProfileInfoSingleJob\r\n                                key={job._id}\r\n                                jobType=\"current\"\r\n                                job={job}\r\n                                isAuthUser={props.isAuthUser} />\r\n                            );\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${styles.info__box_dataflex_subbox} ${styles.info__box_dataflex_subbox__stretch}`}>\r\n                      <div className={styles.title}>\r\n                        <h4>Previous Jobs</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          props.profile.previousJobs.length === 0 || (props.profile.previousJobs.length > 0 && props.profile.previousJobs.every(job => !job.role))\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : props.profile.previousJobs.map(job => {\r\n                            return (\r\n                              <ProfileInfoSingleJob\r\n                                key={job._id}\r\n                                jobType=\"previous\"\r\n                                job={job}\r\n                                isAuthUser={props.isAuthUser} />\r\n                            );\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.info__bottom}>\r\n                <div className={styles.info__box}>\r\n                  <div className={styles.info__box_title}>\r\n                    <h4>Education</h4>\r\n                  </div>\r\n                  <div className={styles.info__box_dataflex}>\r\n                    <div className={styles.info__box_dataflex_subbox}>\r\n                      <div className={styles.title}>\r\n                        <h4>High School</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          !props.profile.highSchool || (props.profile.highSchool && !props.profile.highSchool.name)\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : (\r\n                            <div className={styles.item}>\r\n                              <p className={styles.item__info}>{props.profile.highSchool.status === \"finished\" ? \"Graduated \" : \"Goes to \"} <span>{props.profile.highSchool.name}</span> {props.profile.highSchool.country ? \"in\" : \"\"} {props.profile.highSchool.country ? <span>{props.profile.highSchool.country}</span> : \"\"} {props.profile.highSchool.state ? <span>/{props.profile.highSchool.state}</span> : \"\"} {props.profile.highSchool.city ? <span>/{props.profile.highSchool.city}</span> : \"\"} {props.profile.highSchool.status === \"finished\" && props.profile.highSchool.graduateDate ? \"on\" : \"\"} {props.profile.highSchool.status === \"finished\" && props.profile.highSchool.graduateDate ? <span>{formatDateToYearMonthAndDay(props.profile.highSchool.graduateDate)}</span> : \"\"}</p>\r\n                            </div>\r\n                          )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${styles.info__box_dataflex_subbox} ${styles.info__box_dataflex_subbox__stretch}`}>\r\n                      <div className={styles.title}>\r\n                        <h4>Colleges</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          props.profile.colleges.length === 0 || (props.profile.colleges.length > 0 && props.profile.colleges.every(coll => !coll.name))\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : props.profile.colleges.map(coll => {\r\n                            return (\r\n                              <ProfileInfoSingleEducation\r\n                                key={coll._id}\r\n                                education={coll}\r\n                                eduType=\"college\"\r\n                                isAuthUser={props.isAuthUser} />\r\n                            );\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${styles.info__box_dataflex_subbox} ${styles.info__box_dataflex_subbox__stretch}`}>\r\n                      <div className={styles.title}>\r\n                        <h4>Other</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          props.profile.educationOther.length === 0 || (props.profile.educationOther.length > 0 && props.profile.educationOther.every(ed => !ed.name))\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : props.profile.educationOther.map(edu => {\r\n                            return (\r\n                              <ProfileInfoSingleEducation\r\n                                key={edu._id}\r\n                                education={edu}\r\n                                eduType=\"education\"\r\n                                isAuthUser={props.isAuthUser} />\r\n                            );\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className={styles.info__box}>\r\n                  <div className={styles.info__box_title}>\r\n                    <h4>Residences</h4>\r\n                  </div>\r\n                  <div className={styles.info__box_dataflex}>\r\n                    <div className={styles.info__box_dataflex_subbox}>\r\n                      <div className={styles.title}>\r\n                        <h4>Current</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          !props.profile.currentResidence || (props.profile.currentResidence && !props.profile.currentResidence.country)\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : (\r\n                            <ProfileInfoSingleResidence\r\n                              residenceType=\"current\"\r\n                              residence={props.profile.currentResidence}\r\n                              isAuthUser={props.isAuthUser} />\r\n                          )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${styles.info__box_dataflex_subbox} ${styles.info__box_dataflex_subbox__stretch}`}>\r\n                      <div className={styles.title}>\r\n                        <h4>Previous</h4>\r\n                      </div>\r\n                      <div className={styles.items}>\r\n                        {\r\n                          props.profile.previousResidences.length === 0 || (props.profile.previousResidences.length > 0 && props.profile.previousResidences.every(resid => !resid.country))\r\n                          ? <p className={styles.no_info}>No Info</p>\r\n                          : props.profile.previousResidences.map(resid => {\r\n                            return (\r\n                              <ProfileInfoSingleResidence\r\n                                key={resid._id}\r\n                                residenceType=\"previous\"\r\n                                residence={resid}\r\n                                isAuthUser={props.isAuthUser} />\r\n                            );\r\n                          })\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoUser;","import { FC, useEffect } from 'react';\r\nimport styles from '../../styles/components/profilePages/profilePhotos.module.scss';\r\n// hooks\r\nimport { usePhotos } from '../../hooks/usePhotosHook/usePhotos';\r\n// components\r\nimport ProfileSelectedAlbum from '../PhotosAndAlbums/ProfileSelectedAlbum';\r\nimport ProfileSingleAlbum from '../PhotosAndAlbums/ProfileSingleAlbum';\r\nimport PhotoSlider from '../PhotosAndAlbums/PhotoSlider';\r\nimport DefaultModal from '../Modals/DefaultModal';\r\nimport ModalBtn from '../Buttons/ModalBtn';\r\nimport Spinner from '../Shared/Spinner';\r\n\r\ninterface Props {\r\n  user: {\r\n    _id: string;\r\n    fullName: string;\r\n    profilePhotoUrl: string;\r\n  };\r\n  whoCanSeePhotos: \"friends\" | \"none\" | \"everyone\" | \"friendsOfFriends\";\r\n  friendStatus: \"friends\" | \"none\" | \"sentFriendRequest\" | \"receivedFriendRequest\";\r\n  haveMutualFriends: boolean;\r\n  hideLikingOption: boolean;\r\n  hideCommentingOption: boolean;\r\n}\r\n\r\nconst ProfileUserPhotos: FC<Props> = (props) => {\r\n  const {\r\n    photosLoading,\r\n    photosErrorMsg,\r\n    albums,\r\n    selectedAlbum,\r\n    photoSliderInfo,\r\n    onGetPhotoAlbums,\r\n    onClearPhotosError,\r\n    onSelectPhotoAlbum,\r\n    onUnselectPhotoAlbum,\r\n    onOpenPhotoSlider,\r\n    onClosePhotoSlider,\r\n    onSliderPrevPhoto,\r\n    onSliderNextPhoto,\r\n    onLikePhoto,\r\n    onUnlikePhoto,\r\n    onCommentOnPhoto,\r\n    onDeletePhotoComment,\r\n    onLikePhotoComment,\r\n    onUnlikePhotoComment\r\n  } = usePhotos();\r\n\r\n  useEffect(() => {\r\n    if(props.whoCanSeePhotos === \"none\") {\r\n      return;\r\n    } \r\n    if(props.whoCanSeePhotos === \"friends\" && props.friendStatus !== \"friends\") {\r\n      return;\r\n    }\r\n    if(props.whoCanSeePhotos === \"friendsOfFriends\" && props.friendStatus !== \"friends\" && !props.haveMutualFriends) {\r\n      return;\r\n    }\r\n    onGetPhotoAlbums(`/${props.user._id}`);\r\n  }, [onGetPhotoAlbums, props.friendStatus, props.haveMutualFriends, props.whoCanSeePhotos, props.user._id]);\r\n\r\n  if(photosLoading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {photosErrorMsg && (\r\n        <DefaultModal\r\n          show={photosErrorMsg !== null}\r\n          isErrorModal={true}\r\n          title=\"Error occured\"\r\n          text={photosErrorMsg}\r\n          onClose={onClearPhotosError}>\r\n          <ModalBtn\r\n            btnType=\"button\"\r\n            btnCustomType=\"btn__ok\"\r\n            btnText=\"OK\"\r\n            onClick={onClearPhotosError} />\r\n        </DefaultModal>\r\n      )}\r\n      {photoSliderInfo.show && selectedAlbum && (\r\n        <PhotoSlider\r\n          user={props.user}\r\n          albumId={selectedAlbum._id}\r\n          displayedPhotoIndex={photoSliderInfo.currentPhotoIndex}\r\n          prevPhoto={onSliderPrevPhoto}\r\n          nextPhoto={onSliderNextPhoto}\r\n          photos={selectedAlbum.photos}\r\n          onClosePhotoSlider={onClosePhotoSlider}\r\n          hideLikingOption={props.hideLikingOption || false}\r\n          hideCommentingOption={props.hideCommentingOption || false}\r\n          onLikePhoto={onLikePhoto}\r\n          onUnlikePhoto={onUnlikePhoto}\r\n          onCommentOnPhoto={onCommentOnPhoto}\r\n          onDeletePhotoComment={onDeletePhotoComment}\r\n          onLikePhotoComment={onLikePhotoComment}\r\n          onUnlikePhotoComment={onUnlikePhotoComment} />\r\n      )}\r\n      <div className={styles.photos}>\r\n        {\r\n          selectedAlbum \r\n          ? (\r\n            <>\r\n              <div className={styles.photos__btns}>\r\n                <button \r\n                  className={`${styles.photos__btn} ${styles.photos__btn_back}`}\r\n                  onClick={onUnselectPhotoAlbum}>\r\n                  <span className={styles.photos__btn_icon}>\r\n                    <svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 512 512\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M215.469 332.802l29.863 29.864L352 256 245.332 149.333l-29.863 29.865 55.469 55.469H64v42.666h205.864l-54.395 55.469zM405.334 64H106.666C83.198 64 64 83.198 64 106.666V192h42.666v-85.333h298.668v298.668H106.666V320H64v85.334C64 428.802 83.198 448 106.666 448h298.668C428.802 448 448 428.802 448 405.334V106.666C448 83.198 428.802 64 405.334 64z\"></path></svg>\r\n                  </span>\r\n                  <span className={styles.photos__btn_text}>\r\n                    go back\r\n                  </span>\r\n                </button>\r\n              </div>\r\n              <ProfileSelectedAlbum\r\n                album={selectedAlbum}\r\n                onOpenPhotoSlider={onOpenPhotoSlider} />\r\n            </>\r\n          ) \r\n          : (\r\n            <div className={styles.photos__albums}>\r\n              {\r\n                albums.length === 0\r\n                ? <p className={styles.photos__albums_empty}>No Albums to show</p>\r\n                : albums.map(album => {\r\n                  return (\r\n                    <ProfileSingleAlbum\r\n                      key={album._id}\r\n                      album={album}\r\n                      onViewPhotoAlbum={onSelectPhotoAlbum} />\r\n                  );\r\n                })\r\n              }\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileUserPhotos;","import { FC, useState, useEffect, useCallback } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileFriends.module.scss';\r\n// hooks\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\nimport { useMutualFriends } from '../../hooks/useMutualFriendsHook/useMutualFriends';\r\nimport { useSendMessage } from '../../hooks/useSendMessageHook/useSendMessage';\r\n// types \r\nimport { IUserFriend } from '../../types/profilePages/userFriends';\r\n// components\r\nimport ProfileSingleFriend from '../Friends/ProfileSingleFriend';\r\nimport Spinner from '../Shared/Spinner';\r\nimport FriendsAndUsersModal from '../Modals/FriendsAndUsersModal';\r\nimport SendMessageModal from '../ChatsAndMessages/SendMessageModal';\r\nimport DefaultModal from '../Modals/DefaultModal';\r\nimport ModalBtn from '../Buttons/ModalBtn';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  userFriends: IUserFriend[];\r\n}\r\n\r\nconst ProfileUserFriends: FC<Props> = ({loading, userFriends}) => {\r\n  const { friends, sentPendingRequests, receivedPendingRequests } = useTypedSelector(state => state.friends);\r\n  const { authUser } = useTypedSelector(state => state.auth);\r\n  const [activeList, setActiveList] = useState<\"all\" | \"mutual\">(\"all\");\r\n  const [displayedFriends, setDisplayedFriends] = useState<IUserFriend[]>([]);\r\n  const [numOfMutualFriends, setNumOfMutualFriends] = useState(0);\r\n\r\n  const {\r\n    mutualFriendsInfo,\r\n    onOpenFriendsModal,\r\n    onCloseFriendsModal\r\n  } = useMutualFriends();\r\n\r\n  const {\r\n    sendMessageLoading,\r\n    sendMessageErrorMsg,\r\n    messageInfo,\r\n    onClearSendMessageError,\r\n    onOpenSendMessageModal,\r\n    onCloseSendMessageModal,\r\n    onSendMessageInputTextFocused,\r\n    onSendMessageInputTextUnfocused,\r\n    onSendMessageInputTextChanged,\r\n    onSendMessageUploadPhoto,\r\n    onDeleteSendMessagePhoto,\r\n    onSendMessage\r\n  } = useSendMessage();\r\n\r\n  const getMutialFriends = useCallback(() => {\r\n    const userFriendIds = friends.map(friend => friend.user._id);\r\n    const mutualFriends = userFriends.filter(friend => userFriendIds.includes(friend.user._id) && friend.user._id !== authUser!._id);\r\n    setNumOfMutualFriends(mutualFriends.length);\r\n  }, [authUser, friends, userFriends]);\r\n\r\n  useEffect(() => {\r\n    setDisplayedFriends([...userFriends]);\r\n    getMutialFriends();\r\n  }, [getMutialFriends, userFriends]);\r\n\r\n  const getUserRelationToAuthUser = (userId: string): \"none\" | \"friends\" | \"sentPendingRequests\" | \"receivedPendingRequests\" => {\r\n    const isFriend = friends.find(u => u.user._id === userId);\r\n    const isReceivedPending = receivedPendingRequests.find(u => u.user._id === userId);\r\n    const isSentPending = sentPendingRequests.find(u => u.user._id === userId);\r\n\r\n    if(isFriend) return \"friends\";\r\n    if(isReceivedPending) return \"receivedPendingRequests\";\r\n    if(isSentPending) return \"sentPendingRequests\";\r\n    return \"none\";\r\n  };\r\n\r\n  const onSetDisplayedFriends = (listType: \"all\" | \"mutual\"): void => {\r\n    if(listType === \"mutual\") {\r\n      const userFriendIds = friends.map(friend => friend.user._id);\r\n      const mutualFriends = userFriends.filter(friend => userFriendIds.includes(friend.user._id) && friend.user._id !== authUser!._id);\r\n\r\n      setDisplayedFriends([...mutualFriends]);\r\n    } else {\r\n      setDisplayedFriends([...userFriends]);\r\n    }\r\n    setActiveList(listType);\r\n  };\r\n\r\n  const openFriendsModal = useCallback((mutuals: string[], clickedFriendName: string): void => {\r\n    const displFriends = friends.filter(friend => mutuals.includes(friend.user._id));\r\n    onOpenFriendsModal(mutuals, clickedFriendName, displFriends);\r\n  }, [friends, onOpenFriendsModal]);\r\n\r\n  if(loading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {messageInfo.userId !== null && messageInfo.userName !== null && (\r\n        <SendMessageModal\r\n          show={messageInfo.userId !== null && messageInfo.userName !== null}\r\n          loading={sendMessageLoading}\r\n          friendToSentMessageName={messageInfo.userName}\r\n          onClose={onCloseSendMessageModal}\r\n          messageTextInput={messageInfo.messageTextInput}\r\n          onMessageTextFocused={onSendMessageInputTextFocused}\r\n          onMessageTextUnfocused={onSendMessageInputTextUnfocused}\r\n          onMessageTextChanged={onSendMessageInputTextChanged}\r\n          photoFile={messageInfo.messagePhoto}\r\n          photoPreview={messageInfo.messagePhotoPreview}\r\n          onUploadPhoto={onSendMessageUploadPhoto}\r\n          onRemovePhoto={onDeleteSendMessagePhoto}\r\n          onSendMessageToUser={onSendMessage} />\r\n      )}\r\n      {sendMessageErrorMsg !== null && (\r\n        <DefaultModal\r\n          show={sendMessageErrorMsg !== null}\r\n          isErrorModal={true}\r\n          title=\"Error Occured\"\r\n          text={sendMessageErrorMsg}\r\n          onClose={onClearSendMessageError}>\r\n          <ModalBtn\r\n            btnType=\"button\"\r\n            btnCustomType=\"btn__ok\"\r\n            btnText=\"OK\"\r\n            onClick={onClearSendMessageError} />\r\n        </DefaultModal>\r\n      )}\r\n      {mutualFriendsInfo.modalShow && mutualFriendsInfo.clickedFriendName && (\r\n        <FriendsAndUsersModal\r\n          show={mutualFriendsInfo.modalShow}\r\n          title={`Mutual Friends with ${mutualFriendsInfo.clickedFriendName}`}\r\n          friends={mutualFriendsInfo.mutualFriends}\r\n          onClose={onCloseFriendsModal} />\r\n      )}\r\n      <div className={styles.friends}>\r\n        <div className={styles.friends__btns}>\r\n          <button\r\n            type=\"button\"\r\n            className={`${styles.friends__btn} ${activeList === \"all\" ? styles.friends__btn_active : \"\"}`}\r\n            onClick={() => onSetDisplayedFriends(\"all\")}>\r\n            <span>all </span><span>({userFriends.length})</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`${styles.friends__btn} ${activeList === \"mutual\" ? styles.friends__btn_active : \"\"}`}\r\n            onClick={() => onSetDisplayedFriends(\"mutual\")}>\r\n            <span>mutual </span><span>({numOfMutualFriends})</span>\r\n          </button>\r\n        </div>\r\n        <div className={styles.friends__list}>\r\n          {\r\n            displayedFriends.length === 0\r\n            ? <p className={styles.friends__list_empty}>No list to show</p>\r\n            : displayedFriends.map(friend => {\r\n              return (\r\n                <ProfileSingleFriend\r\n                  key={friend.user._id}\r\n                  userRelation={getUserRelationToAuthUser(friend.user._id)}\r\n                  user={friend.user}\r\n                  mutualFriends={friend.mutualFriends}\r\n                  whoCanMessageUser={friend.whoCanMessageUser}\r\n                  onOpenFriendsModal={openFriendsModal}\r\n                  onOpenSendMessageModal={onOpenSendMessageModal} />\r\n              );\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileUserFriends;","import { FC, useState, useEffect, useCallback } from 'react';\r\nimport axiosUser from '../axios/axiosUser';\r\nimport axiosProfile from '../axios/axiosProfile';\r\n// hooks\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { usePosts } from '../hooks/usePostsHook/usePosts';\r\n// types\r\nimport { IUserPageState, IUserPageResponseData } from '../types/profilePages/userProfile';\r\nimport { IProfile, IProfileResponseData } from '../types/profilePages/profileInfo';\r\nimport { IUserFriend } from '../types/profilePages/userFriends';\r\n// components\r\nimport PageContainer from '../components/Shared/PageContainer';\r\nimport ProfileHeaderUser from '../components/ProfilePages/ProfileHeader/ProfileHeaderUser';\r\nimport DefaultModal from '../components/Modals/DefaultModal';\r\nimport ProfileDataContainer from '../components/ProfilePages/ProfileDataContainer';\r\nimport ModalBtn from '../components/Buttons/ModalBtn';\r\n// redux\r\nimport { sendFriendRequest, unsendFriendRequest, declineFriendRequest, acceptFriendRequest, unfriend, resetRequestStatus, clearFriendsError } from '../store/actions/friendsActions';\r\nimport PostsContaniner from '../components/Posts/PostsContaniner';\r\nimport ProfileInfoUser from '../components/ProfilePages/ProfileInfoUser';\r\nimport axiosFriends from '../axios/axiosFriends';\r\nimport ProfileUserPhotos from '../components/ProfilePages/ProfileUserPhotos';\r\nimport ProfileUserFriends from '../components/ProfilePages/ProfileUserFriends';\r\nimport Spinner from '../components/Shared/Spinner';\r\n\r\nconst UserProfilePage: FC = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { userId } = useParams();\r\n\r\n  const {\r\n    postsLoading,\r\n    posts,\r\n    onLoadPosts,\r\n    onLikePost,\r\n    onUnlikePost,\r\n    onCommentOnPost,\r\n    onDeletePostComment,\r\n    onLikePostComment,\r\n    onUnlikePostComment\r\n  } = usePosts();\r\n\r\n  const [userDataLoading, setUserDataLoading] = useState(false);\r\n  const [userDataErrorMsg, setUserDataErrorMsg] = useState<string | null>(null);\r\n  const { requestStatus, friendsLoading, friendsErrorMsg } = useTypedSelector(state => state.friends);\r\n  const { authUser } = useTypedSelector(state => state.auth);\r\n  const [userInfo, setUserInfo] = useState<IUserPageState>({\r\n    user: null,\r\n    settings: null,\r\n    friendStatus: \"none\",\r\n    haveMutualFriends: false\r\n  });\r\n\r\n  const [userProfileInfo, setUserProfileInfo] = useState<IProfile | null>(null);\r\n  const [userFriends, setUserFriends] = useState<IUserFriend[]>([]);\r\n\r\n  const [activeLink, setActiveLink] = useState<\"posts\" | \"info\" | \"photos\" | \"friends\">(\"posts\");\r\n\r\n  useEffect(() => {\r\n    if(requestStatus === \"requested\") {\r\n      setUserInfo(prev => {\r\n        return {\r\n          ...prev,\r\n          friendStatus: \"sentFriendRequest\"\r\n        };\r\n      });\r\n    } else if(requestStatus === \"unsent\") {\r\n      setUserInfo(prev => {\r\n        return {\r\n          ...prev,\r\n          friendStatus: \"none\"\r\n        };\r\n      });\r\n    } else if(requestStatus === \"accepted\") {\r\n      setUserInfo(prev => {\r\n        return {\r\n          ...prev,\r\n          friendStatus: \"friends\"\r\n        };\r\n      });\r\n    } else if(requestStatus === \"declined\") {\r\n      setUserInfo(prev => {\r\n        return {\r\n          ...prev,\r\n          friendStatus: \"none\"\r\n        };\r\n      });\r\n    } else if(requestStatus === \"unfriended\") {\r\n      setUserInfo(prev => {\r\n        return {\r\n          ...prev,\r\n          friendStatus: \"none\"\r\n        };\r\n      });\r\n    } else if(requestStatus === \"idle\") {\r\n      return;\r\n    }\r\n    dispatch(resetRequestStatus());\r\n  }, [requestStatus, dispatch])\r\n\r\n  const getUserData = useCallback(async(): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n    \r\n    setUserDataLoading(true);\r\n    if(!userId) {\r\n      setUserDataErrorMsg(\"User not found. Try refreshing the page\");\r\n      return;\r\n    }\r\n    if(userId && authUser && userId === authUser._id) {\r\n      navigate(\"/me\", { replace: true });\r\n      return;\r\n    }\r\n    try {\r\n      const { data } = await axiosUser.get<IUserPageResponseData>(`/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setUserInfo({\r\n        user: data.user,\r\n        settings: data.userSettings,\r\n        friendStatus: data.friendStatus,\r\n        haveMutualFriends: data.haveMutualFriends\r\n      });\r\n\r\n      onLoadPosts(data.posts);\r\n      setUserProfileInfo(null);\r\n      setUserFriends([]);\r\n      setActiveLink(\"posts\");\r\n    } catch(error) {\r\n      setUserDataErrorMsg((error as any).response.data.message);\r\n    }\r\n    setUserDataLoading(false);\r\n  }, [userId, authUser, navigate, onLoadPosts]);\r\n\r\n  useEffect(() => {\r\n    getUserData();\r\n  }, [getUserData]);\r\n\r\n  const onClearUserError = (): void => {\r\n    setUserDataErrorMsg(null)\r\n  };\r\n\r\n  const onClearFriendsError = (): void => {\r\n    dispatch(clearFriendsError());\r\n  };\r\n\r\n  const onSendFriendRequest = useCallback(async() => {\r\n    if(userInfo.user) {\r\n      dispatch(sendFriendRequest(userInfo.user._id));\r\n    }\r\n  }, [userInfo.user, dispatch]);\r\n\r\n  const onUnsendFriendRequest = useCallback((): void => {\r\n    if(userInfo.user) {\r\n      dispatch(unsendFriendRequest(userInfo.user._id));\r\n    }\r\n  }, [userInfo.user, dispatch]);\r\n\r\n  const onAcceptFriendRequest = useCallback((): void => {\r\n    if(userInfo.user) {\r\n      dispatch(acceptFriendRequest(userInfo.user._id));\r\n    }\r\n  }, [userInfo.user, dispatch]);\r\n\r\n  const onDeclineFriendRequest = useCallback((): void => {\r\n    if(userInfo.user) {\r\n      dispatch(declineFriendRequest(userInfo.user._id));\r\n    }\r\n  }, [userInfo.user, dispatch]);\r\n\r\n  const onUnfriend = useCallback((): void => {\r\n    if(userInfo.user) {\r\n      dispatch(unfriend(userInfo.user._id));\r\n    }\r\n  }, [userInfo.user, dispatch]);\r\n\r\n  const onGetUserProfile = useCallback(async(): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      if(!userInfo.user || !userInfo.settings) {\r\n        setUserDataErrorMsg(\"User profile not found\");\r\n        return;\r\n      }\r\n      if(userProfileInfo) {\r\n        return;\r\n      }\r\n      setUserDataLoading(true);\r\n\r\n      const { data } = await axiosProfile.get<IProfileResponseData>(`/${userInfo.user._id}/${userInfo.settings.profileAccess.whoCanSeeMyProfileInfo}`,  {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      setUserProfileInfo(data.profile);\r\n    } catch(error) {\r\n      setUserDataErrorMsg((error as any).response.data.message);\r\n    }\r\n    setUserDataLoading(false);\r\n  }, [userInfo, userProfileInfo]);\r\n\r\n  const onGetUserFriends = useCallback(async(): Promise<void> => {\r\n    if(!userId) {\r\n      return setUserDataErrorMsg(\"Friend List not found. Try refreshing the page\");\r\n    }\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n    setUserDataLoading(true);\r\n    try {\r\n      const { data } = await axiosFriends.get<{status: string; friends: IUserFriend[]}>(`/userFriends/${userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      }); \r\n      console.log(data);\r\n      setUserFriends(data.friends);\r\n    } catch(error) {\r\n      setUserDataErrorMsg((error as any).response.data.message);\r\n    }\r\n    setUserDataLoading(false);\r\n  }, [userId]);\r\n\r\n  const onChangeActiveLink = useCallback((link: \"posts\" | \"info\" | \"photos\" | \"friends\"): void => {\r\n    if(link === \"info\") {\r\n      onGetUserProfile();\r\n    }  else if(link === \"friends\") {\r\n      onGetUserFriends();\r\n    }\r\n    setActiveLink(link);\r\n  }, [onGetUserProfile, onGetUserFriends]);\r\n\r\n  if(userDataLoading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      {(userDataErrorMsg || friendsErrorMsg) && (\r\n        <DefaultModal\r\n          show={userDataErrorMsg !== null || friendsErrorMsg !== null}\r\n          isErrorModal={true}\r\n          title=\"Error occured\"\r\n          text={userDataErrorMsg !== null && !friendsErrorMsg ? userDataErrorMsg : !userDataErrorMsg && friendsErrorMsg !== null ? friendsErrorMsg : \"Something went wrong\"}\r\n          onClose={\r\n            userDataErrorMsg !== null && !friendsErrorMsg\r\n            ? onClearUserError\r\n            : !userDataErrorMsg && friendsErrorMsg !== null\r\n            ? onClearFriendsError\r\n            : () => {\r\n              onClearUserError();\r\n              onClearFriendsError();\r\n            }\r\n          }>\r\n          <ModalBtn\r\n            btnCustomType=\"btn__ok\"\r\n            btnText=\"ok\"\r\n            btnType=\"button\"\r\n            onClick={userDataErrorMsg !== null && !friendsErrorMsg\r\n              ? onClearUserError\r\n              : !userDataErrorMsg && friendsErrorMsg !== null\r\n              ? onClearFriendsError\r\n              : () => {\r\n                onClearUserError();\r\n                onClearFriendsError();\r\n            }} />\r\n        </DefaultModal>\r\n      )}\r\n      <PageContainer\r\n        display=\"container__block\"\r\n        hasPageTitle={false}\r\n        loading={userDataLoading}\r\n        width=\"big\">\r\n        {\r\n          userInfo && userInfo.user && userInfo.settings && (\r\n            <>\r\n              <ProfileHeaderUser\r\n                user={userInfo.user}\r\n                loading={friendsLoading || userDataLoading}\r\n                friendStatus={userInfo.friendStatus}\r\n                haveMutualFriends={userInfo.haveMutualFriends}\r\n                whoCanAddUser={userInfo.settings.friendRequests.whoCanAddMe}\r\n                whoCanMessageUser={userInfo.settings.messaging.whoCanMessageMe}\r\n                onSendFriendRequest={onSendFriendRequest}\r\n                onUnsendFriendRequest={onUnsendFriendRequest}\r\n                onAcceptFriendRequest={onAcceptFriendRequest}\r\n                onDeclineFriendRequest={onDeclineFriendRequest}\r\n                onUnfriend={onUnfriend} />\r\n              <ProfileDataContainer\r\n                loading={userDataLoading || friendsLoading}\r\n                activeLink={activeLink}\r\n                onGetUserProfile={onGetUserProfile}\r\n                onChangeActiveLink={onChangeActiveLink}>\r\n                {\r\n                  activeLink === \"posts\" && (\r\n                    <PostsContaniner\r\n                      loading={postsLoading}\r\n                      posts={posts}\r\n                      onCommentOnPost={onCommentOnPost}\r\n                      onDeletePostComment={onDeletePostComment}\r\n                      onLikePost={onLikePost}\r\n                      onUnlikePost={onUnlikePost}\r\n                      onLikePostComment={onLikePostComment}\r\n                      onUnlikePostComment={onUnlikePostComment}\r\n                      hideLikingOption={\r\n                        userInfo.settings.commentingAndLiking.whoCanLikeMyPosts === \"none\"\r\n                        || (userInfo.settings.commentingAndLiking.whoCanLikeMyPosts === \"friends\" && userInfo.friendStatus !== \"friends\")\r\n                        || (userInfo.settings.commentingAndLiking.whoCanLikeMyPosts === \"friendsOfFriends\" && userInfo.friendStatus !== \"friends\" && !userInfo.haveMutualFriends)\r\n                        ? true\r\n                        : false\r\n                      }\r\n                      hideCommentingOption={\r\n                        userInfo.settings.commentingAndLiking.whoCanCommentMyPosts === \"none\"\r\n                        || (userInfo.settings.commentingAndLiking.whoCanCommentMyPosts === \"friends\" && userInfo.friendStatus !== \"friends\")\r\n                        || (userInfo.settings.commentingAndLiking.whoCanCommentMyPosts === \"friendsOfFriends\" && userInfo.friendStatus !== \"friends\" && !userInfo.haveMutualFriends)\r\n                        ? true\r\n                        : false\r\n                      } />\r\n                  )\r\n                }\r\n                {\r\n                  activeLink === \"info\" && !friendsLoading && !userDataLoading && (\r\n                    <ProfileInfoUser\r\n                      user={userInfo.user}\r\n                      isAuthUser={false}\r\n                      profile={userProfileInfo} />\r\n                  )\r\n                }\r\n                {\r\n                  activeLink === \"photos\" && (\r\n                    <ProfileUserPhotos\r\n                      user={{\r\n                        _id: userInfo.user._id,\r\n                        fullName: userInfo.user.fullName,\r\n                        profilePhotoUrl: userInfo.user.profilePhotoUrl\r\n                      }}\r\n                      whoCanSeePhotos={userInfo.settings.profileAccess.whoCanSeeMyPhotos}\r\n                      friendStatus={userInfo.friendStatus}\r\n                      haveMutualFriends={userInfo.haveMutualFriends}\r\n                      hideLikingOption={\r\n                        userInfo.settings.commentingAndLiking.whoCanLikeMyPhotos === \"none\"\r\n                        || (userInfo.settings.commentingAndLiking.whoCanLikeMyPhotos === \"friends\" && userInfo.friendStatus !== \"friends\")\r\n                        || (userInfo.settings.commentingAndLiking.whoCanLikeMyPhotos === \"friendsOfFriends\" && userInfo.friendStatus !== \"friends\" && !userInfo.haveMutualFriends)\r\n                        ? true\r\n                        : false\r\n                      }\r\n                      hideCommentingOption={\r\n                        userInfo.settings.commentingAndLiking.whoCanCommentMyPhotos === \"none\"\r\n                        || (userInfo.settings.commentingAndLiking.whoCanCommentMyPhotos === \"friends\" && userInfo.friendStatus !== \"friends\")\r\n                        || (userInfo.settings.commentingAndLiking.whoCanCommentMyPhotos === \"friendsOfFriends\" && userInfo.friendStatus !== \"friends\" && !userInfo.haveMutualFriends)\r\n                        ? true\r\n                        : false\r\n                      } />\r\n                  )\r\n                }\r\n                {\r\n                  activeLink === \"friends\" && !friendsLoading && !userDataLoading && (\r\n                    <ProfileUserFriends\r\n                      loading={userDataLoading || friendsLoading}\r\n                      userFriends={userFriends} />\r\n                  )\r\n                }\r\n              </ProfileDataContainer>\r\n            </>\r\n          )\r\n        }\r\n      </PageContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;"],"names":["editPhotoDescriptionInput","description","elementType","IInputElementTypes","inputDisplay","IInputDisplays","attributes","id","name","placeholder","label","labelShow","labelFor","labelText","validation","required","focused","touched","value","valid","errorMsg","EditPhotoDescriptionInput","props","_jsxs","_Fragment","children","_jsx","Backdrop","show","bcgColor","onClose","hiperZIndex","className","styles","onSubmit","Input","_objectSpread","input","inputGroup","onInputFocus","onEditPhotoDescInputFocused","onInputUnfocus","onEditPhotoDescInputUnfocused","onInputChange","onEditPhotoDescInputChanged","loading","type","concat","disabled","submitDisabled","onClick","memo","onCommentOnPhoto","onDeletePhotoComment","onLikePhoto","onUnlikePhoto","onLikePhotoComment","onUnlikePhotoComment","onChangePhotoDescription","_useState","useState","_useState2","_slicedToArray","actionLoading","setActionLoading","_useState3","_useState4","actionErrorMsg","setActionErrorMsg","_useState5","_useState6","showSmallScreenComments","setShowSmallScreenComments","_useState7","_useState8","editPhotoDescInfo","setEditPhotoDescInfo","_useState9","albumId","photoId","commentId","_useState10","deleteCommentInfo","setDeleteCommentInfo","onHideSmallScreenComments","useCallback","onCloseDeleteCommentModal","commentOnPhoto","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commentTextValue","commentPhoto","commentTaggs","wrap","_context","prev","next","stop","_x","_x2","_x3","_x4","apply","arguments","onPrepareDeletePhotoComment","deletePhotoComment","_callee2","_context2","likePhoto","_ref3","_callee3","_context3","_x5","unlikePhoto","_ref4","_callee4","_context4","_x6","likePhotoComment","_ref5","_callee5","_context5","_x7","_x8","unlikePhotoComment","_ref6","_callee6","_context6","_x9","_x10","onHidePhotoDescInput","_","event","target","trim","length","changePhotoDescription","_ref7","_callee7","_context7","preventDefault","abrupt","photos","displayedPhotoIndex","_id","_x11","onClearActionErrorMsg","DefaultModal","isErrorModal","title","text","ModalBtn","btnType","btnCustomType","btnText","isSmallScreenSliderBackdrop","onClosePhotoSlider","prevPhoto","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","nextPhoto","src","photo","secure_url","alt","user","profilePhotoUrl","noUserImg","Link","to","fullName","createdAt","formatDateToYearMonthAndDay","isAuthUser","descValue","LikesAndCommentsContainer","currentUserId","itemId","likes","comments","onSubmitComment","onPrepareDeleteComment","onLikeItem","onUnlikeItem","onLikeComment","onUnlikeComment","hideLikingOption","hideCommentingOption","btnClicked","strokeLinecap","strokeLinejoin","listItems","map","item","action","dispatch","useDispatch","navigate","useNavigate","_useTypedSelector","useTypedSelector","state","auth","authLoading","authErrorMsg","userJustBlocked","btnDropdownShow","setBtnDropdownShow","readyToBlockUser","setReadyToBlockUser","_useSendMessage","useSendMessage","sendMessageLoading","sendMessageErrorMsg","messageInfo","onClearSendMessageError","onOpenSendMessageModal","onCloseSendMessageModal","onSendMessageInputTextFocused","onSendMessageInputTextUnfocused","onSendMessageInputTextChanged","onSendMessageUploadPhoto","onDeleteSendMessagePhoto","onSendMessage","useEffect","replace","getFriends","resetBlockState","onOpenDropdown","onCloseDropdown","friendsDropdown","onUnfriend","receivedDropdown","onAcceptFriendRequest","onDeclineFriendRequest","sentDropdown","onUnsendFriendRequest","openMessageModal","onPrepareBlockUser","onCancelBlockUser","onBlockUser","relationTransformed","friendStatus","blockUser","Spinner","onClearAuthError","userId","userName","SendMessageModal","friendToSentMessageName","messageTextInput","onMessageTextFocused","onMessageTextUnfocused","onMessageTextChanged","photoFile","messagePhoto","photoPreview","messagePhotoPreview","onUploadPhoto","onRemovePhoto","onSendMessageToUser","ProfileHeaderUserInfo","ProfileHeaderBtn","ProfileHeaderBtnDropdown","whoCanAddUser","onSendFriendRequest","haveMutualFriends","whoCanMessageUser","profile","Object","keys","email","dateOfBirth","gender","jobs","every","job","role","ProfileInfoSingleJob","jobType","previousJobs","highSchool","status","country","city","graduateDate","colleges","coll","ProfileInfoSingleEducation","education","eduType","educationOther","ed","edu","currentResidence","ProfileInfoSingleResidence","residenceType","residence","previousResidences","resid","_usePhotos","usePhotos","photosLoading","photosErrorMsg","albums","selectedAlbum","photoSliderInfo","onGetPhotoAlbums","onClearPhotosError","onSelectPhotoAlbum","onUnselectPhotoAlbum","onOpenPhotoSlider","onSliderPrevPhoto","onSliderNextPhoto","whoCanSeePhotos","PhotoSlider","currentPhotoIndex","ProfileSelectedAlbum","album","ProfileSingleAlbum","onViewPhotoAlbum","userFriends","friends","sentPendingRequests","receivedPendingRequests","authUser","activeList","setActiveList","displayedFriends","setDisplayedFriends","numOfMutualFriends","setNumOfMutualFriends","_useMutualFriends","useMutualFriends","mutualFriendsInfo","onOpenFriendsModal","onCloseFriendsModal","getMutialFriends","userFriendIds","friend","mutualFriends","filter","includes","_toConsumableArray","getUserRelationToAuthUser","isFriend","find","u","isReceivedPending","isSentPending","onSetDisplayedFriends","listType","openFriendsModal","mutuals","clickedFriendName","displFriends","modalShow","FriendsAndUsersModal","ProfileSingleFriend","userRelation","useParams","_usePosts","usePosts","postsLoading","posts","onLoadPosts","onLikePost","onUnlikePost","onCommentOnPost","onDeletePostComment","onLikePostComment","onUnlikePostComment","userDataLoading","setUserDataLoading","userDataErrorMsg","setUserDataErrorMsg","requestStatus","friendsLoading","friendsErrorMsg","settings","userInfo","setUserInfo","userProfileInfo","setUserProfileInfo","setUserFriends","_useState11","_useState12","activeLink","setActiveLink","resetRequestStatus","getUserData","token","_yield$axiosUser$get","data","localStorage","getItem","axiosUser","headers","Authorization","sent","userSettings","t0","response","message","onClearUserError","onClearFriendsError","clearFriendsError","sendFriendRequest","unsendFriendRequest","acceptFriendRequest","declineFriendRequest","unfriend","onGetUserProfile","_yield$axiosProfile$g","axiosProfile","profileAccess","whoCanSeeMyProfileInfo","onGetUserFriends","_yield$axiosFriends$g","axiosFriends","console","log","onChangeActiveLink","link","PageContainer","display","hasPageTitle","ProfileHeaderUser","friendRequests","whoCanAddMe","messaging","whoCanMessageMe","ProfileDataContainer","PostsContaniner","commentingAndLiking","whoCanLikeMyPosts","whoCanCommentMyPosts","ProfileInfoUser","ProfileUserPhotos","whoCanSeeMyPhotos","whoCanLikeMyPhotos","whoCanCommentMyPhotos","ProfileUserFriends"],"sourceRoot":""}