{"version":3,"file":"static/js/625.5e6e7565.chunk.js","mappings":"8KACA,GAAgB,KAAO,wBAAwB,YAAc,+BAA+B,WAAa,8BAA8B,WAAa,+B,2DCyB9IA,EAAuB,SAACC,GAC5B,OAAOC,EAAAA,cACLC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPC,KAAMP,EAAMO,KACZC,SAAS,OACTC,QAAST,EAAMS,WACjBP,EAAAA,EAAAA,MAAA,OAAKQ,UAAWC,EAAAA,KAAYP,SAAA,EAC1BC,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CACTC,KAAMb,EAAMc,MACZC,QAASf,EAAMe,UAAW,EAC1BN,QAAST,EAAMS,WACjBJ,EAAAA,EAAAA,KAAA,QAAMK,UAAWC,EAAAA,WAAmBK,SAAUhB,EAAMgB,SAASZ,SAEzDJ,EAAMe,SACJV,EAAAA,EAAAA,KAACY,EAAAA,EAAO,KAENf,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAAA,aAAoBP,UAClCC,EAAAA,EAAAA,KAACa,EAAAA,EAAa,CACZC,gBAAgB,EAChBC,eAAe,QACfC,iBAAiB,EACjBC,OAAQtB,EAAMuB,KAAKD,OACnBE,aAAcxB,EAAMwB,aACpBC,oBAAqBzB,EAAMyB,oBAC3BC,eAAgB1B,EAAM2B,cACtBC,cAAe5B,EAAM4B,cACrBC,oBAAqB7B,EAAM6B,oBAC3BC,mBAAoB9B,EAAM8B,wBAE9B5B,EAAAA,EAAAA,MAAA,OAAKQ,UAAWC,EAAAA,WAAkBP,SAAA,EAChCC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,cACdC,QAAQ,SACRC,QAASnC,EAAMS,WACjBJ,EAAAA,EAAAA,KAAC0B,EAAAA,EAAQ,CACPC,QAAQ,SACRC,cAAc,eACdC,QAAQ,SACRE,UAAWpC,EAAMqC,iCAQnCC,SAASC,eAAe,SAE5B,EAEA,GAAeC,EAAAA,EAAAA,MAAKzC,E","sources":["webpack://frontend/./src/styles/components/modals/formModal.module.scss?31ce","components/Modals/FormModal.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"formModal_form__7PRC2\",\"modalAppear\":\"formModal_modalAppear__U+adW\",\"form__form\":\"formModal_form__form__oHVVl\",\"form__btns\":\"formModal_form__btns__X64xw\"};","import { FC, FormEventHandler, ChangeEvent, memo } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from '../../styles/components/modals/formModal.module.scss';\r\nimport { IForm } from '../../types/formsAndInputs/form';\r\nimport Backdrop from '../Shared/Backdrop';\r\nimport InputRenderer from '../Inputs/InputRenderer';\r\nimport ModalBtn from '../Buttons/ModalBtn';\r\nimport Spinner from '../Shared/Spinner';\r\nimport ModalTitle from './ModalTitle';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  show: boolean;\r\n  form: IForm;\r\n  submiBtnDisabled?: boolean;\r\n  title: string;\r\n  onClose: () => void;\r\n  onInputFocus: (inputGroup: string, inputName: string) => void;\r\n  onCountryInputFocus?: (inputGroup: string, inputName: string) => Promise<void>;\r\n  onInpuUnfocus: (inputGroup: string, inputName: string) => void;\r\n  onInputChange: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, inputGroup: string) => void;\r\n  onSelectInputChange: (inputGroup: string, inputName: string, inputValue: string) => Promise<void>;\r\n  onRadioInputChange?: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, inputGroup: string) => void;\r\n  onSubmit: FormEventHandler<HTMLFormElement>;\r\n}\r\n\r\nconst FormModal: FC<Props> = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <Backdrop\r\n        show={props.show}\r\n        bcgColor=\"dark\"\r\n        onClose={props.onClose} />\r\n      <div className={styles.form}>\r\n        <ModalTitle\r\n          text={props.title}\r\n          loading={props.loading || false}\r\n          onClose={props.onClose} />\r\n        <form className={styles.form__form} onSubmit={props.onSubmit}>\r\n          {\r\n            props.loading\r\n            ? <Spinner />\r\n            : (\r\n                <>\r\n                  <div className={styles.form__inputs}>\r\n                    <InputRenderer\r\n                      groupTitleShow={false}\r\n                      groupsPosition=\"block\"\r\n                      hasBorderBottom={false}\r\n                      inputs={props.form.inputs}\r\n                      onInputFocus={props.onInputFocus}\r\n                      onCountryInputFocus={props.onCountryInputFocus}\r\n                      onInputUnfocus={props.onInpuUnfocus}\r\n                      onInputChange={props.onInputChange}\r\n                      onSelectInputChange={props.onSelectInputChange}\r\n                      onRadioInputChange={props.onRadioInputChange} />\r\n                  </div>\r\n                  <div className={styles.form__btns}>\r\n                    <ModalBtn\r\n                      btnType=\"button\"\r\n                      btnCustomType=\"btn__cancel\"\r\n                      btnText=\"cancel\"\r\n                      onClick={props.onClose} />\r\n                    <ModalBtn\r\n                      btnType=\"submit\"\r\n                      btnCustomType=\"btn__confirm\"\r\n                      btnText=\"submit\"\r\n                      disabled={!props.submiBtnDisabled} />\r\n                  </div>\r\n                </>\r\n              )\r\n          }\r\n        </form>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"modal\") as HTMLDivElement\r\n  )\r\n};\r\n\r\nexport default memo(FormModal);"],"names":["FormModal","props","ReactDOM","_jsxs","_Fragment","children","_jsx","Backdrop","show","bcgColor","onClose","className","styles","ModalTitle","text","title","loading","onSubmit","Spinner","InputRenderer","groupTitleShow","groupsPosition","hasBorderBottom","inputs","form","onInputFocus","onCountryInputFocus","onInputUnfocus","onInpuUnfocus","onInputChange","onSelectInputChange","onRadioInputChange","ModalBtn","btnType","btnCustomType","btnText","onClick","disabled","submiBtnDisabled","document","getElementById","memo"],"sourceRoot":""}