{"version":3,"file":"static/js/984.16734ac8.chunk.js","mappings":"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","sources":["axios/axiosPhotoAlbum.ts","axios/axiosProfile.ts","webpack://frontend/./src/styles/components/buttons/iconBtn.module.scss?eacb","components/Buttons/IconBtn.tsx","webpack://frontend/./src/styles/components/chatsAndMessages/sendMessageModal.module.scss?3b7b","components/ChatsAndMessages/SendMessageModal.tsx","webpack://frontend/./src/styles/components/friends/profileSingleFriend.module.scss?fc70","components/Friends/ProfileSingleFriend.tsx","webpack://frontend/./src/styles/components/photosAndAlbums/profileSelectedAlbum.module.scss?3987","components/PhotosAndAlbums/ProfileSelectedAlbum.tsx","webpack://frontend/./src/styles/components/photosAndAlbums/profileSingleAlbum.module.scss?8d17","components/PhotosAndAlbums/ProfileSingleAlbum.tsx","webpack://frontend/./src/styles/components/profilePages/profileDataContainer.module.scss?c887","components/ProfilePages/ProfileDataContainer.tsx","components/ProfilePages/ProfileHeader/ProfileHeaderUserInfo.tsx","webpack://frontend/./src/styles/components/profilePages/profileInfoSingleEducation.module.scss?a9b7","components/ProfilePages/ProfileInfoSingleEducation.tsx","webpack://frontend/./src/styles/components/profilePages/profileInfoSingleJob.module.scss?4601","components/ProfilePages/ProfileInfoSingleJob.tsx","webpack://frontend/./src/styles/components/profilePages/profileInfoSingleResidence.module.scss?81fd","components/ProfilePages/ProfileInfoSingleResidence.tsx","webpack://frontend/./src/styles/components/shared/pageContainer.module.scss?24e2","webpack://frontend/./src/styles/components/shared/pageTitle.module.scss?3300","components/Shared/PageTitle.tsx","components/Shared/PageContainer.tsx","hooks/useMutualFriendsHook/useMutualFriends.ts","hooks/usePhotosHook/usePhotosTypes.ts","config/profilePhotos/profileAlbumNameInput.ts","hooks/usePhotosHook/usePhotosUtils.ts","hooks/usePhotosHook/usePhotosReducer.ts","hooks/usePhotosHook/usePhotos.ts","utils/formatDateToYearMonthAndDay.ts","webpack://frontend/./src/styles/components/profilePages/profileFriends.module.scss?445b","webpack://frontend/./src/styles/components/profilePages/profileHeader.module.scss?9c9f","webpack://frontend/./src/styles/components/profilePages/profileInfo.module.scss?61a8","webpack://frontend/./src/styles/components/profilePages/profilePhotos.module.scss?b5f0"],"sourcesContent":["import axios from \"axios\";\r\nimport baseUrl from \"./baseUrl\";\r\n\r\nconst axiosPhotoAlbum = axios.create({\r\n  baseURL: `${baseUrl}/photoAlbum`\r\n});\r\n\r\nexport default axiosPhotoAlbum;","import axios from 'axios';\r\nimport baseUrl from './baseUrl';\r\n\r\nconst axiosProfile = axios.create({\r\n  baseURL: `${baseUrl}/profile`\r\n});\r\n\r\nexport default axiosProfile;","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"iconBtn_btn__Ri7of\",\"btn__red\":\"iconBtn_btn__red__rcRX1\",\"btn__icon\":\"iconBtn_btn__icon__rZJdV\",\"btn__blue\":\"iconBtn_btn__blue__yfVeD\",\"btn__text\":\"iconBtn_btn__text__Z1Qwd\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/buttons/iconBtn.module.scss';\r\n\r\ninterface Props {\r\n  icon: React.ReactNode;\r\n  color: \"btn__red\" | \"btn__blue\";\r\n  text: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst IconBtn: FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${styles.btn} ${styles[props.color]}`} onClick={props.onClick}>\r\n      <div className={styles.btn__icon}>\r\n        {props.icon}\r\n      </div>\r\n      <p className={styles.btn__text}>\r\n        {props.text}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtn;","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"sendMessageModal_modal__xGxiS\",\"modalAppear\":\"sendMessageModal_modalAppear__oaaon\",\"modal__body\":\"sendMessageModal_modal__body__RlMxA\",\"modal__btns\":\"sendMessageModal_modal__btns__lzhvw\"};","import { ChangeEvent, ChangeEventHandler, FC, FormEventHandler } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from '../../styles/components/chatsAndMessages/sendMessageModal.module.scss';\r\n// types\r\nimport { IInput } from '../../types/formsAndInputs/inputType';\r\n// components\r\nimport Backdrop from '../Shared/Backdrop';\r\nimport Input from '../Inputs/Input';\r\nimport PhotoInput from '../Inputs/PhotoInput';\r\nimport ModalBtn from '../Buttons/ModalBtn';\r\nimport ModalTitle from '../Modals/ModalTitle';\r\nimport Spinner from '../Shared/Spinner';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  loading: boolean;\r\n  friendToSentMessageName: string;\r\n  onClose: () => void;\r\n  messageTextInput: {[group: string]: IInput};\r\n  onMessageTextFocused: () => void;\r\n  onMessageTextUnfocused: () => void;\r\n  onMessageTextChanged: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, inputGroup: string) => void;\r\n  photoFile: File | null;\r\n  photoPreview: string | null;\r\n  onUploadPhoto: ChangeEventHandler<HTMLInputElement>;\r\n  onRemovePhoto: () => void;\r\n  onSendMessageToUser: FormEventHandler<HTMLFormElement>;\r\n}\r\n\r\nconst SendMessageModal: FC<Props> = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <Backdrop\r\n        show={props.show}\r\n        bcgColor=\"dark\"\r\n        onClose={props.onClose} />\r\n      <div className={styles.modal}>\r\n        <div className={styles.modal__content}>\r\n          <ModalTitle\r\n            text={`Send Message to ${props.friendToSentMessageName}`}\r\n            onClose={props.onClose} />\r\n          {\r\n            props.loading\r\n            ? <Spinner />\r\n            : (\r\n                <form className={styles.modal__body} onSubmit={props.onSendMessageToUser}>\r\n                  <Input\r\n                    {...props.messageTextInput.messageText}\r\n                    inputGroup=\"messageText\"\r\n                    onInputFocus={props.onMessageTextFocused}\r\n                    onInputUnfocus={props.onMessageTextUnfocused}\r\n                    onInputChange={props.onMessageTextChanged} />\r\n                  <PhotoInput\r\n                    photoFile={props.photoFile}\r\n                    photoPreview={props.photoPreview}\r\n                    inputText=\"Upload Message Photo\"\r\n                    onPrepareProfilePhoto={props.onUploadPhoto}\r\n                    onRemoveProfilePhoto={props.onRemovePhoto} />\r\n                  <div className={styles.modal__btns}>\r\n                    <ModalBtn\r\n                      btnType=\"button\"\r\n                      btnCustomType=\"btn__cancel\"\r\n                      btnText=\"cancel\"\r\n                      onClick={props.onClose} />\r\n                    <ModalBtn\r\n                      btnType=\"submit\"\r\n                      btnCustomType=\"btn__confirm\"\r\n                      btnText=\"send\"\r\n                      disabled={props.messageTextInput.messageText.value.trim().length === 0 && !props.photoFile} />\r\n                  </div>\r\n                </form>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </>,\r\n    document.getElementById(\"modal\") as HTMLDivElement\r\n  );\r\n};\r\n\r\nexport default SendMessageModal;","// extracted by mini-css-extract-plugin\nexport default {\"friend\":\"profileSingleFriend_friend__kCbRF\",\"friend__info\":\"profileSingleFriend_friend__info__9tV0P\",\"friend__img\":\"profileSingleFriend_friend__img__q8Cwv\",\"friend__name\":\"profileSingleFriend_friend__name__jcYfU\",\"friend__mutuals\":\"profileSingleFriend_friend__mutuals__70Wjo\",\"friend__yours\":\"profileSingleFriend_friend__yours__va5sp\",\"friend__btns\":\"profileSingleFriend_friend__btns__7jPT+\",\"friend__btn\":\"profileSingleFriend_friend__btn__4gvhv\",\"friend__btn_view\":\"profileSingleFriend_friend__btn_view__8clHF\",\"friend__btn_block\":\"profileSingleFriend_friend__btn_block__fn7je\",\"friend__btn_msg\":\"profileSingleFriend_friend__btn_msg__4PCdD\"};","import { FC, memo } from 'react';\r\nimport styles from '../../styles/components/friends/profileSingleFriend.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport noImg from '../../images/no-user.jpg';\r\n// hooks\r\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\r\n\r\ninterface Props {\r\n  userRelation: \"friends\" | \"sentPendingRequests\" | \"receivedPendingRequests\" | \"none\";\r\n  user: {\r\n    _id: string;\r\n    fullName: string;\r\n    profilePhotoUrl: string;\r\n  };\r\n  mutualFriends: string[];\r\n  whoCanMessageUser?: \"everyone\" | \"friends\" | \"friendsOfFriends\";\r\n  whoCanAddMe?: \"everyone\" | \"none\" | \"friendsOfFriends\";\r\n  isAuthUserList?: boolean;\r\n  onOpenFriendsModal?: (mutualFriends: string[], friendName: string) => void;\r\n  onPrepareFriendOrUserAction?: (id: string, name: string, action: \"unfriend\" | \"declineRequest\" | \"unsendRequest\" | \"acceptRequest\" | \"block\", relationToUser: \"friends\" | \"sentPendingRequests\" | \"receivedPendingRequests\" | \"none\") => void;\r\n  onOpenSendMessageModal: (userId: string, userName: string) => void\r\n}\r\n\r\nconst ProfileSingleFriend: FC<Props> = (props) => {\r\n  const { authUser } = useTypedSelector(state => state.auth);\r\n\r\n  return (\r\n    <div className={styles.friend}>\r\n      <div className={styles.friend__info}>\r\n        <div className={styles.friend__img}>\r\n          <img src={props.user.profilePhotoUrl || noImg} alt=\"user\" />\r\n        </div>\r\n        <div className={styles.friend__info_right}>\r\n          <p className={styles.friend__name}>{props.user.fullName} {props.user._id === authUser!._id && \"(you)\"}</p>\r\n          {\r\n            props.mutualFriends.length > 0 && props.user._id !== authUser!._id && (\r\n              <button\r\n                type=\"button\"\r\n                className={styles.friend__mutuals}\r\n                onClick={() => props.onOpenFriendsModal!(props.mutualFriends, props.user.fullName)}>\r\n                {props.mutualFriends.length} mutual friends\r\n              </button>\r\n            )\r\n          }\r\n          {\r\n            !props.isAuthUserList && props.user._id !== authUser!._id && props.userRelation === \"friends\" && (\r\n              <p className={styles.friend__yours}>your friend</p>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className={styles.friend__btns}>\r\n        {\r\n          props.user._id !== authUser!._id && (\r\n            <Link\r\n              to={`/user/${props.user._id}`}\r\n              className={`${styles.friend__btn} ${styles.friend__btn_view}`}>\r\n              view\r\n            </Link>\r\n          )\r\n        }\r\n        {\r\n          (props.userRelation === \"friends\" || (props.whoCanMessageUser && props.whoCanMessageUser === \"everyone\") || (props.whoCanMessageUser && props.whoCanMessageUser === \"friendsOfFriends\" && props.mutualFriends.length > 0)) && props.user._id !== authUser!._id && (\r\n            <button\r\n              type=\"button\"\r\n              className={`${styles.friend__btn} ${styles.friend__btn_msg}`}\r\n              onClick={() => props.onOpenSendMessageModal(props.user._id, props.user.fullName)}>\r\n              send message\r\n            </button>\r\n          )\r\n        }\r\n        {\r\n          props.userRelation === \"friends\" && props.user._id !== authUser!._id && props.isAuthUserList\r\n          ? (\r\n            <button\r\n              type=\"button\"\r\n              className={`${styles.friend__btn}`}\r\n              onClick={() => props.onPrepareFriendOrUserAction!(props.user._id, props.user.fullName, \"unfriend\", props.userRelation)}>\r\n              unfriend\r\n            </button>\r\n          )\r\n          : props.userRelation === \"receivedPendingRequests\" && props.user._id !== authUser!._id && props.isAuthUserList\r\n          ? (\r\n            <>\r\n              <button\r\n                type=\"button\"\r\n                className={`${styles.friend__btn}`}\r\n                onClick={() => props.onPrepareFriendOrUserAction!(props.user._id, props.user.fullName, \"acceptRequest\", props.userRelation)}>\r\n                accept request\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`${styles.friend__btn}`}\r\n                onClick={() => props.onPrepareFriendOrUserAction!(props.user._id, props.user.fullName, \"declineRequest\", props.userRelation)}>\r\n                decline request\r\n              </button>\r\n            </>\r\n          )\r\n          : props.userRelation === \"sentPendingRequests\" && props.user._id !== authUser!._id && props.isAuthUserList\r\n          ? (\r\n            <button\r\n              type=\"button\"\r\n              className={`${styles.friend__btn}`}\r\n              onClick={() => props.onPrepareFriendOrUserAction!(props.user._id, props.user.fullName, \"unsendRequest\", props.userRelation)}>\r\n              cancel request\r\n            </button>\r\n          )\r\n          : null\r\n        }\r\n        {\r\n          props.user._id !== authUser!._id && props.isAuthUserList && (\r\n            <button\r\n              type=\"button\"\r\n              className={`${styles.friend__btn} ${styles.friend__btn_block}`}\r\n              onClick={() => props.onPrepareFriendOrUserAction!(props.user._id, props.user.fullName, \"block\", props.userRelation)}>\r\n              block\r\n            </button>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileSingleFriend);","// extracted by mini-css-extract-plugin\nexport default {\"album__name\":\"profileSelectedAlbum_album__name__rCbpH\",\"album__photos\":\"profileSelectedAlbum_album__photos__Ugp60\",\"album__photos_empty\":\"profileSelectedAlbum_album__photos_empty__JfOZp\",\"album__photo\":\"profileSelectedAlbum_album__photo__skVYC\",\"album__photo_delete\":\"profileSelectedAlbum_album__photo_delete__WKfK5\"};","import { FC, memo } from 'react';\r\nimport styles from '../../styles/components/photosAndAlbums/profileSelectedAlbum.module.scss';\r\nimport { IPhotoAlbum } from '../../types/profilePages/photoAlbum';\r\n\r\ninterface Props {\r\n  album: IPhotoAlbum;\r\n  onOpenPhotoSlider: (displayedPhotoIndex: number) => void;\r\n  isAuthUserAlbum?: boolean;\r\n  onPrepareDeletePhoto?: (photoId: string) => void;\r\n}\r\n\r\nconst ProfileSelectedAlbum: FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles.album}>\r\n      <h4 className={styles.album__name}>\r\n        {props.album.albumName}\r\n      </h4>\r\n      <div className={styles.album__photos}>\r\n        {\r\n          props.album.photos.length === 0\r\n          ? <p className={styles.album__photos_empty}>No photos</p>\r\n          : props.album.photos.map((photo, i) => {\r\n            return (\r\n              <div\r\n                key={photo._id}\r\n                className={styles.album__photo}>\r\n                {\r\n                  props.isAuthUserAlbum && (\r\n                    <button \r\n                      className={styles.album__photo_delete}\r\n                      onClick={() => props.onPrepareDeletePhoto!(photo._id)}>\r\n                      delete photo\r\n                    </button>\r\n                  )\r\n                }\r\n                <img\r\n                  src={photo.photo.secure_url} alt=\"albumPhoto\" onClick={() => props.onOpenPhotoSlider(i)} />\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileSelectedAlbum);","// extracted by mini-css-extract-plugin\nexport default {\"album\":\"profileSingleAlbum_album__8xVjZ\",\"album__content\":\"profileSingleAlbum_album__content__8IN04\",\"album__preview\":\"profileSingleAlbum_album__preview__wj8-c\",\"album__overlay\":\"profileSingleAlbum_album__overlay__dC7UV\",\"album__preview_empty\":\"profileSingleAlbum_album__preview_empty__X5Sr7\",\"album__preview_photo\":\"profileSingleAlbum_album__preview_photo__Z2ja4\",\"album__name\":\"profileSingleAlbum_album__name__ihG4n\",\"album__btn\":\"profileSingleAlbum_album__btn__viF2d\",\"album__num\":\"profileSingleAlbum_album__num__SqEyg\"};","import { FC, memo } from 'react';\r\nimport styles from '../../styles/components/photosAndAlbums/profileSingleAlbum.module.scss';\r\nimport { IPhotoAlbum } from '../../types/profilePages/photoAlbum';\r\n\r\ninterface Props {\r\n  album: IPhotoAlbum;\r\n  isAuthUserAlbum?: boolean;\r\n  onViewPhotoAlbum: (album: IPhotoAlbum) => void;\r\n  onPrepareDeleteAlbum?: (albumId: string) => void;\r\n  onPrepareAddPhotosToAlbum?: (albumId: string | null, actionType: \"addPhotos\", targetAlbumName: string | null) => void;\r\n}\r\n\r\nconst ProfileSingleAlbum: FC<Props> = (props) => {\r\n  return (\r\n    <div className={styles.album}>\r\n      <h4 className={styles.album__name}>\r\n        {props.album.albumName}\r\n      </h4>\r\n      <div className={styles.album__content}>\r\n        <div className={styles.album__preview}>\r\n          {\r\n            props.album.photos.length > 0\r\n            ? (\r\n              <div className={styles.album__preview_photo}>\r\n                <img src={props.album.photos[0].photo.secure_url} alt=\"firstPhoto\" />\r\n              </div>\r\n            )\r\n            : <p className={styles.album__preview_empty}>Empty album</p>\r\n          }\r\n          <div className={styles.album__overlay}>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.album__btn}\r\n              onClick={() => props.onViewPhotoAlbum(props.album)}>\r\n              view album\r\n            </button>\r\n            {\r\n              props.isAuthUserAlbum && (\r\n                <>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.album__btn}\r\n                    onClick={() => props.onPrepareAddPhotosToAlbum!(props.album._id, \"addPhotos\", null)}>\r\n                    add photos\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className={styles.album__btn}\r\n                    onClick={props.isAuthUserAlbum ? () => props.onPrepareDeleteAlbum!(props.album._id) : () => {return}}>\r\n                    delete album\r\n                  </button>\r\n                </>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n        <p className={styles.album__num}>\r\n          {props.album.photos.length} {props.album.photos.length === 1 ? \"photo\" : \"photos\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileSingleAlbum);","// extracted by mini-css-extract-plugin\nexport default {\"container__links\":\"profileDataContainer_container__links__-HOGD\",\"container__link\":\"profileDataContainer_container__link__ukS0y\",\"container__link_active\":\"profileDataContainer_container__link_active__xucME\",\"container__data\":\"profileDataContainer_container__data__uJaXy\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileDataContainer.module.scss';\r\nimport Spinner from '../Shared/Spinner';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  activeLink: \"posts\" | \"info\" | \"photos\" | \"friends\";\r\n  onChangeActiveLink: (link: \"posts\" | \"info\" | \"photos\" | \"friends\") => void;\r\n  onGetUserProfile: () => Promise<void>;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ProfileDataContainer: FC<Props> = (props) => {\r\n  return (\r\n    <main className={styles.container}>\r\n      <section className={styles.container__links}>\r\n        <button\r\n          type=\"button\"\r\n          className={`${styles.container__link} ${props.activeLink === \"posts\" ? styles.container__link_active : \"\"}`}\r\n          disabled={props.loading}\r\n          onClick={() => props.onChangeActiveLink(\"posts\")}>\r\n          Posts\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`${styles.container__link} ${props.activeLink === \"info\" ? styles.container__link_active : \"\"}`}\r\n          disabled={props.loading}\r\n          onClick={() => props.onChangeActiveLink(\"info\")}>\r\n          Profile Info\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`${styles.container__link} ${props.activeLink === \"photos\" ? styles.container__link_active : \"\"}`}\r\n          disabled={props.loading}\r\n          onClick={() => props.onChangeActiveLink(\"photos\")}>\r\n          Photos\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={`${styles.container__link} ${props.activeLink === \"friends\" ? styles.container__link_active : \"\"}`}\r\n          disabled={props.loading}\r\n          onClick={() => props.onChangeActiveLink(\"friends\")}>\r\n          Friends\r\n        </button>\r\n      </section>\r\n      <section className={styles.container__data}>\r\n        {\r\n          props.loading\r\n          ? <Spinner />\r\n          : props.children\r\n        }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProfileDataContainer;","import { ChangeEvent, FC } from 'react';\r\nimport styles from '../../../styles/components/profilePages/profileHeader.module.scss';\r\nimport noUserImg from '../../../images/no-user.jpg';\r\n// types\r\nimport { IUser } from '../../../types/profilePages/userProfile';\r\n// hooks\r\nimport { useDispatch } from 'react-redux';\r\n// utils\r\nimport { formatDateToYearMonthAndDay } from '../../../utils/formatDateToYearMonthAndDay';\r\n// redux\r\nimport { uploadNewProfilePhoto, removeProfilePhoto } from '../../../store/actions/authActions';\r\n\r\ninterface Props {\r\n  user: IUser;\r\n  isAuthUser?: boolean;\r\n}\r\n\r\nconst ProfileHeaderUserInfo: FC<Props> = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onUploadNewPhoto = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    const target = event.target;\r\n\r\n    if(target.files && target.files.length > 0) {\r\n      const formData = new FormData();\r\n      formData.append(\"photo\", target.files[0]);\r\n      dispatch(uploadNewProfilePhoto(formData));\r\n    } else return;\r\n  };\r\n\r\n  const onRemoveProfilePhoto = (): void => {\r\n    dispatch(removeProfilePhoto());\r\n  };\r\n\r\n  return (\r\n    <div className={styles.header__left}>\r\n      {\r\n        props.isAuthUser\r\n        ? (\r\n          <div className={styles.header__photo_auth}>\r\n            <div className={styles.header__photo_auth_img}>\r\n              <img\r\n                src={props.user.profilePhotoUrl || noUserImg}\r\n                alt=\"user\" />\r\n            </div>\r\n            <div className={styles.btns}>\r\n              <label htmlFor=\"photo\" className={styles.label}>\r\n                <span className={styles.label__text}>Upload new</span>\r\n                <input \r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  id=\"photo\"\r\n                  name=\"photo\"\r\n                  onChange={onUploadNewPhoto} />\r\n              </label>\r\n              {\r\n                props.user.profilePhotoUrl && (\r\n                  <button \r\n                    className={styles.remove}\r\n                    onClick={onRemoveProfilePhoto}>\r\n                    remove photo\r\n                  </button>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        ) \r\n        : (\r\n          <div className={styles.header__photo}>\r\n            <img\r\n              src={props.user.profilePhotoUrl || noUserImg}\r\n              alt=\"user\" />\r\n          </div>\r\n        )\r\n      }\r\n      <div className={styles.header__middle}>\r\n        <p className={styles.header__name}>\r\n          {props.user.fullName}\r\n        </p>\r\n        <p className={styles.header__created}>\r\n          joined: {formatDateToYearMonthAndDay(props.user.createdAt)}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileHeaderUserInfo;","// extracted by mini-css-extract-plugin\nexport default {\"edu\":\"profileInfoSingleEducation_edu__WM3wb\",\"edu__content\":\"profileInfoSingleEducation_edu__content__-K6Xn\",\"edu__btns\":\"profileInfoSingleEducation_edu__btns__rgE7X\"};","import { FC, memo, useCallback } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileInfoSingleEducation.module.scss';\r\nimport { formatDateToYearMonthAndDay } from '../../utils/formatDateToYearMonthAndDay';\r\nimport { IProfileInfoType } from '../../types/profilePages/profileInfo';\r\nimport IconBtn from '../Buttons/IconBtn';\r\n\r\ninterface Props {\r\n  eduType: \"college\" | \"education\";\r\n  education: {\r\n    _id: string;\r\n    name: string;\r\n    country?: string;\r\n    state?: string;\r\n    city?: string;\r\n    status: string;\r\n    graduateDate?: Date;\r\n  };\r\n  isAuthUser?: boolean;\r\n  onPrepareEditProfileInfoItem?: (itemId: string) => void;\r\n  onPrepareDeleteProfileInfoItem?: (itemId: string | null, itemType: IProfileInfoType, title: string, text: string) => void;\r\n}\r\n\r\nconst ProfileInfoSingleEducation: FC<Props> = (props) => {\r\n  const onPrepareEditItem = useCallback(() => {\r\n    props.onPrepareEditProfileInfoItem!(props.education._id);\r\n  }, [props.education._id, props.onPrepareEditProfileInfoItem]);\r\n\r\n  const onPrepareDeleteItem = useCallback((): void => {\r\n    let itemType: IProfileInfoType = \"colleges\";\r\n    let title = \"Prepairing to delete college info\";\r\n    let text = \"Are you sure you want to delete this college info?\";\r\n    if(props.eduType === \"education\") {\r\n      itemType = \"educationOther\";\r\n      title = \"Prepairing to delete education info\";\r\n      text = \"Are you sure you want to delete this education info?\";\r\n    }\r\n    \r\n    props.onPrepareDeleteProfileInfoItem!(props.education._id, itemType, title, text);\r\n  }, [props.eduType, props.onPrepareDeleteProfileInfoItem, props.education._id]);\r\n\r\n  return (\r\n    <div className={styles.edu}>\r\n      <div className={styles.edu__content}>\r\n        {props.education.status === \"finished\" ? \"Graduated \" : \"Goes to \"} <span>{props.education.name}</span> {props.education.country ? \"in\" : \"\"} {props.education.country ? <span>{props.education.country}</span> : \"\"} {props.education.state ? <span>/{props.education.state}</span> : \"\"} {props.education.city ? <span>/{props.education.city}</span> : \"\"} {props.education.status === \"finished\" && props.education.graduateDate ? \"on\" : \"\"} {props.education.status === \"finished\" && props.education.graduateDate ? <span>{formatDateToYearMonthAndDay(props.education.graduateDate)}</span> : \"\"}\r\n      </div>\r\n      {\r\n        props.isAuthUser && (\r\n          <div className={styles.edu__btns}>\r\n            <IconBtn\r\n              color=\"btn__blue\"\r\n              text=\"edit education\"\r\n              icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m7 17.013 4.413-.015 9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583v4.43zM18.045 4.458l1.589 1.583-1.597 1.582-1.586-1.585 1.594-1.58zM9 13.417l6.03-5.973 1.586 1.586-6.029 5.971L9 15.006v-1.589z\"></path><path d=\"M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2z\"></path></svg>}\r\n              onClick={onPrepareEditItem} />\r\n            <IconBtn\r\n              color=\"btn__red\"\r\n              text=\"delete education\"\r\n              icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path><path d=\"M14.12 10.47L12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"></path></svg>}\r\n              onClick={onPrepareDeleteItem} />\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileInfoSingleEducation);","// extracted by mini-css-extract-plugin\nexport default {\"job\":\"profileInfoSingleJob_job__SsupC\",\"job__content\":\"profileInfoSingleJob_job__content__n+9YB\",\"job__btns\":\"profileInfoSingleJob_job__btns__zft7o\"};","import { FC, memo, useCallback } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileInfoSingleJob.module.scss';\r\nimport { formatDateToYearMonthAndDay } from '../../utils/formatDateToYearMonthAndDay';\r\nimport { IProfileInfoType } from '../../types/profilePages/profileInfo';\r\nimport IconBtn from '../Buttons/IconBtn';\r\n\r\ninterface Props {\r\n  jobType: \"current\" | \"previous\";\r\n  job: {\r\n    _id: string;\r\n    role: string;\r\n    company?: string;\r\n    country: string;\r\n    state?: string;\r\n    city?: string;\r\n    from?: Date;\r\n    to?: Date;\r\n  };\r\n  isAuthUser?: boolean;\r\n  onPrepareEditProfileInfoItem?: (itemId: string) => void;\r\n  onPrepareDeleteProfileInfoItem?: (itemId: string | null, itemType: IProfileInfoType, title: string, text: string) => void;\r\n}\r\n\r\nconst ProfileInfoSingleJob: FC<Props> = (props) => {\r\n  const onPrepareEditItem = useCallback(() => {\r\n    props.onPrepareEditProfileInfoItem!(props.job._id);\r\n  }, [props.job._id, props.onPrepareEditProfileInfoItem]);\r\n\r\n  const onPrepareDeleteItem = useCallback((): void => {\r\n    let itemType: IProfileInfoType = \"jobs\";\r\n    if(props.jobType === \"previous\") {\r\n      itemType = \"previousJobs\";\r\n    }\r\n    \r\n    props.onPrepareDeleteProfileInfoItem!(props.job._id, itemType, \"Prepairing to delete job info\", \"Are you sure you want to delete this job info?\");\r\n  }, [props.jobType, props.onPrepareDeleteProfileInfoItem, props.job._id]);\r\n\r\n  return (\r\n    <div className={styles.job}>\r\n      <div  className={styles.job__content}>\r\n        {props.jobType === \"current\" ? \"Works\" : \"Worked\"} as <span>{props.job.role || \"Unknown\"}</span> {props.job.company ? <>at <span>{props.job.company}</span></> : \"\"} {props.job.country ? <>in <span>{props.job.country}</span></> : \"\"} {props.job.state ? <span>/ {props.job.state}</span> : \"\"} {props.job.city ? <span>/ {props.job.city}</span> : \"\"} {props.job.from ? <>from <span>{formatDateToYearMonthAndDay(props.job.from)}</span></> : \"\"} {props.job.to ? <>until <span>{formatDateToYearMonthAndDay(props.job.to)}</span></> : \"\"}\r\n      </div>\r\n      {\r\n        props.isAuthUser && (\r\n          <div className={styles.job__btns}>\r\n            <IconBtn\r\n              color=\"btn__blue\"\r\n              text=\"edit job\"\r\n              icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m7 17.013 4.413-.015 9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583v4.43zM18.045 4.458l1.589 1.583-1.597 1.582-1.586-1.585 1.594-1.58zM9 13.417l6.03-5.973 1.586 1.586-6.029 5.971L9 15.006v-1.589z\"></path><path d=\"M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2z\"></path></svg>}\r\n              onClick={onPrepareEditItem} />\r\n            <IconBtn\r\n              color=\"btn__red\"\r\n              text=\"delete job\"\r\n              icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path><path d=\"M14.12 10.47L12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"></path></svg>}\r\n              onClick={onPrepareDeleteItem} />\r\n          </div>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ProfileInfoSingleJob);","// extracted by mini-css-extract-plugin\nexport default {\"residence\":\"profileInfoSingleResidence_residence__Vl-I3\",\"residence__content\":\"profileInfoSingleResidence_residence__content__mjPpx\",\"residence__btns\":\"profileInfoSingleResidence_residence__btns__UGOtL\"};","import { FC, memo, useCallback } from 'react';\r\nimport styles from '../../styles/components/profilePages/profileInfoSingleResidence.module.scss';\r\nimport { formatDateToYearMonthAndDay } from '../../utils/formatDateToYearMonthAndDay';\r\nimport { IProfileInfoType } from '../../types/profilePages/profileInfo';\r\nimport IconBtn from '../Buttons/IconBtn';\r\n\r\ninterface Props {\r\n  residenceType: \"current\" | \"previous\";\r\n  residence: {\r\n    _id?: string;\r\n    country: string;\r\n    state?: string;\r\n    city?: string;\r\n    from?: Date;\r\n    to?: Date;\r\n  };\r\n  isAuthUser?: boolean;\r\n  onPrepareEditProfileInfoItem?: (itemId: string) => void;\r\n  onPrepareDeleteProfileInfoItem?: (itemId: string | null, itemType: IProfileInfoType, title: string, text: string) => void;\r\n}\r\n\r\nconst ProfileInfoSingleResidence: FC<Props> = (props) => {\r\n  const onPrepareEditItem = useCallback(() => {\r\n    if(props.residence._id) {\r\n      props.onPrepareEditProfileInfoItem!(props.residence._id);\r\n    } else return;\r\n  }, [props.residence._id, props.onPrepareEditProfileInfoItem]);\r\n\r\n  const onPrepareDeleteItem = useCallback((): void => {\r\n    let itemType: IProfileInfoType = \"currentResidence\";\r\n    if(props.residenceType === \"previous\") {\r\n      itemType = \"previousResidences\";\r\n    }\r\n    \r\n    props.onPrepareDeleteProfileInfoItem!(props.residence._id || null, itemType, \"Prepairing to delete job info\", \"Are you sure you want to delete this job info?\");\r\n  }, [props.residenceType, props.onPrepareDeleteProfileInfoItem, props.residence._id]);\r\n\r\n  return (\r\n    <div className={styles.residence}>\r\n      <div className={styles.residence__content}>\r\n        {props.residenceType === \"current\" ? \"Lives\" : \"Lived\"} in {props.residence.country ? <span>{props.residence.country}</span> : \"\"} {props.residence.state ? <span>/ {props.residence.state}</span> : \"\"} {props.residence.city ? <span>/ {props.residence.city}</span> : \"\"} {props.residence.from ? <>from <span>{formatDateToYearMonthAndDay(props.residence.from)}</span></> : \"\"} {props.residence.to ? <>until <span>{formatDateToYearMonthAndDay(props.residence.to)}</span></> : \"\"}\r\n      </div>\r\n      {\r\n        props.isAuthUser && (\r\n          <div className={styles.residence__btns}>\r\n            {props.residenceType === \"previous\" && (\r\n              <IconBtn\r\n                color=\"btn__blue\"\r\n                text=\"edit residence\"\r\n                icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m7 17.013 4.413-.015 9.632-9.54c.378-.378.586-.88.586-1.414s-.208-1.036-.586-1.414l-1.586-1.586c-.756-.756-2.075-.752-2.825-.003L7 12.583v4.43zM18.045 4.458l1.589 1.583-1.597 1.582-1.586-1.585 1.594-1.58zM9 13.417l6.03-5.973 1.586 1.586-6.029 5.971L9 15.006v-1.589z\"></path><path d=\"M5 21h14c1.103 0 2-.897 2-2v-8.668l-2 2V19H8.158c-.026 0-.053.01-.079.01-.033 0-.066-.009-.1-.01H5V5h6.847l2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2z\"></path></svg>}\r\n                onClick={onPrepareEditItem} />\r\n            )}\r\n            <IconBtn\r\n              color=\"btn__red\"\r\n              text=\"delete residence\"\r\n              icon={<svg stroke=\"currentColor\" fill=\"currentColor\" strokeWidth=\"0\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"></path><path d=\"M14.12 10.47L12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"></path></svg>}\r\n              onClick={onPrepareDeleteItem} />\r\n          </div>\r\n        )\r\n      }\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default memo(ProfileInfoSingleResidence);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"pageContainer_container__JU78m\",\"container__flex\":\"pageContainer_container__flex__mQNaW\",\"container__data\":\"pageContainer_container__data__70LWJ\",\"big\":\"pageContainer_big__iMyUq\"};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"pageTitle_title__Di7Rk\",\"title__text\":\"pageTitle_title__text__jkIUE\",\"title__underline\":\"pageTitle_title__underline__A2NOq\"};","import { FC } from 'react';\r\nimport styles from '../../styles/components/shared/pageTitle.module.scss';\r\n\r\ninterface Props {\r\n  titleText: string;\r\n  textAlign: \"title__center\" | \"title__left\";\r\n}\r\n\r\nconst PageTitle: FC<Props> = (props) => {\r\n  return (\r\n    <div className={`${styles.title} ${styles[props.textAlign]}`}>\r\n      <h1 className={styles.title__text}>\r\n        {props.titleText}\r\n      </h1>\r\n      <div className={styles.title__underline}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;","import { FC } from 'react';\r\nimport styles from '../../styles/components/shared/pageContainer.module.scss';\r\nimport PageTitle from './PageTitle';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  width: \"medium\" | \"big\";\r\n  display: \"container__block\" | \"container__flex\";\r\n  children: React.ReactNode;\r\n  hasPageTitle: boolean;\r\n  titleText?: string;\r\n  titleTextAlign?: \"title__center\" | \"title__left\";\r\n}\r\n\r\nconst PageContainer: FC<Props> = (props) => {\r\n  return (\r\n    <main className={`${styles.container} ${styles[props.display]} ${styles[props.width]}`}>\r\n      {props.hasPageTitle && props.titleText && props.titleTextAlign && (\r\n        <PageTitle\r\n          titleText={props.titleText}\r\n          textAlign={props.titleTextAlign} />\r\n      )}\r\n      <section className={styles.container__data}>\r\n        {props.children}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PageContainer;","import { useState, useCallback } from \"react\";\r\nimport { IUseMutualFriendsState } from \"./useMutualFriendsTypes\";\r\nimport { IFriend } from \"../../store/types/friendsTypes\";\r\n\r\nconst initState: IUseMutualFriendsState = {\r\n  modalShow: false,\r\n  clickedFriendName: null,\r\n  mutualFriends: []\r\n};\r\n\r\nexport const useMutualFriends = (): {\r\n  mutualFriendsInfo: IUseMutualFriendsState;\r\n  onOpenFriendsModal: (mutuals: string[], clickedFriendName: string, friends: IFriend[]) => void;\r\n  onCloseFriendsModal: () => void;\r\n} => {\r\n  const [state, setState] = useState<IUseMutualFriendsState>(initState);\r\n\r\n  const onOpenFriendsModal = useCallback((mutuals: string[], clickedFriendName: string, friends: IFriend[]): void => {\r\n    const displayedFriends = friends.filter(friend => mutuals.includes(friend.user._id));\r\n\r\n    setState({\r\n      modalShow: true,\r\n      clickedFriendName,\r\n      mutualFriends: displayedFriends.map(user => ({_id: user.user._id, fullName: user.user.fullName, profilePhotoUrl: user.user.profilePhotoUrl}))\r\n    });\r\n  }, []);\r\n\r\n  const onCloseFriendsModal = useCallback((): void => {\r\n    setState(initState);\r\n  }, []);\r\n\r\n  return {\r\n    mutualFriendsInfo: state,\r\n    onOpenFriendsModal,\r\n    onCloseFriendsModal\r\n  };\r\n};","import { INotification } from \"../../store/types/notificationsTypes\";\r\nimport { IInput } from \"../../types/formsAndInputs/inputType\";\r\n\r\n// STATE STUFF\r\nexport interface IPhotoUser {\r\n  _id: string;\r\n  fullName: string;\r\n  profilePhotoUrl: string;\r\n}\r\n\r\nexport interface IComment {\r\n  _id: string;\r\n  commentator: IPhotoUser;\r\n  text: string;\r\n  photoId: string;\r\n  photo?: {\r\n    secure_url: string;\r\n    public_id: string;\r\n  };\r\n  likes: IPhotoUser[];\r\n  taggs: {\r\n    userId: string;\r\n    userFullName: string;\r\n  }[];\r\n  createdAt: Date;\r\n  updatedAt: string;\r\n}\r\n\r\nexport interface IPhoto {\r\n  _id: string;\r\n  description: string;\r\n  photo: {\r\n    secure_url: string;\r\n    public_id: string;\r\n  };\r\n  likes: IPhotoUser[];\r\n  comments: IComment[];\r\n  taggs: {\r\n    userId: string;\r\n    userFullName: string;\r\n  }[];\r\n  post?: string;\r\n  createdAt: Date;\r\n}\r\n\r\nexport interface IPhotoAlbum {\r\n  _id: string;\r\n  albumName: string;\r\n  user: string;\r\n  photos: IPhoto[];\r\n}\r\n\r\nexport interface IUsePhotosState {\r\n  photosLoading: boolean;\r\n  photosErrorMsg: string | null;\r\n  albums: IPhotoAlbum[];\r\n  selectedAlbum: IPhotoAlbum | null;\r\n  albumModalInfo: {\r\n    albumId: string | null;\r\n    actionType: \"create\" | \"editName\" | \"addPhotos\" | null;\r\n    nameInput: {[group: string]: IInput};\r\n    photoFiles: File[];\r\n    photoPreviews: string[];\r\n    photoDescriptions: string[];\r\n    modalFormValid: boolean;\r\n  };\r\n  photoSliderInfo: {\r\n    show: boolean;\r\n    currentPhotoIndex: number;\r\n  };\r\n}\r\n\r\n// ACTION STUFF\r\nexport enum IUsePhotosActionTypes {\r\n  ON_PHOTOS_START = \"ON_PHOTOS_START\",\r\n  ON_PHOTOS_ERROR = \"ON_PHOTOS_ERROR\",\r\n  ON_CLEAR_PHOTOS_ERROR = \"ON_CLEAR_PHOTOS_ERROR\",\r\n  ON_GET_PHOTO_ALBUMS_SUCCESS = \"ON_GET_PHOTO_ALBUMS_SUCCESS\",\r\n  ON_SELECT_PHOTO_ALBUM_SUCCESS = \"ON_SELECT_PHOTO_ALBUM_SUCCESS\",\r\n  ON_UNSELECT_PHOTO_ALBUM_SUCCESS = \"ON_UNSELECT_PHOTO_ALBUM_SUCCESS\",\r\n  ON_OPEN_PHOTO_ALBUM_MODAL = \"ON_OPEN_PHOTO_ALBUM_MODAL\",\r\n  ON_CLOSE_PHOTO_ALBUM_MODAL = \"ON_CLOSE_PHOTO_ALBUM_MODAL\",\r\n  ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED = \"ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED\", \r\n  ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED = \"ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED\", \r\n  ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED = \"ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED\", \r\n  ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS = \"ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS\", \r\n  ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO = \"ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO\", \r\n  ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED = \"ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED\", \r\n  ON_CREATE_PHOTO_ALBUM_SUCCESS = \"ON_CREATE_PHOTO_ALBUM_SUCCESS\", \r\n  ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS = \"ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS\",\r\n  ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS = \"ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS\", \r\n  ON_DELETE_PHOTO_ALBUM_SUCCESS = \"ON_DELETE_PHOTO_ALBUM_SUCCESS\",\r\n  ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS = \"ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS\",\r\n  ON_OPEN_PHOTO_SLIDER = \"ON_OPEN_PHOTO_SLIDER\", \r\n  ON_CLOSE_PHOTO_SLIDER = \"ON_CLOSE_PHOTO_SLIDER\", \r\n  ON_SLIDER_PREV_PHOTO = \"ON_SLIDER_PREV_PHOTO\", \r\n  ON_SLIDER_NEXT_PHOTO = \"ON_SLIDER_NEXT_PHOTO\", \r\n  ON_LIKE_PHOTO_SUCCESS = \"ON_LIKE_PHOTO_SUCCESS\",\r\n  ON_UNLIKE_PHOTO_SUCCESS = \"ON_UNLIKE_PHOTO_SUCCESS\",\r\n  ON_COMMENT_ON_PHOTO_SUCCESS = \"ON_COMMENT_ON_PHOTO_SUCCESS\",\r\n  ON_DELETE_PHOTO_COMMENT_SUCCESS = \"ON_DELETE_PHOTO_COMMENT_SUCCESS\",\r\n  ON_LIKE_PHOTO_COMMENT_SUCCESS = \"ON_LIKE_PHOTO_COMMENT_SUCCESS\",\r\n  ON_UNLIKE_PHOTO_COMMENT_SUCCESS = \"ON_UNLIKE_PHOTO_COMMENT_SUCCESS\",\r\n  ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS = \"ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS\"\r\n}\r\n\r\ninterface OnPhotosStartAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTOS_START;\r\n}\r\ninterface OnPhotosErrorAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTOS_ERROR;\r\n  errorMsg: string;\r\n}\r\ninterface OnClearPhotosErrorAction {\r\n  type: IUsePhotosActionTypes.ON_CLEAR_PHOTOS_ERROR;\r\n}\r\ninterface OnGetPhotoAlbumsSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_GET_PHOTO_ALBUMS_SUCCESS;\r\n  albums: IPhotoAlbum[];\r\n}\r\ninterface OnSelectPhotoAlbumAction {\r\n  type: IUsePhotosActionTypes.ON_SELECT_PHOTO_ALBUM_SUCCESS;\r\n  selectedAlbum: IPhotoAlbum;\r\n}\r\ninterface OnUnselectPhotoAlbumAction {\r\n  type: IUsePhotosActionTypes.ON_UNSELECT_PHOTO_ALBUM_SUCCESS;\r\n}\r\ninterface OnOpenPhotoAlbumModalAction {\r\n  type: IUsePhotosActionTypes.ON_OPEN_PHOTO_ALBUM_MODAL;\r\n  albumId: string | null;\r\n  actionType: \"create\" | \"editName\" | \"addPhotos\" | null;\r\n  targetAlbumName: string | null;\r\n}\r\ninterface OnClosePhotoAlbumModalAction {\r\n  type: IUsePhotosActionTypes.ON_CLOSE_PHOTO_ALBUM_MODAL;\r\n}\r\ninterface OnPhotoAlbumModalInputNameFocusedAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED;\r\n}\r\ninterface OnPhotoAlbumModalInputNameUnfocusedAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED;\r\n}\r\ninterface OnPhotoAlbumModalInputNameChangedAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED;\r\n  inputValue: string;\r\n}\r\ninterface OnPhotoAlbumModalUploadPhotosAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS;\r\n  photoFiles: File[];\r\n  photoPreviews: string[];\r\n  photoDescriptions: string[];\r\n}\r\ninterface OnPhotoAlbumModalRemovePhotoAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO;\r\n  photoIndex: number;\r\n}\r\ninterface OnPhotoAlbumModalPhotoDescriptionChangedAction {\r\n  type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED;\r\n  descIndex: number;\r\n  descValue: string;\r\n}\r\ninterface OnCreatePhotoAlbumSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_CREATE_PHOTO_ALBUM_SUCCESS;\r\n  photoAlbum: IPhotoAlbum;\r\n}\r\ninterface OnEditPhotoAlbumNameSuccess {\r\n  type: IUsePhotosActionTypes.ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS;\r\n  albumId: string;\r\n  newName: string;\r\n}\r\ninterface OnAddPhotosToPhotoAlbumSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS;\r\n  albumId: string;\r\n  updatedPhotos: IPhotoAlbum[\"photos\"];\r\n}\r\ninterface OnDeletePhotoAlbumSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_DELETE_PHOTO_ALBUM_SUCCESS;\r\n  albumToDeleteId: string;\r\n}\r\ninterface OnDeleteSinglePhotoFromPhotoAlbumSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n}\r\ninterface OnOpenPhotoSliderAction {\r\n  type: IUsePhotosActionTypes.ON_OPEN_PHOTO_SLIDER;\r\n  currentPhotoIndex: number;\r\n}\r\ninterface OnClosePhotoSliderAction {\r\n  type: IUsePhotosActionTypes.ON_CLOSE_PHOTO_SLIDER;\r\n}\r\ninterface OnSliderPrevPhotoAction {\r\n  type: IUsePhotosActionTypes.ON_SLIDER_PREV_PHOTO;\r\n}\r\ninterface OnSliderNextPhotoAction {\r\n  type: IUsePhotosActionTypes.ON_SLIDER_NEXT_PHOTO;\r\n}\r\ninterface OnLikePhotoSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_LIKE_PHOTO_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  userLiked: IPhotoUser;\r\n}\r\ninterface OnUnlikePhotoSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_UNLIKE_PHOTO_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  userUnlikedId: string;\r\n}\r\ninterface OnCommentOnPhotoSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_COMMENT_ON_PHOTO_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  comment: IComment;\r\n}\r\ninterface OnDeletePhotoCommentSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_DELETE_PHOTO_COMMENT_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  commentId: string;\r\n}\r\ninterface OnLikePhotoCommentSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_LIKE_PHOTO_COMMENT_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  commentId: string;\r\n  userLiked: IPhotoUser;\r\n}\r\ninterface OnUnlikePhotoCommentSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_UNLIKE_PHOTO_COMMENT_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  commentId: string;\r\n  userUnlikedId: string;\r\n}\r\ninterface OnChangePhotodescriptionSuccessAction {\r\n  type: IUsePhotosActionTypes.ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS;\r\n  albumId: string;\r\n  photoId: string;\r\n  newDescriptionValue: string;\r\n}\r\n\r\nexport type IUsePhotosAction = (\r\n  OnPhotosStartAction |\r\n  OnPhotosErrorAction |\r\n  OnClearPhotosErrorAction |\r\n  OnGetPhotoAlbumsSuccessAction |\r\n  OnSelectPhotoAlbumAction |\r\n  OnUnselectPhotoAlbumAction |\r\n  OnOpenPhotoAlbumModalAction |\r\n  OnClosePhotoAlbumModalAction |\r\n  OnPhotoAlbumModalInputNameFocusedAction |\r\n  OnPhotoAlbumModalInputNameUnfocusedAction |\r\n  OnPhotoAlbumModalInputNameChangedAction |\r\n  OnPhotoAlbumModalUploadPhotosAction |\r\n  OnPhotoAlbumModalRemovePhotoAction |\r\n  OnPhotoAlbumModalPhotoDescriptionChangedAction |\r\n  OnCreatePhotoAlbumSuccessAction |\r\n  OnEditPhotoAlbumNameSuccess |\r\n  OnAddPhotosToPhotoAlbumSuccessAction |\r\n  OnDeletePhotoAlbumSuccessAction |\r\n  OnDeleteSinglePhotoFromPhotoAlbumSuccessAction |\r\n  OnOpenPhotoSliderAction |\r\n  OnClosePhotoSliderAction |\r\n  OnSliderPrevPhotoAction |\r\n  OnSliderNextPhotoAction |\r\n  OnLikePhotoSuccessAction |\r\n  OnUnlikePhotoSuccessAction |\r\n  OnCommentOnPhotoSuccessAction |\r\n  OnDeletePhotoCommentSuccessAction |\r\n  OnLikePhotoCommentSuccessAction |\r\n  OnUnlikePhotoCommentSuccessAction |\r\n  OnChangePhotodescriptionSuccessAction\r\n);\r\n\r\n// RESPONSE and ASYNC TYPES\r\nexport interface IGetAlbumsResponse {\r\n  status: string;\r\n  photoAlbums: IPhotoAlbum[];\r\n}\r\n\r\nexport interface ICreateAlbumResponse {\r\n  status: string;\r\n  photoAlbum: IPhotoAlbum\r\n}\r\n\r\nexport interface IAddPhotosToAlbumResponse {\r\n  status: string;\r\n  updatedPhotos: IPhotoAlbum[\"photos\"];\r\n}\r\n\r\nexport interface ILikePhotoResponse {\r\n  status: string;\r\n  userLiked: IPhotoUser;\r\n  userNotification?: INotification;\r\n}\r\n\r\nexport interface IUnlikePhotoResponse {\r\n  status: string;\r\n  userUnlikedId: string;\r\n}\r\n\r\nexport interface ICommentOnPhotoResponse {\r\n  status: string;\r\n  newComment: IComment;\r\n  userNotification?: INotification;\r\n  commentTaggsNotifications?: INotification[];\r\n}\r\n\r\nexport interface ICreateAlbumInfo {\r\n  albumName: string;\r\n  photoFiles: File[] | null;\r\n  photoDescriptions: string[];\r\n}\r\n\r\nexport interface ILikePhotoCommentResponse {\r\n  status: string;\r\n  userLiked: IPhotoUser;\r\n}\r\n\r\nexport interface IUnlikePhotoCommentResponse {\r\n  status: string;\r\n  userUnlikedId: string;\r\n}","import { IInput, IInputDisplays, IInputElementTypes } from \"../../types/formsAndInputs/inputType\";\r\n\r\nexport const nameInput: {[group: string]: IInput} = {\r\n  albumName: {\r\n    elementType: IInputElementTypes.INPUT_TEXT,\r\n    inputDisplay: IInputDisplays.INPUT_BLOCK,\r\n    attributes: {\r\n      type: \"text\",\r\n      name: \"name\",\r\n      id: \"name\",\r\n      placeholder: \"Album Name\"\r\n    },\r\n    label: {\r\n      labelFor: \"name\",\r\n      labelShow: false,\r\n      labelText: \"Album Name\"\r\n    },\r\n    validation: {\r\n      required: true\r\n    },\r\n    focused: false,\r\n    touched: false,\r\n    value: \"\",\r\n    valid: false,\r\n    errorMsg: \"Album name is required\"\r\n  }\r\n};","import { IComment, IPhotoAlbum, IPhotoUser } from \"./usePhotosTypes\";\r\n\r\nexport const deepCloneSelectedAlbum = (selectedAlbum: IPhotoAlbum): IPhotoAlbum => {\r\n  const copiedAlbum = {...selectedAlbum};\r\n  const copiedAlbumPhotos = selectedAlbum.photos.map(photo => {\r\n    return {\r\n      ...photo,\r\n      likes: photo.likes.map(like => ({...like})),\r\n      comments: photo.comments.map(comment => ({...comment})),\r\n      taggs: photo.taggs.map(tagg => ({...tagg}))\r\n    };\r\n  });\r\n  \r\n  copiedAlbum.photos = copiedAlbumPhotos;\r\n  return copiedAlbum;\r\n};\r\n\r\nexport const updateAlbumsAfterChangingAlbumName = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, newAlbumName: string): IPhotoAlbum[] => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return oldAlbums;\r\n\r\n  copiedAlbums[targetAlbumIndex].albumName = newAlbumName;\r\n\r\n  return copiedAlbums;\r\n};\r\n\r\nexport const updateAlbumsAfterAddingPhotosToAlbum = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, updatedPhotos: IPhotoAlbum[\"photos\"]): IPhotoAlbum[] => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return oldAlbums;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos = updatedPhotos;\r\n\r\n  return copiedAlbums;\r\n};\r\n\r\nexport const updateAlbumsAfterDeletingSinglePhoto = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string): IPhotoAlbum[] => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return oldAlbums;\r\n\r\n  const newPhotos = copiedAlbums[targetAlbumIndex].photos.filter(photo => photo._id !== targetPhotoId);\r\n\r\n  copiedAlbums[targetAlbumIndex].photos = newPhotos;\r\n\r\n  return copiedAlbums;\r\n};\r\n\r\nexport const updateAlbumsAfterLikingPhoto = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, userLiked: IPhotoUser): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetPhotoIndex === -1) return null;\r\n\r\n  const newPhoto = {\r\n    ...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]\r\n  };\r\n\r\n  const newPhotoLikes = [\r\n    userLiked,\r\n    ...newPhoto.likes\r\n  ];\r\n\r\n  newPhoto.likes = newPhotoLikes;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterUnlikingPhoto = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, userUnlikedId: string): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetPhotoIndex === -1) return null;\r\n\r\n  const newPhoto = {\r\n    ...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]\r\n  };\r\n\r\n  const newPhotoLikes = newPhoto.likes.filter(user => user._id !== userUnlikedId);\r\n\r\n  newPhoto.likes = newPhotoLikes;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterCommentingOnPhoto = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, comment: IComment): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetPhotoIndex === -1) return null;\r\n\r\n  const newPhoto = {\r\n    ...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]\r\n  };\r\n\r\n  const newPhotoComments = [\r\n    comment,\r\n    ...newPhoto.comments\r\n  ];\r\n\r\n  newPhoto.comments = newPhotoComments;\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterDeleteingPhotoComment = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, commentId: string): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetPhotoIndex === -1) return null;\r\n\r\n  const newPhoto = {\r\n    ...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]\r\n  };\r\n\r\n  const newPhotoComments = newPhoto.comments.filter(comment => comment._id !== commentId);\r\n  newPhoto.comments = newPhotoComments;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterLikingPhotoComment = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, commentId: string, userLiked: IPhotoUser): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetAlbumIndex === -1) return null;\r\n  \r\n  const targetCommentIndex = copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex].comments.findIndex(comment => comment._id === commentId);\r\n  if(targetCommentIndex === -1) return null;\r\n\r\n  const newPhotos = [\r\n    ...copiedAlbums[targetAlbumIndex].photos\r\n  ];\r\n\r\n  const updatedPhoto = {...newPhotos[targetPhotoIndex]};\r\n\r\n  const newPhotoComments = [...updatedPhoto.comments];\r\n\r\n  const updatedComment = {...newPhotoComments[targetCommentIndex]};\r\n  const newPhotoCommentLikes = [\r\n    userLiked,\r\n    ...updatedComment.likes\r\n  ];\r\n\r\n  updatedComment.likes = newPhotoCommentLikes;\r\n  updatedPhoto.comments[targetCommentIndex] = updatedComment;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = updatedPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterUnlikingPhotoComment = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, commentId: string, userUnlikedId: string): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetAlbumIndex === -1) return null;\r\n  \r\n  const targetCommentIndex = copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex].comments.findIndex(comment => comment._id === commentId);\r\n  if(targetCommentIndex === -1) return null;\r\n\r\n  const newPhoto = {\r\n    ...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]\r\n  };\r\n\r\n  const newPhotoComment = {...newPhoto.comments[targetCommentIndex]};\r\n  const newPhotoCommentLikes = newPhotoComment.likes.filter(user => user._id !== userUnlikedId);\r\n\r\n  newPhotoComment.likes = newPhotoCommentLikes;\r\n  newPhoto.comments[targetCommentIndex] = newPhotoComment;\r\n\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};\r\n\r\nexport const updateAlbumsAfterChangingPhotoDescription = (oldAlbums: IPhotoAlbum[], targetAlbumId: string, targetPhotoId: string, newPhotoDescription: string): {\r\n  copiedAlbums: IPhotoAlbum[];\r\n  newPhotos: IPhotoAlbum[\"photos\"];\r\n} | null => {\r\n  const copiedAlbums = oldAlbums.map((album) => {\r\n    return deepCloneSelectedAlbum(album);\r\n  });\r\n\r\n  const targetAlbumIndex = copiedAlbums.findIndex(album => album._id === targetAlbumId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const targetPhotoIndex = copiedAlbums[targetAlbumIndex].photos.findIndex(photo => photo._id === targetPhotoId);\r\n  if(targetAlbumIndex === -1) return null;\r\n\r\n  const newPhoto = {...copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex]};\r\n  newPhoto.description = newPhotoDescription;\r\n  copiedAlbums[targetAlbumIndex].photos[targetPhotoIndex] = newPhoto;\r\n\r\n  return {\r\n    copiedAlbums,\r\n    newPhotos: copiedAlbums[targetAlbumIndex].photos\r\n  };\r\n};","import { nameInput } from \"../../config/profilePhotos/profileAlbumNameInput\";\r\nimport { IUsePhotosState, IUsePhotosAction, IUsePhotosActionTypes } from \"./usePhotosTypes\";\r\nimport { deepCloneSelectedAlbum, updateAlbumsAfterAddingPhotosToAlbum, updateAlbumsAfterChangingAlbumName, updateAlbumsAfterChangingPhotoDescription, updateAlbumsAfterCommentingOnPhoto, updateAlbumsAfterDeleteingPhotoComment, updateAlbumsAfterDeletingSinglePhoto, updateAlbumsAfterLikingPhoto, updateAlbumsAfterLikingPhotoComment, updateAlbumsAfterUnlikingPhoto, updateAlbumsAfterUnlikingPhotoComment } from \"./usePhotosUtils\";\r\n\r\nconst resetAlbumModalInfo = {\r\n  albumId: null,\r\n  actionType: null,\r\n  nameInput: {...nameInput},\r\n  photoFiles: [],\r\n  photoPreviews: [],\r\n  photoDescriptions: [],\r\n  modalFormValid: false\r\n};\r\n\r\nconst reducer = (state: IUsePhotosState, action: IUsePhotosAction): IUsePhotosState => {\r\n  switch(action.type) {\r\n    case IUsePhotosActionTypes.ON_PHOTOS_START:\r\n      return {\r\n        ...state,\r\n        photosLoading: true\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTOS_ERROR:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        photosErrorMsg: action.errorMsg\r\n      };\r\n    case IUsePhotosActionTypes.ON_CLEAR_PHOTOS_ERROR:\r\n      return {\r\n        ...state,\r\n        photosErrorMsg: null\r\n      };\r\n    case IUsePhotosActionTypes.ON_GET_PHOTO_ALBUMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        albums: action.albums\r\n      };\r\n    case IUsePhotosActionTypes.ON_SELECT_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        selectedAlbum: deepCloneSelectedAlbum(action.selectedAlbum)\r\n      };\r\n    case IUsePhotosActionTypes.ON_UNSELECT_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        selectedAlbum: null\r\n      };\r\n    case IUsePhotosActionTypes.ON_OPEN_PHOTO_ALBUM_MODAL:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          albumId: action.albumId,\r\n          actionType: action.actionType,\r\n          nameInput: action.targetAlbumName ? {\r\n            ...state.albumModalInfo.nameInput,\r\n            albumName: {\r\n              ...state.albumModalInfo.nameInput.albumName,\r\n              value: action.targetAlbumName,\r\n              valid: true,\r\n              touched: true\r\n            }\r\n          } : state.albumModalInfo.nameInput,\r\n          modalFormValid: action.targetAlbumName ? true : false\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_CLOSE_PHOTO_ALBUM_MODAL:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: resetAlbumModalInfo\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          nameInput: {\r\n            ...state.albumModalInfo.nameInput,\r\n            albumName: {\r\n              ...state.albumModalInfo.nameInput.albumName,\r\n              focused: true,\r\n              touched: true\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          nameInput: {\r\n            ...state.albumModalInfo.nameInput,\r\n            albumName: {\r\n              ...state.albumModalInfo.nameInput.albumName,\r\n              focused: false\r\n            }\r\n          }\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          nameInput: {\r\n            ...state.albumModalInfo.nameInput,\r\n            albumName: {\r\n              ...state.albumModalInfo.nameInput.albumName,\r\n              value: action.inputValue,\r\n              valid: action.inputValue.trim().length > 0\r\n            }\r\n          },\r\n          modalFormValid: action.inputValue.trim().length > 0 || state.albumModalInfo.photoFiles.length > 0 ? true : false\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS:\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          photoFiles: action.photoFiles,\r\n          photoPreviews: action.photoPreviews,\r\n          photoDescriptions: action.photoDescriptions,\r\n          modalFormValid: state.albumModalInfo.nameInput.albumName.value.trim().length > 0 || action.photoFiles.length > 0 ? true : false\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO:\r\n      let photoFilesUpdated = state.albumModalInfo.photoFiles.filter((_, i) => i !== action.photoIndex);\r\n\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          photoFiles: photoFilesUpdated,\r\n          photoPreviews: state.albumModalInfo.photoPreviews.filter((_, i) => i !== action.photoIndex),\r\n          photoDescriptions: state.albumModalInfo.photoDescriptions.filter((_, i) => i !== action.photoIndex),\r\n          modalFormValid: state.albumModalInfo.nameInput.albumName.value.trim().length > 0 || photoFilesUpdated.length > 0 ? true : false\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED:\r\n      const copiedDescriptions = [...state.albumModalInfo.photoDescriptions];\r\n      copiedDescriptions[action.descIndex] = action.descValue;\r\n\r\n      return {\r\n        ...state,\r\n        albumModalInfo: {\r\n          ...state.albumModalInfo,\r\n          photoDescriptions: copiedDescriptions\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_CREATE_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        albums: [\r\n          action.photoAlbum,\r\n          ...state.albums\r\n        ],\r\n        albumModalInfo: resetAlbumModalInfo\r\n      };\r\n    case IUsePhotosActionTypes.ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        albums: updateAlbumsAfterChangingAlbumName(state.albums, action.albumId, action.newName),\r\n        selectedAlbum: state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          albumName: action.newName\r\n        } : null,\r\n        albumModalInfo: resetAlbumModalInfo\r\n      };\r\n    case IUsePhotosActionTypes.ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        albums: updateAlbumsAfterAddingPhotosToAlbum(state.albums, action.albumId, action.updatedPhotos),\r\n        selectedAlbum: state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: action.updatedPhotos\r\n        } : null,\r\n        albumModalInfo: resetAlbumModalInfo\r\n      };\r\n    case IUsePhotosActionTypes.ON_DELETE_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        selectedAlbum: null,\r\n        albums: state.albums.filter(album => album._id !== action.albumToDeleteId)\r\n      };\r\n    case IUsePhotosActionTypes.ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        photosLoading: false,\r\n        selectedAlbum: state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: state.selectedAlbum.photos.filter(photo => photo._id !== action.photoId)\r\n        }\r\n        : null,\r\n        albums: updateAlbumsAfterDeletingSinglePhoto(state.albums, action.albumId, action.photoId)\r\n      };\r\n    case IUsePhotosActionTypes.ON_LIKE_PHOTO_SUCCESS:\r\n      const updateResult = updateAlbumsAfterLikingPhoto(state.albums, action.albumId, action.photoId, action.userLiked);\r\n      return {\r\n        ...state,\r\n        albums: updateResult !== null ? updateResult.copiedAlbums : state.albums,\r\n        selectedAlbum: state.selectedAlbum && updateResult !== null ? {\r\n          ...state.selectedAlbum,\r\n          photos: updateResult.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_UNLIKE_PHOTO_SUCCESS:\r\n      const updatedResults = updateAlbumsAfterUnlikingPhoto(state.albums, action.albumId, action.photoId, action.userUnlikedId);\r\n\r\n      return {\r\n        ...state,\r\n        albums: updatedResults !== null ? updatedResults.copiedAlbums : state.albums,\r\n        selectedAlbum: state.selectedAlbum && updatedResults !== null ? {\r\n          ...state.selectedAlbum,\r\n          photos: updatedResults.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_COMMENT_ON_PHOTO_SUCCESS:\r\n      const updatedState = updateAlbumsAfterCommentingOnPhoto(state.albums, action.albumId, action.photoId, action.comment);\r\n\r\n      return {\r\n        ...state,\r\n        albums: updatedState !== null ? updatedState.copiedAlbums : state.albums,\r\n        selectedAlbum: updatedState !== null && state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: updatedState.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_DELETE_PHOTO_COMMENT_SUCCESS:\r\n      const afterUpdate = updateAlbumsAfterDeleteingPhotoComment(state.albums, action.albumId, action.photoId, action.commentId);\r\n\r\n      return {\r\n        ...state,\r\n        albums: afterUpdate !== null ? afterUpdate.copiedAlbums : state.albums,\r\n        selectedAlbum: state.selectedAlbum && afterUpdate !== null ? {\r\n          ...state.selectedAlbum,\r\n          photos: afterUpdate.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_LIKE_PHOTO_COMMENT_SUCCESS:\r\n      const updated = updateAlbumsAfterLikingPhotoComment(state.albums, action.albumId, action.photoId, action.commentId, action.userLiked);\r\n\r\n      return {\r\n        ...state,\r\n        albums: updated !== null ? updated.copiedAlbums : state.albums,\r\n        selectedAlbum: updated !== null && state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: updated.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_UNLIKE_PHOTO_COMMENT_SUCCESS:\r\n      const updatedSt = updateAlbumsAfterUnlikingPhotoComment(state.albums, action.albumId, action.photoId, action.commentId, action.userUnlikedId);\r\n\r\n      return {\r\n        ...state,\r\n        albums: updatedSt !== null ? updatedSt.copiedAlbums : state.albums,\r\n        selectedAlbum: updatedSt !== null && state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: updatedSt.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS:\r\n      const afterDescChanged = updateAlbumsAfterChangingPhotoDescription(state.albums, action.albumId, action.photoId, action.newDescriptionValue);\r\n\r\n      return {\r\n        ...state,\r\n        albums: afterDescChanged !== null ? afterDescChanged.copiedAlbums : state.albums,\r\n        selectedAlbum: afterDescChanged !== null && state.selectedAlbum ? {\r\n          ...state.selectedAlbum,\r\n          photos: afterDescChanged.newPhotos\r\n        } : null\r\n      };\r\n    case IUsePhotosActionTypes.ON_OPEN_PHOTO_SLIDER:\r\n      return {\r\n        ...state,\r\n        photoSliderInfo: {\r\n          show: true,\r\n          currentPhotoIndex: action.currentPhotoIndex\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_CLOSE_PHOTO_SLIDER:\r\n      return {\r\n        ...state,\r\n        photoSliderInfo: {\r\n          show: false,\r\n          currentPhotoIndex: 0\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_SLIDER_PREV_PHOTO:\r\n      return {\r\n        ...state,\r\n        photoSliderInfo: {\r\n          ...state.photoSliderInfo,\r\n          currentPhotoIndex: state.photoSliderInfo.currentPhotoIndex === 0 ? 0 : state.photoSliderInfo.currentPhotoIndex - 1\r\n        }\r\n      };\r\n    case IUsePhotosActionTypes.ON_SLIDER_NEXT_PHOTO:\r\n      return {\r\n        ...state,\r\n        photoSliderInfo: {\r\n          ...state.photoSliderInfo,\r\n          currentPhotoIndex: !state.selectedAlbum\r\n            ? state.photoSliderInfo.currentPhotoIndex\r\n            : state.photoSliderInfo.currentPhotoIndex === state.selectedAlbum.photos.length - 1\r\n            ? state.photoSliderInfo.currentPhotoIndex\r\n            : state.photoSliderInfo.currentPhotoIndex + 1\r\n        }\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default reducer;","import { ChangeEvent, FormEvent, FormEventHandler, useCallback, useReducer } from \"react\";\r\nimport { nameInput } from \"../../config/profilePhotos/profileAlbumNameInput\";\r\nimport reducer from \"./usePhotosReducer\";\r\nimport { IAddPhotosToAlbumResponse, ICommentOnPhotoResponse, ICreateAlbumResponse, IGetAlbumsResponse, ILikePhotoCommentResponse, ILikePhotoResponse, IPhotoAlbum, IUnlikePhotoCommentResponse, IUnlikePhotoResponse, IUsePhotosActionTypes, IUsePhotosState } from \"./usePhotosTypes\";\r\nimport axiosPhotoAlbum from \"../../axios/axiosPhotoAlbum\";\r\nimport socket from \"../../socketIo\";\r\n\r\nconst initState: IUsePhotosState = {\r\n  photosLoading: false,\r\n  photosErrorMsg: null,\r\n  albums: [],\r\n  selectedAlbum: null,\r\n  albumModalInfo: {\r\n    albumId: null,\r\n    actionType: null,\r\n    nameInput: {...nameInput},\r\n    photoFiles: [],\r\n    photoPreviews: [],\r\n    photoDescriptions: [],\r\n    modalFormValid: false\r\n  },\r\n  photoSliderInfo: {\r\n    show: false,\r\n    currentPhotoIndex: 0\r\n  },\r\n};\r\n\r\nexport const usePhotos = (): {\r\n  photosLoading: boolean;\r\n  photosErrorMsg: string | null;\r\n  onClearPhotosError: () => void;\r\n  albums: IPhotoAlbum[];\r\n  selectedAlbum: IPhotoAlbum | null;\r\n  albumModalInfo: IUsePhotosState[\"albumModalInfo\"];\r\n  photoSliderInfo: IUsePhotosState[\"photoSliderInfo\"];\r\n  onGetPhotoAlbums: (url: string) => Promise<void>;\r\n  onSelectPhotoAlbum: (selectedAlbum: IPhotoAlbum) => void;\r\n  onUnselectPhotoAlbum: () => void;\r\n  onOpenPhotoAlbumModal: (albumId: string | null, actionType: \"create\" | \"editName\" | \"addPhotos\", targetAlbumName: string | null) => void;\r\n  onClosePhotoAlbumModal: () => void;\r\n  onPhotoAlbumModalInputNameFocused: () => void;\r\n  onPhotoAlbumModalInputNameUnfocused: () => void;\r\n  onPhotoAlbumModalInputNameChanged: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  onPhotoAlbumModalUploadPhotos: (event: ChangeEvent<HTMLInputElement>) => void;\r\n  onPhotoAlbumModalRemovePhoto: (photoIndex: number) => void;\r\n  onPhotoAlbumModalPhotoDescriptionChanged: (event: ChangeEvent<HTMLInputElement>, descIndex: number) => void;\r\n  onCreatePhotoAlbum: (event: FormEvent<HTMLFormElement>) => Promise<void>;\r\n  onEditAlbumName: FormEventHandler<HTMLFormElement>;\r\n  onAddPhotosToAlbum: FormEventHandler<HTMLFormElement>;\r\n  onDeletePhotoAlbum: (albumToDeleteId: string) => Promise<void>;\r\n  onDeleteSinglePhotoFromPhotoAlbum: (photoId: string) => Promise<void>;\r\n  onOpenPhotoSlider: (currentPhotoIndex: number) => void;\r\n  onClosePhotoSlider: () => void;\r\n  onSliderPrevPhoto: () => void;\r\n  onSliderNextPhoto: () => void;\r\n  onLikePhoto: (albumId: string, photoId: string) => Promise<void>;\r\n  onUnlikePhoto: (albumId: string, photoId: string) => Promise<void>;\r\n  onCommentOnPhoto: (\r\n    albumId: string, \r\n    photoId: string,\r\n    commentTextValue: string,\r\n    commentPhoto: File | null,\r\n    commentTaggs: {userId: string, userFullName: string}[]\r\n  ) => Promise<void>;\r\n  onDeletePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onLikePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onUnlikePhotoComment: (albumId: string, photoId: string, commentId: string) => Promise<void>;\r\n  onChangePhotoDescription: (albumId: string, photoId: string, newDescriptionValue: string) => Promise<void>;\r\n} => {\r\n  const [state, dispatch] = useReducer(reducer, initState);\r\n\r\n  const onClearPhotosError = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_CLEAR_PHOTOS_ERROR });\r\n  }, []);\r\n\r\n  const onGetPhotoAlbums = useCallback(async(url: string): Promise<void> => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.get<IGetAlbumsResponse>(url, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_GET_PHOTO_ALBUMS_SUCCESS,\r\n        albums: data.photoAlbums\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // ALBUM VIEWING\r\n  const onSelectPhotoAlbum = useCallback((selectedAlbum: IPhotoAlbum): void => {\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_SELECT_PHOTO_ALBUM_SUCCESS,\r\n      selectedAlbum\r\n    });\r\n  }, []);\r\n\r\n  const onUnselectPhotoAlbum = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_UNSELECT_PHOTO_ALBUM_SUCCESS });\r\n  }, []);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // ALBUM MODAL / ACTIONS\r\n  const onOpenPhotoAlbumModal = useCallback((albumId: string | null, actionType: \"create\" | \"editName\" | \"addPhotos\", targetAlbumName: string | null): void => {\r\n    if(!actionType) return;\r\n\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_OPEN_PHOTO_ALBUM_MODAL,\r\n      albumId,\r\n      actionType,\r\n      targetAlbumName\r\n    });\r\n  }, []);\r\n\r\n  const onClosePhotoAlbumModal = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_CLOSE_PHOTO_ALBUM_MODAL });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalInputNameFocused = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalInputNameUnfocused = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalInputNameChanged = useCallback((event: ChangeEvent<HTMLInputElement>): void => {\r\n    const target = event.target;\r\n\r\n    dispatch({ \r\n      type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED,\r\n      inputValue: target.value \r\n    });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalUploadPhotos = useCallback((event: ChangeEvent<HTMLInputElement>): void => {\r\n    const target = event.target;\r\n\r\n    let photoFiles: File[] = [];\r\n    let photoPreviews: string[] = [];\r\n    let emptyDescriptions: string[] = [];\r\n\r\n    if(target.files && target.files.length > 0) {\r\n      photoFiles = Array.from(target.files);\r\n      photoPreviews = photoFiles.map(file => URL.createObjectURL(file));\r\n      photoFiles.forEach(_ => {\r\n        emptyDescriptions.push(\"\");\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS,\r\n      photoFiles,\r\n      photoPreviews,\r\n      photoDescriptions: emptyDescriptions\r\n    });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalRemovePhoto = useCallback((photoIndex: number): void => {\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO,\r\n      photoIndex\r\n    });\r\n  }, []);\r\n\r\n  const onPhotoAlbumModalPhotoDescriptionChanged = useCallback((event: ChangeEvent<HTMLInputElement>, descIndex: number): void => {\r\n    const target = event.target;\r\n\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED,\r\n      descIndex,\r\n      descValue: target.value\r\n    });\r\n  }, []);\r\n  /////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  // ALBUM / PHOTOS ASYNC\r\n  const onCreatePhotoAlbum = useCallback(async(event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    event.preventDefault();\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    const formData = new FormData();\r\n\r\n    const albumName = state.albumModalInfo.nameInput.albumName.value;\r\n\r\n    if(albumName.trim().length === 0) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album name is required\"\r\n      });\r\n    }\r\n\r\n    formData.append(\"name\", albumName);\r\n    formData.append(\"photoDescriptions\", JSON.stringify(state.albumModalInfo.photoDescriptions));\r\n\r\n    if(state.albumModalInfo.photoFiles) {\r\n      state.albumModalInfo.photoFiles.forEach((photo, i) => {\r\n        formData.append(`photo_${i + 1}`, photo);\r\n      });\r\n    }\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<ICreateAlbumResponse>(\"/\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_CREATE_PHOTO_ALBUM_SUCCESS,\r\n        photoAlbum: data.photoAlbum\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, [state.albumModalInfo]);\r\n\r\n  const onEditAlbumName = useCallback(async(event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    event.preventDefault();\r\n\r\n    const newName = state.albumModalInfo.nameInput.albumName.value;\r\n    \r\n    if(newName.trim().length === 0) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album Name must have at least 1 character\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    let albumId: string | null = null;\r\n    if(state.selectedAlbum) {\r\n      albumId = state.selectedAlbum._id;\r\n    } else {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album not found. Try refreshing the page\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      await axiosPhotoAlbum.post(\"/editAlbumName\", {albumId, newName}, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS,\r\n        albumId,\r\n        newName\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, [state.albumModalInfo.nameInput.albumName.value, state.selectedAlbum]);\r\n\r\n  const onAddPhotosToAlbum = useCallback(async(event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n    event.preventDefault();\r\n\r\n    let albumId: string | null = null;\r\n    if(state.albumModalInfo.albumId) {\r\n      albumId = state.albumModalInfo.albumId;\r\n    } else {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album not found. Try refreshing the page\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if(state.albumModalInfo.photoFiles.length === 0) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"No photos selected. Select photos to proceed\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"albumId\", state.albumModalInfo.albumId);\r\n    formData.append(\"photoDescriptions\", JSON.stringify(state.albumModalInfo.photoDescriptions));\r\n\r\n    state.albumModalInfo.photoFiles.forEach((photo, i) => {\r\n      formData.append(`photo_${i + 1}`, photo);\r\n    });\r\n    \r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<IAddPhotosToAlbumResponse>(\"/addPhotosToAlbum\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS,\r\n        albumId: albumId,\r\n        updatedPhotos: data.updatedPhotos\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, [state.albumModalInfo.albumId, state.albumModalInfo.photoFiles, state.albumModalInfo.photoDescriptions]);\r\n\r\n  const onDeletePhotoAlbum = useCallback(async(albumToDeleteId: string): Promise<void> => {\r\n    if(!albumToDeleteId) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album id not found. Try refreshing the page\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    try {\r\n      await axiosPhotoAlbum.delete(`/${albumToDeleteId}`, {\r\n        headers : {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_DELETE_PHOTO_ALBUM_SUCCESS,\r\n        albumToDeleteId\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onDeleteSinglePhotoFromPhotoAlbum = useCallback(async(photoId: string): Promise<void> => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_PHOTOS_START });\r\n\r\n    let albumId: string | null = null;\r\n\r\n    if(state.selectedAlbum) {\r\n      albumId = state.selectedAlbum._id;\r\n    } else {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Album not found. Try refreshing the page\"\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      await axiosPhotoAlbum.delete(`/deletePhoto/${albumId}/${photoId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS,\r\n        albumId,\r\n        photoId\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, [state.selectedAlbum]);\r\n  ///////////////////////////////////////////////////////////////////////\r\n\r\n  // SLIDER STUFF\r\n  const onOpenPhotoSlider = useCallback((currentPhotoIndex: number): void => {\r\n    dispatch({\r\n      type: IUsePhotosActionTypes.ON_OPEN_PHOTO_SLIDER,\r\n      currentPhotoIndex\r\n    });\r\n  }, []);\r\n\r\n  const onClosePhotoSlider = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_CLOSE_PHOTO_SLIDER });\r\n  }, []);\r\n\r\n  const onSliderPrevPhoto = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_SLIDER_PREV_PHOTO });\r\n  }, []);\r\n\r\n  const onSliderNextPhoto = useCallback((): void => {\r\n    dispatch({ type: IUsePhotosActionTypes.ON_SLIDER_NEXT_PHOTO });\r\n  }, []);\r\n  /////////////////////////////////////////////////////////////////////////////\r\n\r\n  // PHOTO LIKES / COMMENTS\r\n  const onLikePhoto = useCallback(async(albumId: string, photoId: string): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<ILikePhotoResponse>(\"/photo/like\", {\r\n        albumId,\r\n        photoId\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_LIKE_PHOTO_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        userLiked: data.userLiked\r\n      });\r\n\r\n      if(data.userNotification) {\r\n        socket.emit(\"sendSingleNotification\", {notification: data.userNotification});\r\n      }\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onUnlikePhoto = useCallback(async(albumId: string, photoId: string): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<IUnlikePhotoResponse>(\"/photo/unlike\", {\r\n        albumId,\r\n        photoId\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_UNLIKE_PHOTO_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        userUnlikedId: data.userUnlikedId\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onCommentOnPhoto = useCallback(async(\r\n    albumId: string, \r\n    photoId: string,\r\n    commentTextValue: string,\r\n    commentPhoto: File | null,\r\n    commentTaggs: {userId: string, userFullName: string}[]\r\n  ): Promise<void> => {\r\n    if(!albumId) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Can't locate photo album id. Try refreshing the page\"\r\n      });\r\n      return;\r\n    }\r\n    if(commentTextValue.trim().length === 0 && !commentPhoto && commentTaggs.length === 0) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Comment requires at least text, photo or 1 tagged friend.\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    if(!photoId) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Photo not found. Maybe it was deleted in the meantime. Try refreshing the page.\"\r\n      });\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"albumId\", albumId);\r\n    formData.append(\"commentText\", commentTextValue);\r\n    formData.append(\"photoId\", photoId);\r\n    if(commentPhoto) {\r\n      formData.append(\"commentPhoto\", commentPhoto);\r\n    }\r\n    formData.append(\"taggs\", JSON.stringify(commentTaggs));\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<ICommentOnPhotoResponse>(\"/photoComment\", formData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"multipart/form-data\"\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_COMMENT_ON_PHOTO_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        comment: data.newComment\r\n      });\r\n\r\n      if(data.userNotification) {\r\n        socket.emit(\"sendSingleNotification\", {notification: data.userNotification});\r\n      }\r\n\r\n      if(data.commentTaggsNotifications && data.commentTaggsNotifications.length > 0) {\r\n        socket.emit(\"sendNotificationList\", {notifications: data.commentTaggsNotifications});\r\n      }\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onDeletePhotoComment = useCallback(async(albumId: string, photoId: string, commentId: string): Promise<void> => {\r\n    if(\r\n      !albumId\r\n      || !photoId\r\n      || !commentId\r\n    ) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: \"Comment not found. Try refreshing the page\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      await axiosPhotoAlbum.delete(`/photoComment/${albumId}/${photoId}/${commentId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_DELETE_PHOTO_COMMENT_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        commentId\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onLikePhotoComment = useCallback(async(albumId: string, photoId: string, commentId: string): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<ILikePhotoCommentResponse>(\"/photoCommentLike\", {\r\n        albumId,\r\n        photoId,\r\n        commentId\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_LIKE_PHOTO_COMMENT_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        commentId,\r\n        userLiked: data.userLiked\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onUnlikePhotoComment = useCallback(async(albumId: string, photoId: string, commentId: string): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try {\r\n      const { data } = await axiosPhotoAlbum.post<IUnlikePhotoCommentResponse>(\"/photoCommentUnlike\", {commentId}, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_UNLIKE_PHOTO_COMMENT_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        commentId,\r\n        userUnlikedId: data.userUnlikedId\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onChangePhotoDescription = useCallback(async(albumId: string, photoId: string, newDescriptionValue: string): Promise<void> => {\r\n    const token = localStorage.getItem(\"socNetAppToken\");\r\n\r\n    try { \r\n      await axiosPhotoAlbum.post(\"/photoDescriptionChange\", {\r\n        albumId,\r\n        photoId,\r\n        newDescription: newDescriptionValue\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS,\r\n        albumId,\r\n        photoId,\r\n        newDescriptionValue\r\n      });\r\n    } catch(error) {\r\n      dispatch({\r\n        type: IUsePhotosActionTypes.ON_PHOTOS_ERROR,\r\n        errorMsg: (error as any).response.data.message\r\n      });\r\n    }\r\n  }, []);\r\n  /////////////////////////////////////////////////////////////////////////////\r\n\r\n  return {\r\n    photosLoading: state.photosLoading,\r\n    photosErrorMsg: state.photosErrorMsg,\r\n    albums: state.albums,\r\n    selectedAlbum: state.selectedAlbum,\r\n    albumModalInfo: state.albumModalInfo,\r\n    photoSliderInfo: state.photoSliderInfo,\r\n    onClearPhotosError,\r\n    onGetPhotoAlbums,\r\n    onSelectPhotoAlbum,\r\n    onUnselectPhotoAlbum,\r\n    onOpenPhotoAlbumModal,\r\n    onClosePhotoAlbumModal,\r\n    onPhotoAlbumModalInputNameFocused,\r\n    onPhotoAlbumModalInputNameUnfocused,\r\n    onPhotoAlbumModalInputNameChanged,\r\n    onPhotoAlbumModalUploadPhotos,\r\n    onPhotoAlbumModalRemovePhoto,\r\n    onPhotoAlbumModalPhotoDescriptionChanged,\r\n    onCreatePhotoAlbum,\r\n    onEditAlbumName,\r\n    onAddPhotosToAlbum,\r\n    onDeletePhotoAlbum,\r\n    onDeleteSinglePhotoFromPhotoAlbum,\r\n    onOpenPhotoSlider,\r\n    onClosePhotoSlider,\r\n    onSliderPrevPhoto,\r\n    onSliderNextPhoto,\r\n    onLikePhoto,\r\n    onUnlikePhoto,\r\n    onCommentOnPhoto,\r\n    onDeletePhotoComment,\r\n    onLikePhotoComment,\r\n    onUnlikePhotoComment,\r\n    onChangePhotoDescription\r\n  };\r\n};","import { allMonths } from \"../config/datesStuff/months\";\r\n\r\nexport const formatDateToYearMonthAndDay = (date: Date): string => {\r\n  const day = new Date(date).getDate();\r\n  const month = new Date(date).getMonth();\r\n  const year = new Date(date).getFullYear();\r\n\r\n  let formatedDate = `${day.toString()}th`;\r\n  if(formatedDate.endsWith(\"1\")) {\r\n    formatedDate = `${formatedDate}st`;\r\n  } else if(formatedDate.endsWith(\"2\")) {\r\n    formatedDate = `${formatedDate}st`;\r\n  } else if(formatedDate.endsWith(\"3\")) {\r\n    formatedDate = `${formatedDate}rd`;\r\n  }\r\n\r\n  return `${allMonths[month]}, ${formatedDate} ${year}`;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"friends__btns\":\"profileFriends_friends__btns__ZVsFt\",\"friends__btn\":\"profileFriends_friends__btn__3PPW0\",\"friends__btn_active\":\"profileFriends_friends__btn_active__x19ok\",\"friends__list\":\"profileFriends_friends__list__i4NpR\",\"friends__list_empty\":\"profileFriends_friends__list_empty__QW8xo\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"profileHeader_header__g6+9M\",\"header__users\":\"profileHeader_header__users__jYi10\",\"header__left\":\"profileHeader_header__left__fswwk\",\"header__auth\":\"profileHeader_header__auth__cT+xD\",\"header__photo\":\"profileHeader_header__photo__eyNu4\",\"header__photo_auth\":\"profileHeader_header__photo_auth__yxLbV\",\"header__photo_auth_img\":\"profileHeader_header__photo_auth_img__5R3dZ\",\"btns\":\"profileHeader_btns__olKFG\",\"label\":\"profileHeader_label__ugSIb\",\"label__text\":\"profileHeader_label__text__j2H7t\",\"remove\":\"profileHeader_remove__y6wgx\",\"header__name\":\"profileHeader_header__name__OBUUJ\",\"header__created\":\"profileHeader_header__created__73ybJ\",\"header__btns\":\"profileHeader_header__btns__oX38r\"};","// extracted by mini-css-extract-plugin\nexport default {\"info__no_profile\":\"profileInfo_info__no_profile__dzdPu\",\"info__top\":\"profileInfo_info__top__anGVF\",\"info__box\":\"profileInfo_info__box__zmWML\",\"no_info\":\"profileInfo_no_info__XeCJ8\",\"info__box_title\":\"profileInfo_info__box_title__uyMCD\",\"info__box_btn\":\"profileInfo_info__box_btn__a6kt5\",\"info__box_basic\":\"profileInfo_info__box_basic__zrwDa\",\"info__box_work\":\"profileInfo_info__box_work__dIMoH\",\"info__box_data\":\"profileInfo_info__box_data__IEklj\",\"info__box_data_item\":\"profileInfo_info__box_data_item__EPKQ6\",\"key\":\"profileInfo_key__+KOP-\",\"value\":\"profileInfo_value__+pexp\",\"info__box_dataflex\":\"profileInfo_info__box_dataflex__uMyBA\",\"info__box_dataflex_subbox\":\"profileInfo_info__box_dataflex_subbox__dmluy\",\"title\":\"profileInfo_title__LtYzV\",\"item\":\"profileInfo_item__NeL0T\",\"item__info\":\"profileInfo_item__info__5C0sl\",\"info__box_dataflex_subbox__stretch\":\"profileInfo_info__box_dataflex_subbox__stretch__77mah\"};","// extracted by mini-css-extract-plugin\nexport default {\"photos__btns\":\"profilePhotos_photos__btns__nTery\",\"photos__btn\":\"profilePhotos_photos__btn__iDyZT\",\"photos__btn_back\":\"profilePhotos_photos__btn_back__z72KT\",\"photos__btn_delete\":\"profilePhotos_photos__btn_delete__FbjzL\",\"photos__btn_icon\":\"profilePhotos_photos__btn_icon__HSCXX\",\"photos__btn_text\":\"profilePhotos_photos__btn_text__JPpey\",\"photos__albums\":\"profilePhotos_photos__albums__-NhXJ\",\"photos__albums_empty\":\"profilePhotos_photos__albums_empty__Fs4Pi\"};"],"names":["axiosPhotoAlbum","axios","baseURL","concat","baseUrl","axiosProfile","props","_jsxs","className","styles","color","onClick","children","_jsx","icon","text","ReactDOM","_Fragment","Backdrop","show","bcgColor","onClose","ModalTitle","friendToSentMessageName","loading","Spinner","onSubmit","onSendMessageToUser","Input","_objectSpread","messageTextInput","messageText","inputGroup","onInputFocus","onMessageTextFocused","onInputUnfocus","onMessageTextUnfocused","onInputChange","onMessageTextChanged","PhotoInput","photoFile","photoPreview","inputText","onPrepareProfilePhoto","onUploadPhoto","onRemoveProfilePhoto","onRemovePhoto","ModalBtn","btnType","btnCustomType","btnText","disabled","value","trim","length","document","getElementById","ProfileSingleFriend","authUser","useTypedSelector","state","auth","src","user","profilePhotoUrl","noImg","alt","fullName","_id","mutualFriends","type","onOpenFriendsModal","isAuthUserList","userRelation","Link","to","whoCanMessageUser","onOpenSendMessageModal","onPrepareFriendOrUserAction","memo","ProfileSelectedAlbum","album","albumName","photos","map","photo","i","isAuthUserAlbum","onPrepareDeletePhoto","secure_url","onOpenPhotoSlider","ProfileSingleAlbum","onViewPhotoAlbum","onPrepareAddPhotosToAlbum","onPrepareDeleteAlbum","activeLink","onChangeActiveLink","dispatch","useDispatch","isAuthUser","noUserImg","htmlFor","accept","id","name","onChange","event","target","files","formData","FormData","append","uploadNewProfilePhoto","removeProfilePhoto","formatDateToYearMonthAndDay","createdAt","ProfileInfoSingleEducation","onPrepareEditItem","useCallback","onPrepareEditProfileInfoItem","education","onPrepareDeleteItem","itemType","title","eduType","onPrepareDeleteProfileInfoItem","status","country","city","graduateDate","IconBtn","stroke","fill","strokeWidth","viewBox","height","width","xmlns","d","ProfileInfoSingleJob","job","jobType","role","company","from","ProfileInfoSingleResidence","residence","residenceType","textAlign","titleText","display","hasPageTitle","titleTextAlign","PageTitle","initState","modalShow","clickedFriendName","useMutualFriends","_useState","useState","_useState2","_slicedToArray","setState","mutualFriendsInfo","mutuals","friends","displayedFriends","filter","friend","includes","onCloseFriendsModal","IUsePhotosActionTypes","nameInput","elementType","IInputElementTypes","inputDisplay","IInputDisplays","attributes","placeholder","label","labelFor","labelShow","labelText","validation","required","focused","touched","valid","errorMsg","deepCloneSelectedAlbum","selectedAlbum","copiedAlbum","copiedAlbumPhotos","likes","like","comments","comment","taggs","tagg","updateAlbumsAfterChangingAlbumName","oldAlbums","targetAlbumId","newAlbumName","copiedAlbums","targetAlbumIndex","findIndex","updateAlbumsAfterAddingPhotosToAlbum","updatedPhotos","updateAlbumsAfterDeletingSinglePhoto","targetPhotoId","newPhotos","resetAlbumModalInfo","albumId","actionType","photoFiles","photoPreviews","photoDescriptions","modalFormValid","action","ON_PHOTOS_START","photosLoading","ON_PHOTOS_ERROR","photosErrorMsg","ON_CLEAR_PHOTOS_ERROR","ON_GET_PHOTO_ALBUMS_SUCCESS","albums","ON_SELECT_PHOTO_ALBUM_SUCCESS","ON_UNSELECT_PHOTO_ALBUM_SUCCESS","ON_OPEN_PHOTO_ALBUM_MODAL","albumModalInfo","targetAlbumName","ON_CLOSE_PHOTO_ALBUM_MODAL","ON_PHOTO_ALBUM_MODAL_INPUT_NAME_FOCUSED","ON_PHOTO_ALBUM_MODAL_INPUT_NAME_UNFOCUSED","ON_PHOTO_ALBUM_MODAL_INPUT_NAME_CHANGED","inputValue","ON_PHOTO_ALBUM_MODAL_UPLOAD_PHOTOS","ON_PHOTO_ALBUM_MODAL_REMOVE_PHOTO","photoFilesUpdated","_","photoIndex","ON_PHOTO_ALBUM_MODAL_PHOTO_DESCRIPTION_CHANGED","copiedDescriptions","_toConsumableArray","descIndex","descValue","ON_CREATE_PHOTO_ALBUM_SUCCESS","photoAlbum","ON_EDIT_PHOTO_ALBUM_NAME_SUCCESS","newName","ON_ADD_PHOTOS_TO_PHOTO_ALBUM_SUCCESS","ON_DELETE_PHOTO_ALBUM_SUCCESS","albumToDeleteId","ON_DELETE_SINGLE_PHOTO_FROM_PHOTO_ALBUM_SUCCESS","photoId","ON_LIKE_PHOTO_SUCCESS","updateResult","userLiked","targetPhotoIndex","newPhoto","newPhotoLikes","updateAlbumsAfterLikingPhoto","ON_UNLIKE_PHOTO_SUCCESS","updatedResults","userUnlikedId","updateAlbumsAfterUnlikingPhoto","ON_COMMENT_ON_PHOTO_SUCCESS","updatedState","newPhotoComments","updateAlbumsAfterCommentingOnPhoto","ON_DELETE_PHOTO_COMMENT_SUCCESS","afterUpdate","commentId","updateAlbumsAfterDeleteingPhotoComment","ON_LIKE_PHOTO_COMMENT_SUCCESS","updated","targetCommentIndex","updatedPhoto","updatedComment","newPhotoCommentLikes","updateAlbumsAfterLikingPhotoComment","ON_UNLIKE_PHOTO_COMMENT_SUCCESS","updatedSt","newPhotoComment","updateAlbumsAfterUnlikingPhotoComment","ON_CHANGE_PHOTO_DESCRIPTION_SUCCESS","afterDescChanged","newPhotoDescription","description","updateAlbumsAfterChangingPhotoDescription","newDescriptionValue","ON_OPEN_PHOTO_SLIDER","photoSliderInfo","currentPhotoIndex","ON_CLOSE_PHOTO_SLIDER","ON_SLIDER_PREV_PHOTO","ON_SLIDER_NEXT_PHOTO","usePhotos","_useReducer","useReducer","reducer","_useReducer2","onClearPhotosError","onGetPhotoAlbums","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","token","_yield$axiosPhotoAlbu","data","wrap","_context","prev","next","localStorage","getItem","headers","Authorization","sent","photoAlbums","t0","response","message","stop","_x","apply","arguments","onSelectPhotoAlbum","onUnselectPhotoAlbum","onOpenPhotoAlbumModal","onClosePhotoAlbumModal","onPhotoAlbumModalInputNameFocused","onPhotoAlbumModalInputNameUnfocused","onPhotoAlbumModalInputNameChanged","onPhotoAlbumModalUploadPhotos","emptyDescriptions","Array","file","URL","createObjectURL","forEach","push","onPhotoAlbumModalRemovePhoto","onPhotoAlbumModalPhotoDescriptionChanged","onCreatePhotoAlbum","_ref2","_callee2","_yield$axiosPhotoAlbu2","_context2","preventDefault","JSON","stringify","_x2","onEditAlbumName","_ref3","_callee3","_context3","abrupt","_x3","onAddPhotosToAlbum","_ref4","_callee4","_yield$axiosPhotoAlbu3","_context4","_x4","onDeletePhotoAlbum","_ref5","_callee5","_context5","_x5","onDeleteSinglePhotoFromPhotoAlbum","_ref6","_callee6","_context6","_x6","onClosePhotoSlider","onSliderPrevPhoto","onSliderNextPhoto","onLikePhoto","_ref7","_callee7","_yield$axiosPhotoAlbu4","_context7","userNotification","socket","notification","_x7","_x8","onUnlikePhoto","_ref8","_callee8","_yield$axiosPhotoAlbu5","_context8","_x9","_x10","onCommentOnPhoto","_ref9","_callee9","commentTextValue","commentPhoto","commentTaggs","_yield$axiosPhotoAlbu6","_context9","newComment","commentTaggsNotifications","notifications","_x11","_x12","_x13","_x14","_x15","onDeletePhotoComment","_ref10","_callee10","_context10","_x16","_x17","_x18","onLikePhotoComment","_ref11","_callee11","_yield$axiosPhotoAlbu7","_context11","_x19","_x20","_x21","onUnlikePhotoComment","_ref12","_callee12","_yield$axiosPhotoAlbu8","_context12","_x22","_x23","_x24","onChangePhotoDescription","_ref13","_callee13","_context13","newDescription","_x25","_x26","_x27","date","day","Date","getDate","month","getMonth","year","getFullYear","formatedDate","toString","endsWith","allMonths"],"sourceRoot":""}